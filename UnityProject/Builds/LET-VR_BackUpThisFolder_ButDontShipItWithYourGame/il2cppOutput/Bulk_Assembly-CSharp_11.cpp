#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "il2cpp-class-internals.h"
#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct VirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct VirtActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct VirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct VirtFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct VirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct VirtFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct VirtFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct GenericVirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct GenericVirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct GenericVirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericVirtActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename R, typename T1>
struct GenericVirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct GenericVirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct GenericVirtFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericVirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct GenericVirtFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct GenericVirtFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct InterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InterfaceActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename R, typename T1>
struct InterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct InterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct InterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct InterfaceFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct InterfaceFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct GenericInterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct GenericInterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
struct GenericInterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericInterfaceActionInvoker6
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename R, typename T1>
struct GenericInterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct GenericInterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct GenericInterfaceFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9>
struct GenericInterfaceFuncInvoker9
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, T9, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8, T9 p9)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, p9, invokeData.method);
	}
};

// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.String
struct String_t;
// System.Text.StringBuilder
struct StringBuilder_t;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// Valve.VR.HmdQuad_t[]
struct HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5;
// Valve.VR.IVRChaperoneSetup/_SetWorkingCollisionBoundsTagsInfo
struct _SetWorkingCollisionBoundsTagsInfo_t7F1BD889ADEEFFE699F064129C30D4F49F938273;
// Valve.VR.IVRChaperoneSetup/_SetWorkingPhysicalBoundsInfo
struct _SetWorkingPhysicalBoundsInfo_tAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3;
// Valve.VR.IVRChaperoneSetup/_SetWorkingPlayAreaSize
struct _SetWorkingPlayAreaSize_t73C6EE98131165C953CE9B4CCC3B15E61853B890;
// Valve.VR.IVRChaperoneSetup/_SetWorkingSeatedZeroPoseToRawTrackingPose
struct _SetWorkingSeatedZeroPoseToRawTrackingPose_t2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF;
// Valve.VR.IVRChaperoneSetup/_SetWorkingStandingZeroPoseToRawTrackingPose
struct _SetWorkingStandingZeroPoseToRawTrackingPose_tA17A471D49E986180E741026CEC7D57B597B636F;
// Valve.VR.IVRCompositor/_CanRenderScene
struct _CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50;
// Valve.VR.IVRCompositor/_ClearLastSubmittedFrame
struct _ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17;
// Valve.VR.IVRCompositor/_ClearSkyboxOverride
struct _ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253;
// Valve.VR.IVRCompositor/_CompositorBringToFront
struct _CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD;
// Valve.VR.IVRCompositor/_CompositorDumpImages
struct _CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E;
// Valve.VR.IVRCompositor/_CompositorGoToBack
struct _CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84;
// Valve.VR.IVRCompositor/_CompositorQuit
struct _CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9;
// Valve.VR.IVRCompositor/_FadeGrid
struct _FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F;
// Valve.VR.IVRCompositor/_FadeToColor
struct _FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D;
// Valve.VR.IVRCompositor/_ForceInterleavedReprojectionOn
struct _ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D;
// Valve.VR.IVRCompositor/_ForceReconnectProcess
struct _ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22;
// Valve.VR.IVRCompositor/_GetCumulativeStats
struct _GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3;
// Valve.VR.IVRCompositor/_GetCurrentFadeColor
struct _GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF;
// Valve.VR.IVRCompositor/_GetCurrentGridAlpha
struct _GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078;
// Valve.VR.IVRCompositor/_GetCurrentSceneFocusProcess
struct _GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF;
// Valve.VR.IVRCompositor/_GetFrameTimeRemaining
struct _GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008;
// Valve.VR.IVRCompositor/_GetFrameTiming
struct _GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3;
// Valve.VR.IVRCompositor/_GetFrameTimings
struct _GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921;
// Valve.VR.IVRCompositor/_GetLastFrameRenderer
struct _GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114;
// Valve.VR.IVRCompositor/_GetLastPoseForTrackedDeviceIndex
struct _GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA;
// Valve.VR.IVRCompositor/_GetLastPoses
struct _GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952;
// Valve.VR.IVRCompositor/_GetMirrorTextureD3D11
struct _GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E;
// Valve.VR.IVRCompositor/_GetMirrorTextureGL
struct _GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B;
// Valve.VR.IVRCompositor/_GetTrackingSpace
struct _GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B;
// Valve.VR.IVRCompositor/_GetVulkanDeviceExtensionsRequired
struct _GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99;
// Valve.VR.IVRCompositor/_GetVulkanInstanceExtensionsRequired
struct _GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036;
// Valve.VR.IVRCompositor/_HideMirrorWindow
struct _HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824;
// Valve.VR.IVRCompositor/_IsFullscreen
struct _IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C;
// Valve.VR.IVRCompositor/_IsMirrorWindowVisible
struct _IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C;
// Valve.VR.IVRCompositor/_LockGLSharedTextureForAccess
struct _LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51;
// Valve.VR.IVRCompositor/_PostPresentHandoff
struct _PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2;
// Valve.VR.IVRCompositor/_ReleaseMirrorTextureD3D11
struct _ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A;
// Valve.VR.IVRCompositor/_ReleaseSharedGLTexture
struct _ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE;
// Valve.VR.IVRCompositor/_SetExplicitTimingMode
struct _SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105;
// Valve.VR.IVRCompositor/_SetSkyboxOverride
struct _SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A;
// Valve.VR.IVRCompositor/_SetTrackingSpace
struct _SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB;
// Valve.VR.IVRCompositor/_ShouldAppRenderWithLowResources
struct _ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD;
// Valve.VR.IVRCompositor/_ShowMirrorWindow
struct _ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847;
// Valve.VR.IVRCompositor/_Submit
struct _Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5;
// Valve.VR.IVRCompositor/_SubmitExplicitTimingData
struct _SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0;
// Valve.VR.IVRCompositor/_SuspendRendering
struct _SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1;
// Valve.VR.IVRCompositor/_UnlockGLSharedTextureForAccess
struct _UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8;
// Valve.VR.IVRCompositor/_WaitGetPoses
struct _WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD;
// Valve.VR.IVRDriverManager/_GetDriverCount
struct _GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92;
// Valve.VR.IVRDriverManager/_GetDriverName
struct _GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C;
// Valve.VR.IVRExtendedDisplay/_GetDXGIOutputInfo
struct _GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12;
// Valve.VR.IVRExtendedDisplay/_GetEyeOutputViewport
struct _GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C;
// Valve.VR.IVRExtendedDisplay/_GetWindowBounds
struct _GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620;
// Valve.VR.IVRNotifications/_CreateNotification
struct _CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7;
// Valve.VR.IVRNotifications/_RemoveNotification
struct _RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E;
// Valve.VR.IVROverlay/_ClearOverlayTexture
struct _ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E;
// Valve.VR.IVROverlay/_CloseMessageOverlay
struct _CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9;
// Valve.VR.IVROverlay/_ComputeOverlayIntersection
struct _ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2;
// Valve.VR.IVROverlay/_CreateDashboardOverlay
struct _CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B;
// Valve.VR.IVROverlay/_CreateOverlay
struct _CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9;
// Valve.VR.IVROverlay/_DestroyOverlay
struct _DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313;
// Valve.VR.IVROverlay/_FindOverlay
struct _FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B;
// Valve.VR.IVROverlay/_GetDashboardOverlaySceneProcess
struct _GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6;
// Valve.VR.IVROverlay/_GetGamepadFocusOverlay
struct _GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F;
// Valve.VR.IVROverlay/_GetHighQualityOverlay
struct _GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF;
// Valve.VR.IVROverlay/_GetKeyboardText
struct _GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7;
// Valve.VR.IVROverlay/_GetOverlayAlpha
struct _GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99;
// Valve.VR.IVROverlay/_GetOverlayAutoCurveDistanceRangeInMeters
struct _GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454;
// Valve.VR.IVROverlay/_GetOverlayColor
struct _GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38;
// Valve.VR.IVROverlay/_GetOverlayDualAnalogTransform
struct _GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3;
// Valve.VR.IVROverlay/_GetOverlayErrorNameFromEnum
struct _GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51;
// Valve.VR.IVROverlay/_GetOverlayFlag
struct _GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B;
// Valve.VR.IVROverlay/_GetOverlayFlags
struct _GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8;
// Valve.VR.IVROverlay/_GetOverlayImageData
struct _GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927;
// Valve.VR.IVROverlay/_GetOverlayInputMethod
struct _GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E;
// Valve.VR.IVROverlay/_GetOverlayKey
struct _GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42;
// Valve.VR.IVROverlay/_GetOverlayMouseScale
struct _GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521;
// Valve.VR.IVROverlay/_GetOverlayName
struct _GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98;
// Valve.VR.IVROverlay/_GetOverlayRenderModel
struct _GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09;
// Valve.VR.IVROverlay/_GetOverlayRenderingPid
struct _GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7;
// Valve.VR.IVROverlay/_GetOverlaySortOrder
struct _GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408;
// Valve.VR.IVROverlay/_GetOverlayTexelAspect
struct _GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7;
// Valve.VR.IVROverlay/_GetOverlayTexture
struct _GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73;
// Valve.VR.IVROverlay/_GetOverlayTextureBounds
struct _GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467;
// Valve.VR.IVROverlay/_GetOverlayTextureColorSpace
struct _GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D;
// Valve.VR.IVROverlay/_GetOverlayTextureSize
struct _GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62;
// Valve.VR.IVROverlay/_GetOverlayTransformAbsolute
struct _GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0;
// Valve.VR.IVROverlay/_GetOverlayTransformOverlayRelative
struct _GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38;
// Valve.VR.IVROverlay/_GetOverlayTransformTrackedDeviceComponent
struct _GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF;
// Valve.VR.IVROverlay/_GetOverlayTransformTrackedDeviceRelative
struct _GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B;
// Valve.VR.IVROverlay/_GetOverlayTransformType
struct _GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163;
// Valve.VR.IVROverlay/_GetOverlayWidthInMeters
struct _GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36;
// Valve.VR.IVROverlay/_GetPrimaryDashboardDevice
struct _GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C;
// Valve.VR.IVROverlay/_GetTransformForOverlayCoordinates
struct _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA;
// Valve.VR.IVROverlay/_HideKeyboard
struct _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9;
// Valve.VR.IVROverlay/_HideOverlay
struct _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC;
// Valve.VR.IVROverlay/_IsActiveDashboardOverlay
struct _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B;
// Valve.VR.IVROverlay/_IsDashboardVisible
struct _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C;
// Valve.VR.IVROverlay/_IsHoverTargetOverlay
struct _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692;
// Valve.VR.IVROverlay/_IsOverlayVisible
struct _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6;
// Valve.VR.IVROverlay/_MoveGamepadFocusToNeighbor
struct _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F;
// Valve.VR.IVROverlay/_PollNextOverlayEvent
struct _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399;
// Valve.VR.IVROverlay/_ReleaseNativeOverlayHandle
struct _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98;
// Valve.VR.IVROverlay/_SetDashboardOverlaySceneProcess
struct _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C;
// Valve.VR.IVROverlay/_SetGamepadFocusOverlay
struct _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377;
// Valve.VR.IVROverlay/_SetHighQualityOverlay
struct _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C;
// Valve.VR.IVROverlay/_SetKeyboardPositionForOverlay
struct _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF;
// Valve.VR.IVROverlay/_SetKeyboardTransformAbsolute
struct _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA;
// Valve.VR.IVROverlay/_SetOverlayAlpha
struct _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2;
// Valve.VR.IVROverlay/_SetOverlayAutoCurveDistanceRangeInMeters
struct _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963;
// Valve.VR.IVROverlay/_SetOverlayColor
struct _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063;
// Valve.VR.IVROverlay/_SetOverlayDualAnalogTransform
struct _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A;
// Valve.VR.IVROverlay/_SetOverlayFlag
struct _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E;
// Valve.VR.IVROverlay/_SetOverlayFromFile
struct _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F;
// Valve.VR.IVROverlay/_SetOverlayInputMethod
struct _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12;
// Valve.VR.IVROverlay/_SetOverlayIntersectionMask
struct _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04;
// Valve.VR.IVROverlay/_SetOverlayMouseScale
struct _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65;
// Valve.VR.IVROverlay/_SetOverlayName
struct _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C;
// Valve.VR.IVROverlay/_SetOverlayNeighbor
struct _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D;
// Valve.VR.IVROverlay/_SetOverlayRaw
struct _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9;
// Valve.VR.IVROverlay/_SetOverlayRenderModel
struct _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050;
// Valve.VR.IVROverlay/_SetOverlayRenderingPid
struct _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46;
// Valve.VR.IVROverlay/_SetOverlaySortOrder
struct _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43;
// Valve.VR.IVROverlay/_SetOverlayTexelAspect
struct _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E;
// Valve.VR.IVROverlay/_SetOverlayTexture
struct _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C;
// Valve.VR.IVROverlay/_SetOverlayTextureBounds
struct _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E;
// Valve.VR.IVROverlay/_SetOverlayTextureColorSpace
struct _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F;
// Valve.VR.IVROverlay/_SetOverlayTransformAbsolute
struct _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06;
// Valve.VR.IVROverlay/_SetOverlayTransformOverlayRelative
struct _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171;
// Valve.VR.IVROverlay/_SetOverlayTransformTrackedDeviceComponent
struct _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8;
// Valve.VR.IVROverlay/_SetOverlayTransformTrackedDeviceRelative
struct _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7;
// Valve.VR.IVROverlay/_SetOverlayWidthInMeters
struct _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184;
// Valve.VR.IVROverlay/_ShowDashboard
struct _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911;
// Valve.VR.IVROverlay/_ShowKeyboard
struct _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1;
// Valve.VR.IVROverlay/_ShowKeyboardForOverlay
struct _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6;
// Valve.VR.IVROverlay/_ShowMessageOverlay
struct _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F;
// Valve.VR.IVROverlay/_ShowOverlay
struct _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61;
// Valve.VR.Texture_t[]
struct Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E;
// Valve.VR.TrackedDevicePose_t[]
struct TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156;

extern RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
extern RuntimeClass* Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4_il2cpp_TypeInfo_var;
extern RuntimeClass* Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236_il2cpp_TypeInfo_var;
extern RuntimeClass* EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_il2cpp_TypeInfo_var;
extern RuntimeClass* EDualAnalogWhich_t26DB6059FD57DBF15F7F416304BF27A036E14F4C_il2cpp_TypeInfo_var;
extern RuntimeClass* ETextureType_t47A335610F8DC272C02D381BCEEE184C17B0BD17_il2cpp_TypeInfo_var;
extern RuntimeClass* ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRCompositorTimingMode_t62616F6C9A8D91140EF20E4E8A36122EA8CD3695_il2cpp_TypeInfo_var;
extern RuntimeClass* EVREye_t4097B73599986F5B774296C51091EF53A629C2FD_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRNotificationStyle_t34E78DE1E5386975ACBBCB0BD8731BD413AC951A_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRNotificationType_t9D531A4C057BF14A85B73F26046221CCAB26D2D9_il2cpp_TypeInfo_var;
extern RuntimeClass* EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRSubmitFlags_t9629FE63CBD4B11E035117494981D038C16B301B_il2cpp_TypeInfo_var;
extern RuntimeClass* HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5_il2cpp_TypeInfo_var;
extern RuntimeClass* HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var;
extern RuntimeClass* HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_il2cpp_TypeInfo_var;
extern RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
extern RuntimeClass* IntPtr_t_il2cpp_TypeInfo_var;
extern RuntimeClass* NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609_il2cpp_TypeInfo_var;
extern RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
extern RuntimeClass* Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D_il2cpp_TypeInfo_var;
extern RuntimeClass* TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6_il2cpp_TypeInfo_var;
extern RuntimeClass* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var;
extern RuntimeClass* UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var;
extern RuntimeClass* VROverlayFlags_t00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_il2cpp_TypeInfo_var;
extern RuntimeClass* VROverlayInputMethod_t92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_il2cpp_TypeInfo_var;
extern RuntimeClass* VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE_il2cpp_TypeInfo_var;
extern RuntimeClass* VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354_il2cpp_TypeInfo_var;
extern RuntimeClass* VROverlayTransformType_tE05C52CE902B086FBE0377133694A58DA911431E_il2cpp_TypeInfo_var;
extern RuntimeClass* VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813_il2cpp_TypeInfo_var;
extern RuntimeClass* _CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50_il2cpp_TypeInfo_var;
extern RuntimeClass* _ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17_il2cpp_TypeInfo_var;
extern RuntimeClass* _ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E_il2cpp_TypeInfo_var;
extern RuntimeClass* _ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253_il2cpp_TypeInfo_var;
extern RuntimeClass* _CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9_il2cpp_TypeInfo_var;
extern RuntimeClass* _CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD_il2cpp_TypeInfo_var;
extern RuntimeClass* _CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E_il2cpp_TypeInfo_var;
extern RuntimeClass* _CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84_il2cpp_TypeInfo_var;
extern RuntimeClass* _CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9_il2cpp_TypeInfo_var;
extern RuntimeClass* _ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2_il2cpp_TypeInfo_var;
extern RuntimeClass* _CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B_il2cpp_TypeInfo_var;
extern RuntimeClass* _CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7_il2cpp_TypeInfo_var;
extern RuntimeClass* _CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9_il2cpp_TypeInfo_var;
extern RuntimeClass* _DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313_il2cpp_TypeInfo_var;
extern RuntimeClass* _FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F_il2cpp_TypeInfo_var;
extern RuntimeClass* _FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D_il2cpp_TypeInfo_var;
extern RuntimeClass* _FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B_il2cpp_TypeInfo_var;
extern RuntimeClass* _ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D_il2cpp_TypeInfo_var;
extern RuntimeClass* _ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620_il2cpp_TypeInfo_var;
extern RuntimeClass* _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_il2cpp_TypeInfo_var;
extern RuntimeClass* _HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824_il2cpp_TypeInfo_var;
extern RuntimeClass* _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_il2cpp_TypeInfo_var;
extern RuntimeClass* _LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51_il2cpp_TypeInfo_var;
extern RuntimeClass* _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_il2cpp_TypeInfo_var;
extern RuntimeClass* _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399_il2cpp_TypeInfo_var;
extern RuntimeClass* _PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2_il2cpp_TypeInfo_var;
extern RuntimeClass* _ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A_il2cpp_TypeInfo_var;
extern RuntimeClass* _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_il2cpp_TypeInfo_var;
extern RuntimeClass* _ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE_il2cpp_TypeInfo_var;
extern RuntimeClass* _RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61_il2cpp_TypeInfo_var;
extern RuntimeClass* _SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0_il2cpp_TypeInfo_var;
extern RuntimeClass* _Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5_il2cpp_TypeInfo_var;
extern RuntimeClass* _SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1_il2cpp_TypeInfo_var;
extern RuntimeClass* _UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8_il2cpp_TypeInfo_var;
extern RuntimeClass* _WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD_il2cpp_TypeInfo_var;
extern const uint32_t IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t _ClearOverlayTexture_BeginInvoke_m8975E6A1256800A855D16DE4A14F904E3B6356B6_MetadataUsageId;
extern const uint32_t _ComputeOverlayIntersection_BeginInvoke_m27561D95C52A8904C90CC369BB6057215AC391C0_MetadataUsageId;
extern const uint32_t _CreateDashboardOverlay_BeginInvoke_mFCF0D9B288403ECF1BF28C2C4A0EB240BDD17710_MetadataUsageId;
extern const uint32_t _CreateNotification_BeginInvoke_m7052BB05FDA4E0002F9A3F9E4EC63F7DA5696D92_MetadataUsageId;
extern const uint32_t _CreateOverlay_BeginInvoke_m2D3D6C6458E3DA0EE365A8AF5F1590BB0F71AD75_MetadataUsageId;
extern const uint32_t _DestroyOverlay_BeginInvoke_m774F18C2CDAC494A6A58BED4C9D0ECD4A831E843_MetadataUsageId;
extern const uint32_t _FadeGrid_BeginInvoke_m11CB69F61BF5155423B773BAD5DB326E1B989B7E_MetadataUsageId;
extern const uint32_t _FadeToColor_BeginInvoke_m324D8B0FEF135F5032DADF4A0A8D53E1F1B4F352_MetadataUsageId;
extern const uint32_t _FindOverlay_BeginInvoke_m6C74EED3A76448A5BBD39CB1907108F9BF384D74_MetadataUsageId;
extern const uint32_t _ForceInterleavedReprojectionOn_BeginInvoke_m42A36CC5B939C99B580063CFFA47D5E5D451D93B_MetadataUsageId;
extern const uint32_t _GetCumulativeStats_BeginInvoke_m30D259679A7834DAEA69672C8B6382AF077A652E_MetadataUsageId;
extern const uint32_t _GetCurrentFadeColor_BeginInvoke_mB68AD166F5C96805297761DC985619DFDE4168E4_MetadataUsageId;
extern const uint32_t _GetDXGIOutputInfo_BeginInvoke_m2CF3CC65FE5FDBB6C6EA763E0ED1481B533F11DC_MetadataUsageId;
extern const uint32_t _GetDashboardOverlaySceneProcess_BeginInvoke_mA94C0065B2921FFF09BE01094D15B82563972D27_MetadataUsageId;
extern const uint32_t _GetDriverName_BeginInvoke_mE1BBF3EE208F2CA0B9053FE949A8A0EAF8F4E552_MetadataUsageId;
extern const uint32_t _GetEyeOutputViewport_BeginInvoke_mA711D5E7E3BEB40F1C0BFE1C706A596FFEB6036C_MetadataUsageId;
extern const uint32_t _GetFrameTiming_BeginInvoke_mC622BE60AFBB1874D53E09AB5391FD24845193E1_MetadataUsageId;
extern const uint32_t _GetFrameTimings_BeginInvoke_mCB5237158FFAFDBE228F896328F66EA7F857EB0F_MetadataUsageId;
extern const uint32_t _GetKeyboardText_BeginInvoke_m206A3641D9DD83D32BAC052C253F3D9B2AF06C15_MetadataUsageId;
extern const uint32_t _GetLastPoseForTrackedDeviceIndex_BeginInvoke_m1BDB80A09CD3B8E53A895D2EF8C16605A7FAF944_MetadataUsageId;
extern const uint32_t _GetLastPoses_BeginInvoke_m819BE9A57EF7E3793E3408C9AB20FE6566C4A2D3_MetadataUsageId;
extern const uint32_t _GetMirrorTextureD3D11_BeginInvoke_m83FBB7DD0F00AB1B7FF88F6AAE0C8C8DCC4BD2E7_MetadataUsageId;
extern const uint32_t _GetMirrorTextureGL_BeginInvoke_m4661CDB6AA9222D2A9FBD29CCE52C08FF009A69D_MetadataUsageId;
extern const uint32_t _GetOverlayAlpha_BeginInvoke_m34F8F530AC48D1133126CA69B0D99C2ECE843D0D_MetadataUsageId;
extern const uint32_t _GetOverlayAutoCurveDistanceRangeInMeters_BeginInvoke_mED0B2F8F4652E61F226EDB5D84C97AD9D25E5D2B_MetadataUsageId;
extern const uint32_t _GetOverlayColor_BeginInvoke_mAE46BE0ED0C63882693A2F2C4F6ADF739991403F_MetadataUsageId;
extern const uint32_t _GetOverlayDualAnalogTransform_BeginInvoke_m831A471126532C84D096B423F3CB10DEB05E096C_MetadataUsageId;
extern const uint32_t _GetOverlayErrorNameFromEnum_BeginInvoke_m89757B0C3241EC45A50AAF62F063728F3BF41EDE_MetadataUsageId;
extern const uint32_t _GetOverlayFlag_BeginInvoke_m0F087830FECE97E96127D44DE7871E63B1A115A8_MetadataUsageId;
extern const uint32_t _GetOverlayFlags_BeginInvoke_m2362B070DEC0BFF86CB68B915F0CF7CC6B910D4F_MetadataUsageId;
extern const uint32_t _GetOverlayImageData_BeginInvoke_mBE07BA45D4A0138491315246D8943D6A2584891E_MetadataUsageId;
extern const uint32_t _GetOverlayInputMethod_BeginInvoke_mEA76A7789803C833712CF2F16EA035BD9BCA2ED5_MetadataUsageId;
extern const uint32_t _GetOverlayKey_BeginInvoke_mAC62C06D34208DA4E2ED22909ABCD1112DBA7004_MetadataUsageId;
extern const uint32_t _GetOverlayMouseScale_BeginInvoke_mE3752A916D84C5C539B32FEF3F8494B1FDF98A91_MetadataUsageId;
extern const uint32_t _GetOverlayName_BeginInvoke_m59A7811FD9A3C347DDF1804F51C95A08366F12F3_MetadataUsageId;
extern const uint32_t _GetOverlayRenderModel_BeginInvoke_m47A93217C8772D6EEDEA66EE3AD42E1131A1BD90_MetadataUsageId;
extern const uint32_t _GetOverlayRenderingPid_BeginInvoke_m74E221D50FE171FC1639C8972C9D236EC8163AE4_MetadataUsageId;
extern const uint32_t _GetOverlaySortOrder_BeginInvoke_mB05B3F4B3B74BF3BA68BBD8360DFF7DE4E3B00D9_MetadataUsageId;
extern const uint32_t _GetOverlayTexelAspect_BeginInvoke_mBFC7A51B03BE4A374F9D63F9CFF80665D7860F12_MetadataUsageId;
extern const uint32_t _GetOverlayTextureBounds_BeginInvoke_mF74550F664328FB9F0CF169B7DD85450A793ABBD_MetadataUsageId;
extern const uint32_t _GetOverlayTextureColorSpace_BeginInvoke_m4578E77DC8FBC84F315DCE919B66F970BC54EA20_MetadataUsageId;
extern const uint32_t _GetOverlayTextureSize_BeginInvoke_m985CA2665A9DBEE6725CA63E6F4B9F5B55001096_MetadataUsageId;
extern const uint32_t _GetOverlayTexture_BeginInvoke_mE06C83C573532DE53E6DEDD55869531CC288BF68_MetadataUsageId;
extern const uint32_t _GetOverlayTransformAbsolute_BeginInvoke_m2470499BD6B5F40BBE9FAADDD7D3C20F170450F9_MetadataUsageId;
extern const uint32_t _GetOverlayTransformOverlayRelative_BeginInvoke_mC2CCBA89AA370AB45C2CE96486795143E8F5DD70_MetadataUsageId;
extern const uint32_t _GetOverlayTransformTrackedDeviceComponent_BeginInvoke_mB8FAA9D6CCC8FD9854F20B8B4A0E8D08FE04FE16_MetadataUsageId;
extern const uint32_t _GetOverlayTransformTrackedDeviceRelative_BeginInvoke_m29B02D0C77058C01975086D88E1B91446FCC9654_MetadataUsageId;
extern const uint32_t _GetOverlayTransformType_BeginInvoke_mB3B9499B11D2E499633E731CDB75C436ADFC47B2_MetadataUsageId;
extern const uint32_t _GetOverlayWidthInMeters_BeginInvoke_mFFC803F2D21006C2BCB34B5A9F77C5DC696CAA85_MetadataUsageId;
extern const uint32_t _GetVulkanDeviceExtensionsRequired_BeginInvoke_m8DA3F5D290360C36D9A831EC9D6CF0464E23AAA5_MetadataUsageId;
extern const uint32_t _GetVulkanInstanceExtensionsRequired_BeginInvoke_m9F47F6543FE7EDA2D94CA849ACC12E69AB7A5239_MetadataUsageId;
extern const uint32_t _GetWindowBounds_BeginInvoke_m60E23DD224A5DAD965DD519A51C7972CA63B8D7D_MetadataUsageId;
extern const uint32_t _LockGLSharedTextureForAccess_BeginInvoke_m704B70D081FEAB93183E1C49EBAD608F009196B9_MetadataUsageId;
extern const uint32_t _ReleaseMirrorTextureD3D11_BeginInvoke_m255539AADE845A16499A67D98571C2667423844C_MetadataUsageId;
extern const uint32_t _ReleaseSharedGLTexture_BeginInvoke_m30DBF07ECDA7DE2F20AA85B62D6A66A946E5E8D7_MetadataUsageId;
extern const uint32_t _RemoveNotification_BeginInvoke_m5B7B5F8E00ED1F9D1ED6C426DE701408A9A89498_MetadataUsageId;
extern const uint32_t _SetExplicitTimingMode_BeginInvoke_mABB0028FC5457B81CA673893D714C43C474DC38E_MetadataUsageId;
extern const uint32_t _SetSkyboxOverride_BeginInvoke_m052DC57F2AFE4E7DCB88371EEA88CA1396E218A5_MetadataUsageId;
extern const uint32_t _SetTrackingSpace_BeginInvoke_m61AB989DB6E0EF89950AC1AE9C7FB39B4F7E5BF0_MetadataUsageId;
extern const uint32_t _SetWorkingCollisionBoundsTagsInfo_BeginInvoke_mDFFE343C65C960EB44885ACEF9D917FB8BF4A884_MetadataUsageId;
extern const uint32_t _SetWorkingPhysicalBoundsInfo_BeginInvoke_m6EE6627B972A71906C106DA4F2D73119094943F9_MetadataUsageId;
extern const uint32_t _SetWorkingPlayAreaSize_BeginInvoke_m99E7A6237BC7015FFBB75F5FD01FE8C29D768D44_MetadataUsageId;
extern const uint32_t _SetWorkingSeatedZeroPoseToRawTrackingPose_BeginInvoke_m09AD37C2BE46C68BD9A095FD4869EA2FE3294545_MetadataUsageId;
extern const uint32_t _SetWorkingStandingZeroPoseToRawTrackingPose_BeginInvoke_mA333E0C2ED441DD0CB27141521B04D719F62647F_MetadataUsageId;
extern const uint32_t _Submit_BeginInvoke_m515D5FE4D4E826439B42B4ACDC2A23744B72E8E3_MetadataUsageId;
extern const uint32_t _SuspendRendering_BeginInvoke_m7B555DDD0CCEB60363F69712B42FCC64E510AEE8_MetadataUsageId;
extern const uint32_t _UnlockGLSharedTextureForAccess_BeginInvoke_m2C44EA43EBB341E6A3F2EAE448B57F7248B510A0_MetadataUsageId;
extern const uint32_t _WaitGetPoses_BeginInvoke_m84FCF0DA075232CC410959A5542271C80B165293_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;

struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5;
struct Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E;
struct TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156;


#ifndef RUNTIMEOBJECT_H
#define RUNTIMEOBJECT_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // RUNTIMEOBJECT_H
struct Il2CppArrayBounds;
#ifndef RUNTIMEARRAY_H
#define RUNTIMEARRAY_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Array

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // RUNTIMEARRAY_H
#ifndef STRING_T_H
#define STRING_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.String
struct  String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((&___Empty_5), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // STRING_T_H
#ifndef STRINGBUILDER_T_H
#define STRINGBUILDER_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Text.StringBuilder
struct  StringBuilder_t  : public RuntimeObject
{
public:
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t * ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;

public:
	inline static int32_t get_offset_of_m_ChunkChars_0() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkChars_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_m_ChunkChars_0() const { return ___m_ChunkChars_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_m_ChunkChars_0() { return &___m_ChunkChars_0; }
	inline void set_m_ChunkChars_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___m_ChunkChars_0 = value;
		Il2CppCodeGenWriteBarrier((&___m_ChunkChars_0), value);
	}

	inline static int32_t get_offset_of_m_ChunkPrevious_1() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkPrevious_1)); }
	inline StringBuilder_t * get_m_ChunkPrevious_1() const { return ___m_ChunkPrevious_1; }
	inline StringBuilder_t ** get_address_of_m_ChunkPrevious_1() { return &___m_ChunkPrevious_1; }
	inline void set_m_ChunkPrevious_1(StringBuilder_t * value)
	{
		___m_ChunkPrevious_1 = value;
		Il2CppCodeGenWriteBarrier((&___m_ChunkPrevious_1), value);
	}

	inline static int32_t get_offset_of_m_ChunkLength_2() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkLength_2)); }
	inline int32_t get_m_ChunkLength_2() const { return ___m_ChunkLength_2; }
	inline int32_t* get_address_of_m_ChunkLength_2() { return &___m_ChunkLength_2; }
	inline void set_m_ChunkLength_2(int32_t value)
	{
		___m_ChunkLength_2 = value;
	}

	inline static int32_t get_offset_of_m_ChunkOffset_3() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkOffset_3)); }
	inline int32_t get_m_ChunkOffset_3() const { return ___m_ChunkOffset_3; }
	inline int32_t* get_address_of_m_ChunkOffset_3() { return &___m_ChunkOffset_3; }
	inline void set_m_ChunkOffset_3(int32_t value)
	{
		___m_ChunkOffset_3 = value;
	}

	inline static int32_t get_offset_of_m_MaxCapacity_4() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_MaxCapacity_4)); }
	inline int32_t get_m_MaxCapacity_4() const { return ___m_MaxCapacity_4; }
	inline int32_t* get_address_of_m_MaxCapacity_4() { return &___m_MaxCapacity_4; }
	inline void set_m_MaxCapacity_4(int32_t value)
	{
		___m_MaxCapacity_4 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // STRINGBUILDER_T_H
#ifndef VALUETYPE_T4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_H
#define VALUETYPE_T4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.ValueType
struct  ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};
#endif // VALUETYPE_T4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_H
#ifndef BOOLEAN_TB53F6830F670160873277339AA58F15CAED4399C_H
#define BOOLEAN_TB53F6830F670160873277339AA58F15CAED4399C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Boolean
struct  Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((&___TrueString_5), value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((&___FalseString_6), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // BOOLEAN_TB53F6830F670160873277339AA58F15CAED4399C_H
#ifndef BYTE_TF87C579059BD4633E6840EBBBEEF899C6E33EF07_H
#define BYTE_TF87C579059BD4633E6840EBBBEEF899C6E33EF07_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Byte
struct  Byte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07 
{
public:
	// System.Byte System.Byte::m_value
	uint8_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Byte_tF87C579059BD4633E6840EBBBEEF899C6E33EF07, ___m_value_0)); }
	inline uint8_t get_m_value_0() const { return ___m_value_0; }
	inline uint8_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint8_t value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // BYTE_TF87C579059BD4633E6840EBBBEEF899C6E33EF07_H
#ifndef ENUM_T2AF27C02B8653AE29442467390005ABC74D8F521_H
#define ENUM_T2AF27C02B8653AE29442467390005ABC74D8F521_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Enum
struct  Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((&___enumSeperatorCharArray_0), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};
#endif // ENUM_T2AF27C02B8653AE29442467390005ABC74D8F521_H
#ifndef INT32_T585191389E07734F19F3156FF88FB3EF4800D102_H
#define INT32_T585191389E07734F19F3156FF88FB3EF4800D102_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Int32
struct  Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // INT32_T585191389E07734F19F3156FF88FB3EF4800D102_H
#ifndef INTPTR_T_H
#define INTPTR_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.IntPtr
struct  IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // INTPTR_T_H
#ifndef SINGLE_TDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_H
#define SINGLE_TDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Single
struct  Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // SINGLE_TDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_H
#ifndef UINT32_T4980FA09003AFAAB5A6E361BA2748EA9A005709B_H
#define UINT32_T4980FA09003AFAAB5A6E361BA2748EA9A005709B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.UInt32
struct  UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // UINT32_T4980FA09003AFAAB5A6E361BA2748EA9A005709B_H
#ifndef UINT64_TA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_H
#define UINT64_TA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.UInt64
struct  UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // UINT64_TA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_H
#ifndef VOID_T22962CB4C05B1D89B55A6E1139F0E87A90987017_H
#define VOID_T22962CB4C05B1D89B55A6E1139F0E87A90987017_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Void
struct  Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VOID_T22962CB4C05B1D89B55A6E1139F0E87A90987017_H
#ifndef COMPOSITOR_CUMULATIVESTATS_T41A337C26B150FB6064D9961160C755B427016E4_H
#define COMPOSITOR_CUMULATIVESTATS_T41A337C26B150FB6064D9961160C755B427016E4_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.Compositor_CumulativeStats
struct  Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 
{
public:
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nPid
	uint32_t ___m_nPid_0;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumFramePresents
	uint32_t ___m_nNumFramePresents_1;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumDroppedFrames
	uint32_t ___m_nNumDroppedFrames_2;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumReprojectedFrames
	uint32_t ___m_nNumReprojectedFrames_3;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumFramePresentsOnStartup
	uint32_t ___m_nNumFramePresentsOnStartup_4;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumDroppedFramesOnStartup
	uint32_t ___m_nNumDroppedFramesOnStartup_5;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumReprojectedFramesOnStartup
	uint32_t ___m_nNumReprojectedFramesOnStartup_6;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumLoading
	uint32_t ___m_nNumLoading_7;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumFramePresentsLoading
	uint32_t ___m_nNumFramePresentsLoading_8;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumDroppedFramesLoading
	uint32_t ___m_nNumDroppedFramesLoading_9;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumReprojectedFramesLoading
	uint32_t ___m_nNumReprojectedFramesLoading_10;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumTimedOut
	uint32_t ___m_nNumTimedOut_11;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumFramePresentsTimedOut
	uint32_t ___m_nNumFramePresentsTimedOut_12;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumDroppedFramesTimedOut
	uint32_t ___m_nNumDroppedFramesTimedOut_13;
	// System.UInt32 Valve.VR.Compositor_CumulativeStats::m_nNumReprojectedFramesTimedOut
	uint32_t ___m_nNumReprojectedFramesTimedOut_14;

public:
	inline static int32_t get_offset_of_m_nPid_0() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nPid_0)); }
	inline uint32_t get_m_nPid_0() const { return ___m_nPid_0; }
	inline uint32_t* get_address_of_m_nPid_0() { return &___m_nPid_0; }
	inline void set_m_nPid_0(uint32_t value)
	{
		___m_nPid_0 = value;
	}

	inline static int32_t get_offset_of_m_nNumFramePresents_1() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumFramePresents_1)); }
	inline uint32_t get_m_nNumFramePresents_1() const { return ___m_nNumFramePresents_1; }
	inline uint32_t* get_address_of_m_nNumFramePresents_1() { return &___m_nNumFramePresents_1; }
	inline void set_m_nNumFramePresents_1(uint32_t value)
	{
		___m_nNumFramePresents_1 = value;
	}

	inline static int32_t get_offset_of_m_nNumDroppedFrames_2() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumDroppedFrames_2)); }
	inline uint32_t get_m_nNumDroppedFrames_2() const { return ___m_nNumDroppedFrames_2; }
	inline uint32_t* get_address_of_m_nNumDroppedFrames_2() { return &___m_nNumDroppedFrames_2; }
	inline void set_m_nNumDroppedFrames_2(uint32_t value)
	{
		___m_nNumDroppedFrames_2 = value;
	}

	inline static int32_t get_offset_of_m_nNumReprojectedFrames_3() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumReprojectedFrames_3)); }
	inline uint32_t get_m_nNumReprojectedFrames_3() const { return ___m_nNumReprojectedFrames_3; }
	inline uint32_t* get_address_of_m_nNumReprojectedFrames_3() { return &___m_nNumReprojectedFrames_3; }
	inline void set_m_nNumReprojectedFrames_3(uint32_t value)
	{
		___m_nNumReprojectedFrames_3 = value;
	}

	inline static int32_t get_offset_of_m_nNumFramePresentsOnStartup_4() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumFramePresentsOnStartup_4)); }
	inline uint32_t get_m_nNumFramePresentsOnStartup_4() const { return ___m_nNumFramePresentsOnStartup_4; }
	inline uint32_t* get_address_of_m_nNumFramePresentsOnStartup_4() { return &___m_nNumFramePresentsOnStartup_4; }
	inline void set_m_nNumFramePresentsOnStartup_4(uint32_t value)
	{
		___m_nNumFramePresentsOnStartup_4 = value;
	}

	inline static int32_t get_offset_of_m_nNumDroppedFramesOnStartup_5() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumDroppedFramesOnStartup_5)); }
	inline uint32_t get_m_nNumDroppedFramesOnStartup_5() const { return ___m_nNumDroppedFramesOnStartup_5; }
	inline uint32_t* get_address_of_m_nNumDroppedFramesOnStartup_5() { return &___m_nNumDroppedFramesOnStartup_5; }
	inline void set_m_nNumDroppedFramesOnStartup_5(uint32_t value)
	{
		___m_nNumDroppedFramesOnStartup_5 = value;
	}

	inline static int32_t get_offset_of_m_nNumReprojectedFramesOnStartup_6() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumReprojectedFramesOnStartup_6)); }
	inline uint32_t get_m_nNumReprojectedFramesOnStartup_6() const { return ___m_nNumReprojectedFramesOnStartup_6; }
	inline uint32_t* get_address_of_m_nNumReprojectedFramesOnStartup_6() { return &___m_nNumReprojectedFramesOnStartup_6; }
	inline void set_m_nNumReprojectedFramesOnStartup_6(uint32_t value)
	{
		___m_nNumReprojectedFramesOnStartup_6 = value;
	}

	inline static int32_t get_offset_of_m_nNumLoading_7() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumLoading_7)); }
	inline uint32_t get_m_nNumLoading_7() const { return ___m_nNumLoading_7; }
	inline uint32_t* get_address_of_m_nNumLoading_7() { return &___m_nNumLoading_7; }
	inline void set_m_nNumLoading_7(uint32_t value)
	{
		___m_nNumLoading_7 = value;
	}

	inline static int32_t get_offset_of_m_nNumFramePresentsLoading_8() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumFramePresentsLoading_8)); }
	inline uint32_t get_m_nNumFramePresentsLoading_8() const { return ___m_nNumFramePresentsLoading_8; }
	inline uint32_t* get_address_of_m_nNumFramePresentsLoading_8() { return &___m_nNumFramePresentsLoading_8; }
	inline void set_m_nNumFramePresentsLoading_8(uint32_t value)
	{
		___m_nNumFramePresentsLoading_8 = value;
	}

	inline static int32_t get_offset_of_m_nNumDroppedFramesLoading_9() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumDroppedFramesLoading_9)); }
	inline uint32_t get_m_nNumDroppedFramesLoading_9() const { return ___m_nNumDroppedFramesLoading_9; }
	inline uint32_t* get_address_of_m_nNumDroppedFramesLoading_9() { return &___m_nNumDroppedFramesLoading_9; }
	inline void set_m_nNumDroppedFramesLoading_9(uint32_t value)
	{
		___m_nNumDroppedFramesLoading_9 = value;
	}

	inline static int32_t get_offset_of_m_nNumReprojectedFramesLoading_10() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumReprojectedFramesLoading_10)); }
	inline uint32_t get_m_nNumReprojectedFramesLoading_10() const { return ___m_nNumReprojectedFramesLoading_10; }
	inline uint32_t* get_address_of_m_nNumReprojectedFramesLoading_10() { return &___m_nNumReprojectedFramesLoading_10; }
	inline void set_m_nNumReprojectedFramesLoading_10(uint32_t value)
	{
		___m_nNumReprojectedFramesLoading_10 = value;
	}

	inline static int32_t get_offset_of_m_nNumTimedOut_11() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumTimedOut_11)); }
	inline uint32_t get_m_nNumTimedOut_11() const { return ___m_nNumTimedOut_11; }
	inline uint32_t* get_address_of_m_nNumTimedOut_11() { return &___m_nNumTimedOut_11; }
	inline void set_m_nNumTimedOut_11(uint32_t value)
	{
		___m_nNumTimedOut_11 = value;
	}

	inline static int32_t get_offset_of_m_nNumFramePresentsTimedOut_12() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumFramePresentsTimedOut_12)); }
	inline uint32_t get_m_nNumFramePresentsTimedOut_12() const { return ___m_nNumFramePresentsTimedOut_12; }
	inline uint32_t* get_address_of_m_nNumFramePresentsTimedOut_12() { return &___m_nNumFramePresentsTimedOut_12; }
	inline void set_m_nNumFramePresentsTimedOut_12(uint32_t value)
	{
		___m_nNumFramePresentsTimedOut_12 = value;
	}

	inline static int32_t get_offset_of_m_nNumDroppedFramesTimedOut_13() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumDroppedFramesTimedOut_13)); }
	inline uint32_t get_m_nNumDroppedFramesTimedOut_13() const { return ___m_nNumDroppedFramesTimedOut_13; }
	inline uint32_t* get_address_of_m_nNumDroppedFramesTimedOut_13() { return &___m_nNumDroppedFramesTimedOut_13; }
	inline void set_m_nNumDroppedFramesTimedOut_13(uint32_t value)
	{
		___m_nNumDroppedFramesTimedOut_13 = value;
	}

	inline static int32_t get_offset_of_m_nNumReprojectedFramesTimedOut_14() { return static_cast<int32_t>(offsetof(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4, ___m_nNumReprojectedFramesTimedOut_14)); }
	inline uint32_t get_m_nNumReprojectedFramesTimedOut_14() const { return ___m_nNumReprojectedFramesTimedOut_14; }
	inline uint32_t* get_address_of_m_nNumReprojectedFramesTimedOut_14() { return &___m_nNumReprojectedFramesTimedOut_14; }
	inline void set_m_nNumReprojectedFramesTimedOut_14(uint32_t value)
	{
		___m_nNumReprojectedFramesTimedOut_14 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // COMPOSITOR_CUMULATIVESTATS_T41A337C26B150FB6064D9961160C755B427016E4_H
#ifndef HMDCOLOR_T_T932A4B68843708C831D344AAA211F11C973A17B5_H
#define HMDCOLOR_T_T932A4B68843708C831D344AAA211F11C973A17B5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdColor_t
struct  HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 
{
public:
	// System.Single Valve.VR.HmdColor_t::r
	float ___r_0;
	// System.Single Valve.VR.HmdColor_t::g
	float ___g_1;
	// System.Single Valve.VR.HmdColor_t::b
	float ___b_2;
	// System.Single Valve.VR.HmdColor_t::a
	float ___a_3;

public:
	inline static int32_t get_offset_of_r_0() { return static_cast<int32_t>(offsetof(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5, ___r_0)); }
	inline float get_r_0() const { return ___r_0; }
	inline float* get_address_of_r_0() { return &___r_0; }
	inline void set_r_0(float value)
	{
		___r_0 = value;
	}

	inline static int32_t get_offset_of_g_1() { return static_cast<int32_t>(offsetof(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5, ___g_1)); }
	inline float get_g_1() const { return ___g_1; }
	inline float* get_address_of_g_1() { return &___g_1; }
	inline void set_g_1(float value)
	{
		___g_1 = value;
	}

	inline static int32_t get_offset_of_b_2() { return static_cast<int32_t>(offsetof(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5, ___b_2)); }
	inline float get_b_2() const { return ___b_2; }
	inline float* get_address_of_b_2() { return &___b_2; }
	inline void set_b_2(float value)
	{
		___b_2 = value;
	}

	inline static int32_t get_offset_of_a_3() { return static_cast<int32_t>(offsetof(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5, ___a_3)); }
	inline float get_a_3() const { return ___a_3; }
	inline float* get_address_of_a_3() { return &___a_3; }
	inline void set_a_3(float value)
	{
		___a_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDCOLOR_T_T932A4B68843708C831D344AAA211F11C973A17B5_H
#ifndef HMDMATRIX34_T_TA0FE165952174421B5D3FA7C1A35A7E67C2A1504_H
#define HMDMATRIX34_T_TA0FE165952174421B5D3FA7C1A35A7E67C2A1504_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdMatrix34_t
struct  HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 
{
public:
	// System.Single Valve.VR.HmdMatrix34_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix34_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix34_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix34_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix34_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix34_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix34_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix34_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix34_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix34_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix34_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix34_t::m11
	float ___m11_11;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDMATRIX34_T_TA0FE165952174421B5D3FA7C1A35A7E67C2A1504_H
#ifndef HMDVECTOR2_T_T847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_H
#define HMDVECTOR2_T_T847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdVector2_t
struct  HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 
{
public:
	// System.Single Valve.VR.HmdVector2_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector2_t::v1
	float ___v1_1;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDVECTOR2_T_T847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_H
#ifndef HMDVECTOR3_T_T328BE5DB61119553896A869823C4CC07FF8169E4_H
#define HMDVECTOR3_T_T328BE5DB61119553896A869823C4CC07FF8169E4_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdVector3_t
struct  HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 
{
public:
	// System.Single Valve.VR.HmdVector3_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector3_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector3_t::v2
	float ___v2_2;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDVECTOR3_T_T328BE5DB61119553896A869823C4CC07FF8169E4_H
#ifndef IVRCOMPOSITOR_T1954959A018DB1A5104950705A9179827F19F50A_H
#define IVRCOMPOSITOR_T1954959A018DB1A5104950705A9179827F19F50A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor
struct  IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A 
{
public:
	// Valve.VR.IVRCompositor__SetTrackingSpace Valve.VR.IVRCompositor::SetTrackingSpace
	_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB * ___SetTrackingSpace_0;
	// Valve.VR.IVRCompositor__GetTrackingSpace Valve.VR.IVRCompositor::GetTrackingSpace
	_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B * ___GetTrackingSpace_1;
	// Valve.VR.IVRCompositor__WaitGetPoses Valve.VR.IVRCompositor::WaitGetPoses
	_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD * ___WaitGetPoses_2;
	// Valve.VR.IVRCompositor__GetLastPoses Valve.VR.IVRCompositor::GetLastPoses
	_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 * ___GetLastPoses_3;
	// Valve.VR.IVRCompositor__GetLastPoseForTrackedDeviceIndex Valve.VR.IVRCompositor::GetLastPoseForTrackedDeviceIndex
	_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA * ___GetLastPoseForTrackedDeviceIndex_4;
	// Valve.VR.IVRCompositor__Submit Valve.VR.IVRCompositor::Submit
	_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 * ___Submit_5;
	// Valve.VR.IVRCompositor__ClearLastSubmittedFrame Valve.VR.IVRCompositor::ClearLastSubmittedFrame
	_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 * ___ClearLastSubmittedFrame_6;
	// Valve.VR.IVRCompositor__PostPresentHandoff Valve.VR.IVRCompositor::PostPresentHandoff
	_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 * ___PostPresentHandoff_7;
	// Valve.VR.IVRCompositor__GetFrameTiming Valve.VR.IVRCompositor::GetFrameTiming
	_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 * ___GetFrameTiming_8;
	// Valve.VR.IVRCompositor__GetFrameTimings Valve.VR.IVRCompositor::GetFrameTimings
	_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 * ___GetFrameTimings_9;
	// Valve.VR.IVRCompositor__GetFrameTimeRemaining Valve.VR.IVRCompositor::GetFrameTimeRemaining
	_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 * ___GetFrameTimeRemaining_10;
	// Valve.VR.IVRCompositor__GetCumulativeStats Valve.VR.IVRCompositor::GetCumulativeStats
	_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 * ___GetCumulativeStats_11;
	// Valve.VR.IVRCompositor__FadeToColor Valve.VR.IVRCompositor::FadeToColor
	_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D * ___FadeToColor_12;
	// Valve.VR.IVRCompositor__GetCurrentFadeColor Valve.VR.IVRCompositor::GetCurrentFadeColor
	_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF * ___GetCurrentFadeColor_13;
	// Valve.VR.IVRCompositor__FadeGrid Valve.VR.IVRCompositor::FadeGrid
	_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F * ___FadeGrid_14;
	// Valve.VR.IVRCompositor__GetCurrentGridAlpha Valve.VR.IVRCompositor::GetCurrentGridAlpha
	_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 * ___GetCurrentGridAlpha_15;
	// Valve.VR.IVRCompositor__SetSkyboxOverride Valve.VR.IVRCompositor::SetSkyboxOverride
	_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A * ___SetSkyboxOverride_16;
	// Valve.VR.IVRCompositor__ClearSkyboxOverride Valve.VR.IVRCompositor::ClearSkyboxOverride
	_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 * ___ClearSkyboxOverride_17;
	// Valve.VR.IVRCompositor__CompositorBringToFront Valve.VR.IVRCompositor::CompositorBringToFront
	_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD * ___CompositorBringToFront_18;
	// Valve.VR.IVRCompositor__CompositorGoToBack Valve.VR.IVRCompositor::CompositorGoToBack
	_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 * ___CompositorGoToBack_19;
	// Valve.VR.IVRCompositor__CompositorQuit Valve.VR.IVRCompositor::CompositorQuit
	_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 * ___CompositorQuit_20;
	// Valve.VR.IVRCompositor__IsFullscreen Valve.VR.IVRCompositor::IsFullscreen
	_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C * ___IsFullscreen_21;
	// Valve.VR.IVRCompositor__GetCurrentSceneFocusProcess Valve.VR.IVRCompositor::GetCurrentSceneFocusProcess
	_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF * ___GetCurrentSceneFocusProcess_22;
	// Valve.VR.IVRCompositor__GetLastFrameRenderer Valve.VR.IVRCompositor::GetLastFrameRenderer
	_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 * ___GetLastFrameRenderer_23;
	// Valve.VR.IVRCompositor__CanRenderScene Valve.VR.IVRCompositor::CanRenderScene
	_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 * ___CanRenderScene_24;
	// Valve.VR.IVRCompositor__ShowMirrorWindow Valve.VR.IVRCompositor::ShowMirrorWindow
	_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 * ___ShowMirrorWindow_25;
	// Valve.VR.IVRCompositor__HideMirrorWindow Valve.VR.IVRCompositor::HideMirrorWindow
	_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 * ___HideMirrorWindow_26;
	// Valve.VR.IVRCompositor__IsMirrorWindowVisible Valve.VR.IVRCompositor::IsMirrorWindowVisible
	_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C * ___IsMirrorWindowVisible_27;
	// Valve.VR.IVRCompositor__CompositorDumpImages Valve.VR.IVRCompositor::CompositorDumpImages
	_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E * ___CompositorDumpImages_28;
	// Valve.VR.IVRCompositor__ShouldAppRenderWithLowResources Valve.VR.IVRCompositor::ShouldAppRenderWithLowResources
	_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD * ___ShouldAppRenderWithLowResources_29;
	// Valve.VR.IVRCompositor__ForceInterleavedReprojectionOn Valve.VR.IVRCompositor::ForceInterleavedReprojectionOn
	_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D * ___ForceInterleavedReprojectionOn_30;
	// Valve.VR.IVRCompositor__ForceReconnectProcess Valve.VR.IVRCompositor::ForceReconnectProcess
	_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 * ___ForceReconnectProcess_31;
	// Valve.VR.IVRCompositor__SuspendRendering Valve.VR.IVRCompositor::SuspendRendering
	_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 * ___SuspendRendering_32;
	// Valve.VR.IVRCompositor__GetMirrorTextureD3D11 Valve.VR.IVRCompositor::GetMirrorTextureD3D11
	_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E * ___GetMirrorTextureD3D11_33;
	// Valve.VR.IVRCompositor__ReleaseMirrorTextureD3D11 Valve.VR.IVRCompositor::ReleaseMirrorTextureD3D11
	_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A * ___ReleaseMirrorTextureD3D11_34;
	// Valve.VR.IVRCompositor__GetMirrorTextureGL Valve.VR.IVRCompositor::GetMirrorTextureGL
	_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B * ___GetMirrorTextureGL_35;
	// Valve.VR.IVRCompositor__ReleaseSharedGLTexture Valve.VR.IVRCompositor::ReleaseSharedGLTexture
	_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE * ___ReleaseSharedGLTexture_36;
	// Valve.VR.IVRCompositor__LockGLSharedTextureForAccess Valve.VR.IVRCompositor::LockGLSharedTextureForAccess
	_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 * ___LockGLSharedTextureForAccess_37;
	// Valve.VR.IVRCompositor__UnlockGLSharedTextureForAccess Valve.VR.IVRCompositor::UnlockGLSharedTextureForAccess
	_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 * ___UnlockGLSharedTextureForAccess_38;
	// Valve.VR.IVRCompositor__GetVulkanInstanceExtensionsRequired Valve.VR.IVRCompositor::GetVulkanInstanceExtensionsRequired
	_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 * ___GetVulkanInstanceExtensionsRequired_39;
	// Valve.VR.IVRCompositor__GetVulkanDeviceExtensionsRequired Valve.VR.IVRCompositor::GetVulkanDeviceExtensionsRequired
	_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 * ___GetVulkanDeviceExtensionsRequired_40;
	// Valve.VR.IVRCompositor__SetExplicitTimingMode Valve.VR.IVRCompositor::SetExplicitTimingMode
	_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 * ___SetExplicitTimingMode_41;
	// Valve.VR.IVRCompositor__SubmitExplicitTimingData Valve.VR.IVRCompositor::SubmitExplicitTimingData
	_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 * ___SubmitExplicitTimingData_42;

public:
	inline static int32_t get_offset_of_SetTrackingSpace_0() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___SetTrackingSpace_0)); }
	inline _SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB * get_SetTrackingSpace_0() const { return ___SetTrackingSpace_0; }
	inline _SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB ** get_address_of_SetTrackingSpace_0() { return &___SetTrackingSpace_0; }
	inline void set_SetTrackingSpace_0(_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB * value)
	{
		___SetTrackingSpace_0 = value;
		Il2CppCodeGenWriteBarrier((&___SetTrackingSpace_0), value);
	}

	inline static int32_t get_offset_of_GetTrackingSpace_1() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetTrackingSpace_1)); }
	inline _GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B * get_GetTrackingSpace_1() const { return ___GetTrackingSpace_1; }
	inline _GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B ** get_address_of_GetTrackingSpace_1() { return &___GetTrackingSpace_1; }
	inline void set_GetTrackingSpace_1(_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B * value)
	{
		___GetTrackingSpace_1 = value;
		Il2CppCodeGenWriteBarrier((&___GetTrackingSpace_1), value);
	}

	inline static int32_t get_offset_of_WaitGetPoses_2() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___WaitGetPoses_2)); }
	inline _WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD * get_WaitGetPoses_2() const { return ___WaitGetPoses_2; }
	inline _WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD ** get_address_of_WaitGetPoses_2() { return &___WaitGetPoses_2; }
	inline void set_WaitGetPoses_2(_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD * value)
	{
		___WaitGetPoses_2 = value;
		Il2CppCodeGenWriteBarrier((&___WaitGetPoses_2), value);
	}

	inline static int32_t get_offset_of_GetLastPoses_3() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetLastPoses_3)); }
	inline _GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 * get_GetLastPoses_3() const { return ___GetLastPoses_3; }
	inline _GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 ** get_address_of_GetLastPoses_3() { return &___GetLastPoses_3; }
	inline void set_GetLastPoses_3(_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 * value)
	{
		___GetLastPoses_3 = value;
		Il2CppCodeGenWriteBarrier((&___GetLastPoses_3), value);
	}

	inline static int32_t get_offset_of_GetLastPoseForTrackedDeviceIndex_4() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetLastPoseForTrackedDeviceIndex_4)); }
	inline _GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA * get_GetLastPoseForTrackedDeviceIndex_4() const { return ___GetLastPoseForTrackedDeviceIndex_4; }
	inline _GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA ** get_address_of_GetLastPoseForTrackedDeviceIndex_4() { return &___GetLastPoseForTrackedDeviceIndex_4; }
	inline void set_GetLastPoseForTrackedDeviceIndex_4(_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA * value)
	{
		___GetLastPoseForTrackedDeviceIndex_4 = value;
		Il2CppCodeGenWriteBarrier((&___GetLastPoseForTrackedDeviceIndex_4), value);
	}

	inline static int32_t get_offset_of_Submit_5() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___Submit_5)); }
	inline _Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 * get_Submit_5() const { return ___Submit_5; }
	inline _Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 ** get_address_of_Submit_5() { return &___Submit_5; }
	inline void set_Submit_5(_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 * value)
	{
		___Submit_5 = value;
		Il2CppCodeGenWriteBarrier((&___Submit_5), value);
	}

	inline static int32_t get_offset_of_ClearLastSubmittedFrame_6() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___ClearLastSubmittedFrame_6)); }
	inline _ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 * get_ClearLastSubmittedFrame_6() const { return ___ClearLastSubmittedFrame_6; }
	inline _ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 ** get_address_of_ClearLastSubmittedFrame_6() { return &___ClearLastSubmittedFrame_6; }
	inline void set_ClearLastSubmittedFrame_6(_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 * value)
	{
		___ClearLastSubmittedFrame_6 = value;
		Il2CppCodeGenWriteBarrier((&___ClearLastSubmittedFrame_6), value);
	}

	inline static int32_t get_offset_of_PostPresentHandoff_7() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___PostPresentHandoff_7)); }
	inline _PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 * get_PostPresentHandoff_7() const { return ___PostPresentHandoff_7; }
	inline _PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 ** get_address_of_PostPresentHandoff_7() { return &___PostPresentHandoff_7; }
	inline void set_PostPresentHandoff_7(_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 * value)
	{
		___PostPresentHandoff_7 = value;
		Il2CppCodeGenWriteBarrier((&___PostPresentHandoff_7), value);
	}

	inline static int32_t get_offset_of_GetFrameTiming_8() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetFrameTiming_8)); }
	inline _GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 * get_GetFrameTiming_8() const { return ___GetFrameTiming_8; }
	inline _GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 ** get_address_of_GetFrameTiming_8() { return &___GetFrameTiming_8; }
	inline void set_GetFrameTiming_8(_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 * value)
	{
		___GetFrameTiming_8 = value;
		Il2CppCodeGenWriteBarrier((&___GetFrameTiming_8), value);
	}

	inline static int32_t get_offset_of_GetFrameTimings_9() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetFrameTimings_9)); }
	inline _GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 * get_GetFrameTimings_9() const { return ___GetFrameTimings_9; }
	inline _GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 ** get_address_of_GetFrameTimings_9() { return &___GetFrameTimings_9; }
	inline void set_GetFrameTimings_9(_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 * value)
	{
		___GetFrameTimings_9 = value;
		Il2CppCodeGenWriteBarrier((&___GetFrameTimings_9), value);
	}

	inline static int32_t get_offset_of_GetFrameTimeRemaining_10() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetFrameTimeRemaining_10)); }
	inline _GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 * get_GetFrameTimeRemaining_10() const { return ___GetFrameTimeRemaining_10; }
	inline _GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 ** get_address_of_GetFrameTimeRemaining_10() { return &___GetFrameTimeRemaining_10; }
	inline void set_GetFrameTimeRemaining_10(_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 * value)
	{
		___GetFrameTimeRemaining_10 = value;
		Il2CppCodeGenWriteBarrier((&___GetFrameTimeRemaining_10), value);
	}

	inline static int32_t get_offset_of_GetCumulativeStats_11() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetCumulativeStats_11)); }
	inline _GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 * get_GetCumulativeStats_11() const { return ___GetCumulativeStats_11; }
	inline _GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 ** get_address_of_GetCumulativeStats_11() { return &___GetCumulativeStats_11; }
	inline void set_GetCumulativeStats_11(_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 * value)
	{
		___GetCumulativeStats_11 = value;
		Il2CppCodeGenWriteBarrier((&___GetCumulativeStats_11), value);
	}

	inline static int32_t get_offset_of_FadeToColor_12() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___FadeToColor_12)); }
	inline _FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D * get_FadeToColor_12() const { return ___FadeToColor_12; }
	inline _FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D ** get_address_of_FadeToColor_12() { return &___FadeToColor_12; }
	inline void set_FadeToColor_12(_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D * value)
	{
		___FadeToColor_12 = value;
		Il2CppCodeGenWriteBarrier((&___FadeToColor_12), value);
	}

	inline static int32_t get_offset_of_GetCurrentFadeColor_13() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetCurrentFadeColor_13)); }
	inline _GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF * get_GetCurrentFadeColor_13() const { return ___GetCurrentFadeColor_13; }
	inline _GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF ** get_address_of_GetCurrentFadeColor_13() { return &___GetCurrentFadeColor_13; }
	inline void set_GetCurrentFadeColor_13(_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF * value)
	{
		___GetCurrentFadeColor_13 = value;
		Il2CppCodeGenWriteBarrier((&___GetCurrentFadeColor_13), value);
	}

	inline static int32_t get_offset_of_FadeGrid_14() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___FadeGrid_14)); }
	inline _FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F * get_FadeGrid_14() const { return ___FadeGrid_14; }
	inline _FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F ** get_address_of_FadeGrid_14() { return &___FadeGrid_14; }
	inline void set_FadeGrid_14(_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F * value)
	{
		___FadeGrid_14 = value;
		Il2CppCodeGenWriteBarrier((&___FadeGrid_14), value);
	}

	inline static int32_t get_offset_of_GetCurrentGridAlpha_15() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetCurrentGridAlpha_15)); }
	inline _GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 * get_GetCurrentGridAlpha_15() const { return ___GetCurrentGridAlpha_15; }
	inline _GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 ** get_address_of_GetCurrentGridAlpha_15() { return &___GetCurrentGridAlpha_15; }
	inline void set_GetCurrentGridAlpha_15(_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 * value)
	{
		___GetCurrentGridAlpha_15 = value;
		Il2CppCodeGenWriteBarrier((&___GetCurrentGridAlpha_15), value);
	}

	inline static int32_t get_offset_of_SetSkyboxOverride_16() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___SetSkyboxOverride_16)); }
	inline _SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A * get_SetSkyboxOverride_16() const { return ___SetSkyboxOverride_16; }
	inline _SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A ** get_address_of_SetSkyboxOverride_16() { return &___SetSkyboxOverride_16; }
	inline void set_SetSkyboxOverride_16(_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A * value)
	{
		___SetSkyboxOverride_16 = value;
		Il2CppCodeGenWriteBarrier((&___SetSkyboxOverride_16), value);
	}

	inline static int32_t get_offset_of_ClearSkyboxOverride_17() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___ClearSkyboxOverride_17)); }
	inline _ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 * get_ClearSkyboxOverride_17() const { return ___ClearSkyboxOverride_17; }
	inline _ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 ** get_address_of_ClearSkyboxOverride_17() { return &___ClearSkyboxOverride_17; }
	inline void set_ClearSkyboxOverride_17(_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 * value)
	{
		___ClearSkyboxOverride_17 = value;
		Il2CppCodeGenWriteBarrier((&___ClearSkyboxOverride_17), value);
	}

	inline static int32_t get_offset_of_CompositorBringToFront_18() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___CompositorBringToFront_18)); }
	inline _CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD * get_CompositorBringToFront_18() const { return ___CompositorBringToFront_18; }
	inline _CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD ** get_address_of_CompositorBringToFront_18() { return &___CompositorBringToFront_18; }
	inline void set_CompositorBringToFront_18(_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD * value)
	{
		___CompositorBringToFront_18 = value;
		Il2CppCodeGenWriteBarrier((&___CompositorBringToFront_18), value);
	}

	inline static int32_t get_offset_of_CompositorGoToBack_19() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___CompositorGoToBack_19)); }
	inline _CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 * get_CompositorGoToBack_19() const { return ___CompositorGoToBack_19; }
	inline _CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 ** get_address_of_CompositorGoToBack_19() { return &___CompositorGoToBack_19; }
	inline void set_CompositorGoToBack_19(_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 * value)
	{
		___CompositorGoToBack_19 = value;
		Il2CppCodeGenWriteBarrier((&___CompositorGoToBack_19), value);
	}

	inline static int32_t get_offset_of_CompositorQuit_20() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___CompositorQuit_20)); }
	inline _CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 * get_CompositorQuit_20() const { return ___CompositorQuit_20; }
	inline _CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 ** get_address_of_CompositorQuit_20() { return &___CompositorQuit_20; }
	inline void set_CompositorQuit_20(_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 * value)
	{
		___CompositorQuit_20 = value;
		Il2CppCodeGenWriteBarrier((&___CompositorQuit_20), value);
	}

	inline static int32_t get_offset_of_IsFullscreen_21() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___IsFullscreen_21)); }
	inline _IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C * get_IsFullscreen_21() const { return ___IsFullscreen_21; }
	inline _IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C ** get_address_of_IsFullscreen_21() { return &___IsFullscreen_21; }
	inline void set_IsFullscreen_21(_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C * value)
	{
		___IsFullscreen_21 = value;
		Il2CppCodeGenWriteBarrier((&___IsFullscreen_21), value);
	}

	inline static int32_t get_offset_of_GetCurrentSceneFocusProcess_22() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetCurrentSceneFocusProcess_22)); }
	inline _GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF * get_GetCurrentSceneFocusProcess_22() const { return ___GetCurrentSceneFocusProcess_22; }
	inline _GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF ** get_address_of_GetCurrentSceneFocusProcess_22() { return &___GetCurrentSceneFocusProcess_22; }
	inline void set_GetCurrentSceneFocusProcess_22(_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF * value)
	{
		___GetCurrentSceneFocusProcess_22 = value;
		Il2CppCodeGenWriteBarrier((&___GetCurrentSceneFocusProcess_22), value);
	}

	inline static int32_t get_offset_of_GetLastFrameRenderer_23() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetLastFrameRenderer_23)); }
	inline _GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 * get_GetLastFrameRenderer_23() const { return ___GetLastFrameRenderer_23; }
	inline _GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 ** get_address_of_GetLastFrameRenderer_23() { return &___GetLastFrameRenderer_23; }
	inline void set_GetLastFrameRenderer_23(_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 * value)
	{
		___GetLastFrameRenderer_23 = value;
		Il2CppCodeGenWriteBarrier((&___GetLastFrameRenderer_23), value);
	}

	inline static int32_t get_offset_of_CanRenderScene_24() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___CanRenderScene_24)); }
	inline _CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 * get_CanRenderScene_24() const { return ___CanRenderScene_24; }
	inline _CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 ** get_address_of_CanRenderScene_24() { return &___CanRenderScene_24; }
	inline void set_CanRenderScene_24(_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 * value)
	{
		___CanRenderScene_24 = value;
		Il2CppCodeGenWriteBarrier((&___CanRenderScene_24), value);
	}

	inline static int32_t get_offset_of_ShowMirrorWindow_25() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___ShowMirrorWindow_25)); }
	inline _ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 * get_ShowMirrorWindow_25() const { return ___ShowMirrorWindow_25; }
	inline _ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 ** get_address_of_ShowMirrorWindow_25() { return &___ShowMirrorWindow_25; }
	inline void set_ShowMirrorWindow_25(_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 * value)
	{
		___ShowMirrorWindow_25 = value;
		Il2CppCodeGenWriteBarrier((&___ShowMirrorWindow_25), value);
	}

	inline static int32_t get_offset_of_HideMirrorWindow_26() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___HideMirrorWindow_26)); }
	inline _HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 * get_HideMirrorWindow_26() const { return ___HideMirrorWindow_26; }
	inline _HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 ** get_address_of_HideMirrorWindow_26() { return &___HideMirrorWindow_26; }
	inline void set_HideMirrorWindow_26(_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 * value)
	{
		___HideMirrorWindow_26 = value;
		Il2CppCodeGenWriteBarrier((&___HideMirrorWindow_26), value);
	}

	inline static int32_t get_offset_of_IsMirrorWindowVisible_27() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___IsMirrorWindowVisible_27)); }
	inline _IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C * get_IsMirrorWindowVisible_27() const { return ___IsMirrorWindowVisible_27; }
	inline _IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C ** get_address_of_IsMirrorWindowVisible_27() { return &___IsMirrorWindowVisible_27; }
	inline void set_IsMirrorWindowVisible_27(_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C * value)
	{
		___IsMirrorWindowVisible_27 = value;
		Il2CppCodeGenWriteBarrier((&___IsMirrorWindowVisible_27), value);
	}

	inline static int32_t get_offset_of_CompositorDumpImages_28() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___CompositorDumpImages_28)); }
	inline _CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E * get_CompositorDumpImages_28() const { return ___CompositorDumpImages_28; }
	inline _CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E ** get_address_of_CompositorDumpImages_28() { return &___CompositorDumpImages_28; }
	inline void set_CompositorDumpImages_28(_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E * value)
	{
		___CompositorDumpImages_28 = value;
		Il2CppCodeGenWriteBarrier((&___CompositorDumpImages_28), value);
	}

	inline static int32_t get_offset_of_ShouldAppRenderWithLowResources_29() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___ShouldAppRenderWithLowResources_29)); }
	inline _ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD * get_ShouldAppRenderWithLowResources_29() const { return ___ShouldAppRenderWithLowResources_29; }
	inline _ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD ** get_address_of_ShouldAppRenderWithLowResources_29() { return &___ShouldAppRenderWithLowResources_29; }
	inline void set_ShouldAppRenderWithLowResources_29(_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD * value)
	{
		___ShouldAppRenderWithLowResources_29 = value;
		Il2CppCodeGenWriteBarrier((&___ShouldAppRenderWithLowResources_29), value);
	}

	inline static int32_t get_offset_of_ForceInterleavedReprojectionOn_30() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___ForceInterleavedReprojectionOn_30)); }
	inline _ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D * get_ForceInterleavedReprojectionOn_30() const { return ___ForceInterleavedReprojectionOn_30; }
	inline _ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D ** get_address_of_ForceInterleavedReprojectionOn_30() { return &___ForceInterleavedReprojectionOn_30; }
	inline void set_ForceInterleavedReprojectionOn_30(_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D * value)
	{
		___ForceInterleavedReprojectionOn_30 = value;
		Il2CppCodeGenWriteBarrier((&___ForceInterleavedReprojectionOn_30), value);
	}

	inline static int32_t get_offset_of_ForceReconnectProcess_31() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___ForceReconnectProcess_31)); }
	inline _ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 * get_ForceReconnectProcess_31() const { return ___ForceReconnectProcess_31; }
	inline _ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 ** get_address_of_ForceReconnectProcess_31() { return &___ForceReconnectProcess_31; }
	inline void set_ForceReconnectProcess_31(_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 * value)
	{
		___ForceReconnectProcess_31 = value;
		Il2CppCodeGenWriteBarrier((&___ForceReconnectProcess_31), value);
	}

	inline static int32_t get_offset_of_SuspendRendering_32() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___SuspendRendering_32)); }
	inline _SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 * get_SuspendRendering_32() const { return ___SuspendRendering_32; }
	inline _SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 ** get_address_of_SuspendRendering_32() { return &___SuspendRendering_32; }
	inline void set_SuspendRendering_32(_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 * value)
	{
		___SuspendRendering_32 = value;
		Il2CppCodeGenWriteBarrier((&___SuspendRendering_32), value);
	}

	inline static int32_t get_offset_of_GetMirrorTextureD3D11_33() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetMirrorTextureD3D11_33)); }
	inline _GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E * get_GetMirrorTextureD3D11_33() const { return ___GetMirrorTextureD3D11_33; }
	inline _GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E ** get_address_of_GetMirrorTextureD3D11_33() { return &___GetMirrorTextureD3D11_33; }
	inline void set_GetMirrorTextureD3D11_33(_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E * value)
	{
		___GetMirrorTextureD3D11_33 = value;
		Il2CppCodeGenWriteBarrier((&___GetMirrorTextureD3D11_33), value);
	}

	inline static int32_t get_offset_of_ReleaseMirrorTextureD3D11_34() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___ReleaseMirrorTextureD3D11_34)); }
	inline _ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A * get_ReleaseMirrorTextureD3D11_34() const { return ___ReleaseMirrorTextureD3D11_34; }
	inline _ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A ** get_address_of_ReleaseMirrorTextureD3D11_34() { return &___ReleaseMirrorTextureD3D11_34; }
	inline void set_ReleaseMirrorTextureD3D11_34(_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A * value)
	{
		___ReleaseMirrorTextureD3D11_34 = value;
		Il2CppCodeGenWriteBarrier((&___ReleaseMirrorTextureD3D11_34), value);
	}

	inline static int32_t get_offset_of_GetMirrorTextureGL_35() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetMirrorTextureGL_35)); }
	inline _GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B * get_GetMirrorTextureGL_35() const { return ___GetMirrorTextureGL_35; }
	inline _GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B ** get_address_of_GetMirrorTextureGL_35() { return &___GetMirrorTextureGL_35; }
	inline void set_GetMirrorTextureGL_35(_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B * value)
	{
		___GetMirrorTextureGL_35 = value;
		Il2CppCodeGenWriteBarrier((&___GetMirrorTextureGL_35), value);
	}

	inline static int32_t get_offset_of_ReleaseSharedGLTexture_36() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___ReleaseSharedGLTexture_36)); }
	inline _ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE * get_ReleaseSharedGLTexture_36() const { return ___ReleaseSharedGLTexture_36; }
	inline _ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE ** get_address_of_ReleaseSharedGLTexture_36() { return &___ReleaseSharedGLTexture_36; }
	inline void set_ReleaseSharedGLTexture_36(_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE * value)
	{
		___ReleaseSharedGLTexture_36 = value;
		Il2CppCodeGenWriteBarrier((&___ReleaseSharedGLTexture_36), value);
	}

	inline static int32_t get_offset_of_LockGLSharedTextureForAccess_37() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___LockGLSharedTextureForAccess_37)); }
	inline _LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 * get_LockGLSharedTextureForAccess_37() const { return ___LockGLSharedTextureForAccess_37; }
	inline _LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 ** get_address_of_LockGLSharedTextureForAccess_37() { return &___LockGLSharedTextureForAccess_37; }
	inline void set_LockGLSharedTextureForAccess_37(_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 * value)
	{
		___LockGLSharedTextureForAccess_37 = value;
		Il2CppCodeGenWriteBarrier((&___LockGLSharedTextureForAccess_37), value);
	}

	inline static int32_t get_offset_of_UnlockGLSharedTextureForAccess_38() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___UnlockGLSharedTextureForAccess_38)); }
	inline _UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 * get_UnlockGLSharedTextureForAccess_38() const { return ___UnlockGLSharedTextureForAccess_38; }
	inline _UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 ** get_address_of_UnlockGLSharedTextureForAccess_38() { return &___UnlockGLSharedTextureForAccess_38; }
	inline void set_UnlockGLSharedTextureForAccess_38(_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 * value)
	{
		___UnlockGLSharedTextureForAccess_38 = value;
		Il2CppCodeGenWriteBarrier((&___UnlockGLSharedTextureForAccess_38), value);
	}

	inline static int32_t get_offset_of_GetVulkanInstanceExtensionsRequired_39() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetVulkanInstanceExtensionsRequired_39)); }
	inline _GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 * get_GetVulkanInstanceExtensionsRequired_39() const { return ___GetVulkanInstanceExtensionsRequired_39; }
	inline _GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 ** get_address_of_GetVulkanInstanceExtensionsRequired_39() { return &___GetVulkanInstanceExtensionsRequired_39; }
	inline void set_GetVulkanInstanceExtensionsRequired_39(_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 * value)
	{
		___GetVulkanInstanceExtensionsRequired_39 = value;
		Il2CppCodeGenWriteBarrier((&___GetVulkanInstanceExtensionsRequired_39), value);
	}

	inline static int32_t get_offset_of_GetVulkanDeviceExtensionsRequired_40() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___GetVulkanDeviceExtensionsRequired_40)); }
	inline _GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 * get_GetVulkanDeviceExtensionsRequired_40() const { return ___GetVulkanDeviceExtensionsRequired_40; }
	inline _GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 ** get_address_of_GetVulkanDeviceExtensionsRequired_40() { return &___GetVulkanDeviceExtensionsRequired_40; }
	inline void set_GetVulkanDeviceExtensionsRequired_40(_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 * value)
	{
		___GetVulkanDeviceExtensionsRequired_40 = value;
		Il2CppCodeGenWriteBarrier((&___GetVulkanDeviceExtensionsRequired_40), value);
	}

	inline static int32_t get_offset_of_SetExplicitTimingMode_41() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___SetExplicitTimingMode_41)); }
	inline _SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 * get_SetExplicitTimingMode_41() const { return ___SetExplicitTimingMode_41; }
	inline _SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 ** get_address_of_SetExplicitTimingMode_41() { return &___SetExplicitTimingMode_41; }
	inline void set_SetExplicitTimingMode_41(_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 * value)
	{
		___SetExplicitTimingMode_41 = value;
		Il2CppCodeGenWriteBarrier((&___SetExplicitTimingMode_41), value);
	}

	inline static int32_t get_offset_of_SubmitExplicitTimingData_42() { return static_cast<int32_t>(offsetof(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A, ___SubmitExplicitTimingData_42)); }
	inline _SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 * get_SubmitExplicitTimingData_42() const { return ___SubmitExplicitTimingData_42; }
	inline _SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 ** get_address_of_SubmitExplicitTimingData_42() { return &___SubmitExplicitTimingData_42; }
	inline void set_SubmitExplicitTimingData_42(_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 * value)
	{
		___SubmitExplicitTimingData_42 = value;
		Il2CppCodeGenWriteBarrier((&___SubmitExplicitTimingData_42), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRCompositor
struct IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshaled_pinvoke
{
	Il2CppMethodPointer ___SetTrackingSpace_0;
	Il2CppMethodPointer ___GetTrackingSpace_1;
	Il2CppMethodPointer ___WaitGetPoses_2;
	Il2CppMethodPointer ___GetLastPoses_3;
	Il2CppMethodPointer ___GetLastPoseForTrackedDeviceIndex_4;
	Il2CppMethodPointer ___Submit_5;
	Il2CppMethodPointer ___ClearLastSubmittedFrame_6;
	Il2CppMethodPointer ___PostPresentHandoff_7;
	Il2CppMethodPointer ___GetFrameTiming_8;
	Il2CppMethodPointer ___GetFrameTimings_9;
	Il2CppMethodPointer ___GetFrameTimeRemaining_10;
	Il2CppMethodPointer ___GetCumulativeStats_11;
	Il2CppMethodPointer ___FadeToColor_12;
	Il2CppMethodPointer ___GetCurrentFadeColor_13;
	Il2CppMethodPointer ___FadeGrid_14;
	Il2CppMethodPointer ___GetCurrentGridAlpha_15;
	Il2CppMethodPointer ___SetSkyboxOverride_16;
	Il2CppMethodPointer ___ClearSkyboxOverride_17;
	Il2CppMethodPointer ___CompositorBringToFront_18;
	Il2CppMethodPointer ___CompositorGoToBack_19;
	Il2CppMethodPointer ___CompositorQuit_20;
	Il2CppMethodPointer ___IsFullscreen_21;
	Il2CppMethodPointer ___GetCurrentSceneFocusProcess_22;
	Il2CppMethodPointer ___GetLastFrameRenderer_23;
	Il2CppMethodPointer ___CanRenderScene_24;
	Il2CppMethodPointer ___ShowMirrorWindow_25;
	Il2CppMethodPointer ___HideMirrorWindow_26;
	Il2CppMethodPointer ___IsMirrorWindowVisible_27;
	Il2CppMethodPointer ___CompositorDumpImages_28;
	Il2CppMethodPointer ___ShouldAppRenderWithLowResources_29;
	Il2CppMethodPointer ___ForceInterleavedReprojectionOn_30;
	Il2CppMethodPointer ___ForceReconnectProcess_31;
	Il2CppMethodPointer ___SuspendRendering_32;
	Il2CppMethodPointer ___GetMirrorTextureD3D11_33;
	Il2CppMethodPointer ___ReleaseMirrorTextureD3D11_34;
	Il2CppMethodPointer ___GetMirrorTextureGL_35;
	Il2CppMethodPointer ___ReleaseSharedGLTexture_36;
	Il2CppMethodPointer ___LockGLSharedTextureForAccess_37;
	Il2CppMethodPointer ___UnlockGLSharedTextureForAccess_38;
	Il2CppMethodPointer ___GetVulkanInstanceExtensionsRequired_39;
	Il2CppMethodPointer ___GetVulkanDeviceExtensionsRequired_40;
	Il2CppMethodPointer ___SetExplicitTimingMode_41;
	Il2CppMethodPointer ___SubmitExplicitTimingData_42;
};
// Native definition for COM marshalling of Valve.VR.IVRCompositor
struct IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshaled_com
{
	Il2CppMethodPointer ___SetTrackingSpace_0;
	Il2CppMethodPointer ___GetTrackingSpace_1;
	Il2CppMethodPointer ___WaitGetPoses_2;
	Il2CppMethodPointer ___GetLastPoses_3;
	Il2CppMethodPointer ___GetLastPoseForTrackedDeviceIndex_4;
	Il2CppMethodPointer ___Submit_5;
	Il2CppMethodPointer ___ClearLastSubmittedFrame_6;
	Il2CppMethodPointer ___PostPresentHandoff_7;
	Il2CppMethodPointer ___GetFrameTiming_8;
	Il2CppMethodPointer ___GetFrameTimings_9;
	Il2CppMethodPointer ___GetFrameTimeRemaining_10;
	Il2CppMethodPointer ___GetCumulativeStats_11;
	Il2CppMethodPointer ___FadeToColor_12;
	Il2CppMethodPointer ___GetCurrentFadeColor_13;
	Il2CppMethodPointer ___FadeGrid_14;
	Il2CppMethodPointer ___GetCurrentGridAlpha_15;
	Il2CppMethodPointer ___SetSkyboxOverride_16;
	Il2CppMethodPointer ___ClearSkyboxOverride_17;
	Il2CppMethodPointer ___CompositorBringToFront_18;
	Il2CppMethodPointer ___CompositorGoToBack_19;
	Il2CppMethodPointer ___CompositorQuit_20;
	Il2CppMethodPointer ___IsFullscreen_21;
	Il2CppMethodPointer ___GetCurrentSceneFocusProcess_22;
	Il2CppMethodPointer ___GetLastFrameRenderer_23;
	Il2CppMethodPointer ___CanRenderScene_24;
	Il2CppMethodPointer ___ShowMirrorWindow_25;
	Il2CppMethodPointer ___HideMirrorWindow_26;
	Il2CppMethodPointer ___IsMirrorWindowVisible_27;
	Il2CppMethodPointer ___CompositorDumpImages_28;
	Il2CppMethodPointer ___ShouldAppRenderWithLowResources_29;
	Il2CppMethodPointer ___ForceInterleavedReprojectionOn_30;
	Il2CppMethodPointer ___ForceReconnectProcess_31;
	Il2CppMethodPointer ___SuspendRendering_32;
	Il2CppMethodPointer ___GetMirrorTextureD3D11_33;
	Il2CppMethodPointer ___ReleaseMirrorTextureD3D11_34;
	Il2CppMethodPointer ___GetMirrorTextureGL_35;
	Il2CppMethodPointer ___ReleaseSharedGLTexture_36;
	Il2CppMethodPointer ___LockGLSharedTextureForAccess_37;
	Il2CppMethodPointer ___UnlockGLSharedTextureForAccess_38;
	Il2CppMethodPointer ___GetVulkanInstanceExtensionsRequired_39;
	Il2CppMethodPointer ___GetVulkanDeviceExtensionsRequired_40;
	Il2CppMethodPointer ___SetExplicitTimingMode_41;
	Il2CppMethodPointer ___SubmitExplicitTimingData_42;
};
#endif // IVRCOMPOSITOR_T1954959A018DB1A5104950705A9179827F19F50A_H
#ifndef IVRDRIVERMANAGER_T8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_H
#define IVRDRIVERMANAGER_T8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRDriverManager
struct  IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7 
{
public:
	// Valve.VR.IVRDriverManager__GetDriverCount Valve.VR.IVRDriverManager::GetDriverCount
	_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 * ___GetDriverCount_0;
	// Valve.VR.IVRDriverManager__GetDriverName Valve.VR.IVRDriverManager::GetDriverName
	_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C * ___GetDriverName_1;

public:
	inline static int32_t get_offset_of_GetDriverCount_0() { return static_cast<int32_t>(offsetof(IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7, ___GetDriverCount_0)); }
	inline _GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 * get_GetDriverCount_0() const { return ___GetDriverCount_0; }
	inline _GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 ** get_address_of_GetDriverCount_0() { return &___GetDriverCount_0; }
	inline void set_GetDriverCount_0(_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 * value)
	{
		___GetDriverCount_0 = value;
		Il2CppCodeGenWriteBarrier((&___GetDriverCount_0), value);
	}

	inline static int32_t get_offset_of_GetDriverName_1() { return static_cast<int32_t>(offsetof(IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7, ___GetDriverName_1)); }
	inline _GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C * get_GetDriverName_1() const { return ___GetDriverName_1; }
	inline _GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C ** get_address_of_GetDriverName_1() { return &___GetDriverName_1; }
	inline void set_GetDriverName_1(_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C * value)
	{
		___GetDriverName_1 = value;
		Il2CppCodeGenWriteBarrier((&___GetDriverName_1), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRDriverManager
struct IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshaled_pinvoke
{
	Il2CppMethodPointer ___GetDriverCount_0;
	Il2CppMethodPointer ___GetDriverName_1;
};
// Native definition for COM marshalling of Valve.VR.IVRDriverManager
struct IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshaled_com
{
	Il2CppMethodPointer ___GetDriverCount_0;
	Il2CppMethodPointer ___GetDriverName_1;
};
#endif // IVRDRIVERMANAGER_T8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_H
#ifndef IVREXTENDEDDISPLAY_T4D17D56F8B883827FB2EF813562FCAA9878EBED0_H
#define IVREXTENDEDDISPLAY_T4D17D56F8B883827FB2EF813562FCAA9878EBED0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRExtendedDisplay
struct  IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0 
{
public:
	// Valve.VR.IVRExtendedDisplay__GetWindowBounds Valve.VR.IVRExtendedDisplay::GetWindowBounds
	_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 * ___GetWindowBounds_0;
	// Valve.VR.IVRExtendedDisplay__GetEyeOutputViewport Valve.VR.IVRExtendedDisplay::GetEyeOutputViewport
	_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C * ___GetEyeOutputViewport_1;
	// Valve.VR.IVRExtendedDisplay__GetDXGIOutputInfo Valve.VR.IVRExtendedDisplay::GetDXGIOutputInfo
	_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 * ___GetDXGIOutputInfo_2;

public:
	inline static int32_t get_offset_of_GetWindowBounds_0() { return static_cast<int32_t>(offsetof(IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0, ___GetWindowBounds_0)); }
	inline _GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 * get_GetWindowBounds_0() const { return ___GetWindowBounds_0; }
	inline _GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 ** get_address_of_GetWindowBounds_0() { return &___GetWindowBounds_0; }
	inline void set_GetWindowBounds_0(_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 * value)
	{
		___GetWindowBounds_0 = value;
		Il2CppCodeGenWriteBarrier((&___GetWindowBounds_0), value);
	}

	inline static int32_t get_offset_of_GetEyeOutputViewport_1() { return static_cast<int32_t>(offsetof(IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0, ___GetEyeOutputViewport_1)); }
	inline _GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C * get_GetEyeOutputViewport_1() const { return ___GetEyeOutputViewport_1; }
	inline _GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C ** get_address_of_GetEyeOutputViewport_1() { return &___GetEyeOutputViewport_1; }
	inline void set_GetEyeOutputViewport_1(_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C * value)
	{
		___GetEyeOutputViewport_1 = value;
		Il2CppCodeGenWriteBarrier((&___GetEyeOutputViewport_1), value);
	}

	inline static int32_t get_offset_of_GetDXGIOutputInfo_2() { return static_cast<int32_t>(offsetof(IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0, ___GetDXGIOutputInfo_2)); }
	inline _GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 * get_GetDXGIOutputInfo_2() const { return ___GetDXGIOutputInfo_2; }
	inline _GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 ** get_address_of_GetDXGIOutputInfo_2() { return &___GetDXGIOutputInfo_2; }
	inline void set_GetDXGIOutputInfo_2(_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 * value)
	{
		___GetDXGIOutputInfo_2 = value;
		Il2CppCodeGenWriteBarrier((&___GetDXGIOutputInfo_2), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRExtendedDisplay
struct IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshaled_pinvoke
{
	Il2CppMethodPointer ___GetWindowBounds_0;
	Il2CppMethodPointer ___GetEyeOutputViewport_1;
	Il2CppMethodPointer ___GetDXGIOutputInfo_2;
};
// Native definition for COM marshalling of Valve.VR.IVRExtendedDisplay
struct IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshaled_com
{
	Il2CppMethodPointer ___GetWindowBounds_0;
	Il2CppMethodPointer ___GetEyeOutputViewport_1;
	Il2CppMethodPointer ___GetDXGIOutputInfo_2;
};
#endif // IVREXTENDEDDISPLAY_T4D17D56F8B883827FB2EF813562FCAA9878EBED0_H
#ifndef IVRNOTIFICATIONS_T0539F837029A9433B0E464C7A31932E3DFB7DD2F_H
#define IVRNOTIFICATIONS_T0539F837029A9433B0E464C7A31932E3DFB7DD2F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRNotifications
struct  IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F 
{
public:
	// Valve.VR.IVRNotifications__CreateNotification Valve.VR.IVRNotifications::CreateNotification
	_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 * ___CreateNotification_0;
	// Valve.VR.IVRNotifications__RemoveNotification Valve.VR.IVRNotifications::RemoveNotification
	_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E * ___RemoveNotification_1;

public:
	inline static int32_t get_offset_of_CreateNotification_0() { return static_cast<int32_t>(offsetof(IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F, ___CreateNotification_0)); }
	inline _CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 * get_CreateNotification_0() const { return ___CreateNotification_0; }
	inline _CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 ** get_address_of_CreateNotification_0() { return &___CreateNotification_0; }
	inline void set_CreateNotification_0(_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 * value)
	{
		___CreateNotification_0 = value;
		Il2CppCodeGenWriteBarrier((&___CreateNotification_0), value);
	}

	inline static int32_t get_offset_of_RemoveNotification_1() { return static_cast<int32_t>(offsetof(IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F, ___RemoveNotification_1)); }
	inline _RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E * get_RemoveNotification_1() const { return ___RemoveNotification_1; }
	inline _RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E ** get_address_of_RemoveNotification_1() { return &___RemoveNotification_1; }
	inline void set_RemoveNotification_1(_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E * value)
	{
		___RemoveNotification_1 = value;
		Il2CppCodeGenWriteBarrier((&___RemoveNotification_1), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRNotifications
struct IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshaled_pinvoke
{
	Il2CppMethodPointer ___CreateNotification_0;
	Il2CppMethodPointer ___RemoveNotification_1;
};
// Native definition for COM marshalling of Valve.VR.IVRNotifications
struct IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshaled_com
{
	Il2CppMethodPointer ___CreateNotification_0;
	Il2CppMethodPointer ___RemoveNotification_1;
};
#endif // IVRNOTIFICATIONS_T0539F837029A9433B0E464C7A31932E3DFB7DD2F_H
#ifndef IVROVERLAY_TFAE763C447352BFE3C1D4D3C08166F27314AA8D9_H
#define IVROVERLAY_TFAE763C447352BFE3C1D4D3C08166F27314AA8D9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay
struct  IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9 
{
public:
	// Valve.VR.IVROverlay__FindOverlay Valve.VR.IVROverlay::FindOverlay
	_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B * ___FindOverlay_0;
	// Valve.VR.IVROverlay__CreateOverlay Valve.VR.IVROverlay::CreateOverlay
	_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 * ___CreateOverlay_1;
	// Valve.VR.IVROverlay__DestroyOverlay Valve.VR.IVROverlay::DestroyOverlay
	_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 * ___DestroyOverlay_2;
	// Valve.VR.IVROverlay__SetHighQualityOverlay Valve.VR.IVROverlay::SetHighQualityOverlay
	_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C * ___SetHighQualityOverlay_3;
	// Valve.VR.IVROverlay__GetHighQualityOverlay Valve.VR.IVROverlay::GetHighQualityOverlay
	_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF * ___GetHighQualityOverlay_4;
	// Valve.VR.IVROverlay__GetOverlayKey Valve.VR.IVROverlay::GetOverlayKey
	_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 * ___GetOverlayKey_5;
	// Valve.VR.IVROverlay__GetOverlayName Valve.VR.IVROverlay::GetOverlayName
	_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 * ___GetOverlayName_6;
	// Valve.VR.IVROverlay__SetOverlayName Valve.VR.IVROverlay::SetOverlayName
	_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C * ___SetOverlayName_7;
	// Valve.VR.IVROverlay__GetOverlayImageData Valve.VR.IVROverlay::GetOverlayImageData
	_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 * ___GetOverlayImageData_8;
	// Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum Valve.VR.IVROverlay::GetOverlayErrorNameFromEnum
	_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 * ___GetOverlayErrorNameFromEnum_9;
	// Valve.VR.IVROverlay__SetOverlayRenderingPid Valve.VR.IVROverlay::SetOverlayRenderingPid
	_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 * ___SetOverlayRenderingPid_10;
	// Valve.VR.IVROverlay__GetOverlayRenderingPid Valve.VR.IVROverlay::GetOverlayRenderingPid
	_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 * ___GetOverlayRenderingPid_11;
	// Valve.VR.IVROverlay__SetOverlayFlag Valve.VR.IVROverlay::SetOverlayFlag
	_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E * ___SetOverlayFlag_12;
	// Valve.VR.IVROverlay__GetOverlayFlag Valve.VR.IVROverlay::GetOverlayFlag
	_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B * ___GetOverlayFlag_13;
	// Valve.VR.IVROverlay__SetOverlayColor Valve.VR.IVROverlay::SetOverlayColor
	_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 * ___SetOverlayColor_14;
	// Valve.VR.IVROverlay__GetOverlayColor Valve.VR.IVROverlay::GetOverlayColor
	_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 * ___GetOverlayColor_15;
	// Valve.VR.IVROverlay__SetOverlayAlpha Valve.VR.IVROverlay::SetOverlayAlpha
	_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 * ___SetOverlayAlpha_16;
	// Valve.VR.IVROverlay__GetOverlayAlpha Valve.VR.IVROverlay::GetOverlayAlpha
	_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 * ___GetOverlayAlpha_17;
	// Valve.VR.IVROverlay__SetOverlayTexelAspect Valve.VR.IVROverlay::SetOverlayTexelAspect
	_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E * ___SetOverlayTexelAspect_18;
	// Valve.VR.IVROverlay__GetOverlayTexelAspect Valve.VR.IVROverlay::GetOverlayTexelAspect
	_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 * ___GetOverlayTexelAspect_19;
	// Valve.VR.IVROverlay__SetOverlaySortOrder Valve.VR.IVROverlay::SetOverlaySortOrder
	_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 * ___SetOverlaySortOrder_20;
	// Valve.VR.IVROverlay__GetOverlaySortOrder Valve.VR.IVROverlay::GetOverlaySortOrder
	_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 * ___GetOverlaySortOrder_21;
	// Valve.VR.IVROverlay__SetOverlayWidthInMeters Valve.VR.IVROverlay::SetOverlayWidthInMeters
	_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 * ___SetOverlayWidthInMeters_22;
	// Valve.VR.IVROverlay__GetOverlayWidthInMeters Valve.VR.IVROverlay::GetOverlayWidthInMeters
	_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 * ___GetOverlayWidthInMeters_23;
	// Valve.VR.IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters Valve.VR.IVROverlay::SetOverlayAutoCurveDistanceRangeInMeters
	_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 * ___SetOverlayAutoCurveDistanceRangeInMeters_24;
	// Valve.VR.IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters Valve.VR.IVROverlay::GetOverlayAutoCurveDistanceRangeInMeters
	_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 * ___GetOverlayAutoCurveDistanceRangeInMeters_25;
	// Valve.VR.IVROverlay__SetOverlayTextureColorSpace Valve.VR.IVROverlay::SetOverlayTextureColorSpace
	_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F * ___SetOverlayTextureColorSpace_26;
	// Valve.VR.IVROverlay__GetOverlayTextureColorSpace Valve.VR.IVROverlay::GetOverlayTextureColorSpace
	_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D * ___GetOverlayTextureColorSpace_27;
	// Valve.VR.IVROverlay__SetOverlayTextureBounds Valve.VR.IVROverlay::SetOverlayTextureBounds
	_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E * ___SetOverlayTextureBounds_28;
	// Valve.VR.IVROverlay__GetOverlayTextureBounds Valve.VR.IVROverlay::GetOverlayTextureBounds
	_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 * ___GetOverlayTextureBounds_29;
	// Valve.VR.IVROverlay__GetOverlayRenderModel Valve.VR.IVROverlay::GetOverlayRenderModel
	_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 * ___GetOverlayRenderModel_30;
	// Valve.VR.IVROverlay__SetOverlayRenderModel Valve.VR.IVROverlay::SetOverlayRenderModel
	_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 * ___SetOverlayRenderModel_31;
	// Valve.VR.IVROverlay__GetOverlayTransformType Valve.VR.IVROverlay::GetOverlayTransformType
	_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 * ___GetOverlayTransformType_32;
	// Valve.VR.IVROverlay__SetOverlayTransformAbsolute Valve.VR.IVROverlay::SetOverlayTransformAbsolute
	_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 * ___SetOverlayTransformAbsolute_33;
	// Valve.VR.IVROverlay__GetOverlayTransformAbsolute Valve.VR.IVROverlay::GetOverlayTransformAbsolute
	_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 * ___GetOverlayTransformAbsolute_34;
	// Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative Valve.VR.IVROverlay::SetOverlayTransformTrackedDeviceRelative
	_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 * ___SetOverlayTransformTrackedDeviceRelative_35;
	// Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative Valve.VR.IVROverlay::GetOverlayTransformTrackedDeviceRelative
	_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B * ___GetOverlayTransformTrackedDeviceRelative_36;
	// Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent Valve.VR.IVROverlay::SetOverlayTransformTrackedDeviceComponent
	_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 * ___SetOverlayTransformTrackedDeviceComponent_37;
	// Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent Valve.VR.IVROverlay::GetOverlayTransformTrackedDeviceComponent
	_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF * ___GetOverlayTransformTrackedDeviceComponent_38;
	// Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative Valve.VR.IVROverlay::GetOverlayTransformOverlayRelative
	_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 * ___GetOverlayTransformOverlayRelative_39;
	// Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative Valve.VR.IVROverlay::SetOverlayTransformOverlayRelative
	_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 * ___SetOverlayTransformOverlayRelative_40;
	// Valve.VR.IVROverlay__ShowOverlay Valve.VR.IVROverlay::ShowOverlay
	_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 * ___ShowOverlay_41;
	// Valve.VR.IVROverlay__HideOverlay Valve.VR.IVROverlay::HideOverlay
	_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC * ___HideOverlay_42;
	// Valve.VR.IVROverlay__IsOverlayVisible Valve.VR.IVROverlay::IsOverlayVisible
	_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 * ___IsOverlayVisible_43;
	// Valve.VR.IVROverlay__GetTransformForOverlayCoordinates Valve.VR.IVROverlay::GetTransformForOverlayCoordinates
	_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA * ___GetTransformForOverlayCoordinates_44;
	// Valve.VR.IVROverlay__PollNextOverlayEvent Valve.VR.IVROverlay::PollNextOverlayEvent
	_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 * ___PollNextOverlayEvent_45;
	// Valve.VR.IVROverlay__GetOverlayInputMethod Valve.VR.IVROverlay::GetOverlayInputMethod
	_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E * ___GetOverlayInputMethod_46;
	// Valve.VR.IVROverlay__SetOverlayInputMethod Valve.VR.IVROverlay::SetOverlayInputMethod
	_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 * ___SetOverlayInputMethod_47;
	// Valve.VR.IVROverlay__GetOverlayMouseScale Valve.VR.IVROverlay::GetOverlayMouseScale
	_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 * ___GetOverlayMouseScale_48;
	// Valve.VR.IVROverlay__SetOverlayMouseScale Valve.VR.IVROverlay::SetOverlayMouseScale
	_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 * ___SetOverlayMouseScale_49;
	// Valve.VR.IVROverlay__ComputeOverlayIntersection Valve.VR.IVROverlay::ComputeOverlayIntersection
	_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 * ___ComputeOverlayIntersection_50;
	// Valve.VR.IVROverlay__IsHoverTargetOverlay Valve.VR.IVROverlay::IsHoverTargetOverlay
	_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 * ___IsHoverTargetOverlay_51;
	// Valve.VR.IVROverlay__GetGamepadFocusOverlay Valve.VR.IVROverlay::GetGamepadFocusOverlay
	_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F * ___GetGamepadFocusOverlay_52;
	// Valve.VR.IVROverlay__SetGamepadFocusOverlay Valve.VR.IVROverlay::SetGamepadFocusOverlay
	_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 * ___SetGamepadFocusOverlay_53;
	// Valve.VR.IVROverlay__SetOverlayNeighbor Valve.VR.IVROverlay::SetOverlayNeighbor
	_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D * ___SetOverlayNeighbor_54;
	// Valve.VR.IVROverlay__MoveGamepadFocusToNeighbor Valve.VR.IVROverlay::MoveGamepadFocusToNeighbor
	_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F * ___MoveGamepadFocusToNeighbor_55;
	// Valve.VR.IVROverlay__SetOverlayDualAnalogTransform Valve.VR.IVROverlay::SetOverlayDualAnalogTransform
	_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A * ___SetOverlayDualAnalogTransform_56;
	// Valve.VR.IVROverlay__GetOverlayDualAnalogTransform Valve.VR.IVROverlay::GetOverlayDualAnalogTransform
	_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 * ___GetOverlayDualAnalogTransform_57;
	// Valve.VR.IVROverlay__SetOverlayTexture Valve.VR.IVROverlay::SetOverlayTexture
	_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C * ___SetOverlayTexture_58;
	// Valve.VR.IVROverlay__ClearOverlayTexture Valve.VR.IVROverlay::ClearOverlayTexture
	_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E * ___ClearOverlayTexture_59;
	// Valve.VR.IVROverlay__SetOverlayRaw Valve.VR.IVROverlay::SetOverlayRaw
	_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 * ___SetOverlayRaw_60;
	// Valve.VR.IVROverlay__SetOverlayFromFile Valve.VR.IVROverlay::SetOverlayFromFile
	_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F * ___SetOverlayFromFile_61;
	// Valve.VR.IVROverlay__GetOverlayTexture Valve.VR.IVROverlay::GetOverlayTexture
	_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 * ___GetOverlayTexture_62;
	// Valve.VR.IVROverlay__ReleaseNativeOverlayHandle Valve.VR.IVROverlay::ReleaseNativeOverlayHandle
	_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 * ___ReleaseNativeOverlayHandle_63;
	// Valve.VR.IVROverlay__GetOverlayTextureSize Valve.VR.IVROverlay::GetOverlayTextureSize
	_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 * ___GetOverlayTextureSize_64;
	// Valve.VR.IVROverlay__CreateDashboardOverlay Valve.VR.IVROverlay::CreateDashboardOverlay
	_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B * ___CreateDashboardOverlay_65;
	// Valve.VR.IVROverlay__IsDashboardVisible Valve.VR.IVROverlay::IsDashboardVisible
	_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C * ___IsDashboardVisible_66;
	// Valve.VR.IVROverlay__IsActiveDashboardOverlay Valve.VR.IVROverlay::IsActiveDashboardOverlay
	_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B * ___IsActiveDashboardOverlay_67;
	// Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess Valve.VR.IVROverlay::SetDashboardOverlaySceneProcess
	_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C * ___SetDashboardOverlaySceneProcess_68;
	// Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess Valve.VR.IVROverlay::GetDashboardOverlaySceneProcess
	_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 * ___GetDashboardOverlaySceneProcess_69;
	// Valve.VR.IVROverlay__ShowDashboard Valve.VR.IVROverlay::ShowDashboard
	_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 * ___ShowDashboard_70;
	// Valve.VR.IVROverlay__GetPrimaryDashboardDevice Valve.VR.IVROverlay::GetPrimaryDashboardDevice
	_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C * ___GetPrimaryDashboardDevice_71;
	// Valve.VR.IVROverlay__ShowKeyboard Valve.VR.IVROverlay::ShowKeyboard
	_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 * ___ShowKeyboard_72;
	// Valve.VR.IVROverlay__ShowKeyboardForOverlay Valve.VR.IVROverlay::ShowKeyboardForOverlay
	_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 * ___ShowKeyboardForOverlay_73;
	// Valve.VR.IVROverlay__GetKeyboardText Valve.VR.IVROverlay::GetKeyboardText
	_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 * ___GetKeyboardText_74;
	// Valve.VR.IVROverlay__HideKeyboard Valve.VR.IVROverlay::HideKeyboard
	_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 * ___HideKeyboard_75;
	// Valve.VR.IVROverlay__SetKeyboardTransformAbsolute Valve.VR.IVROverlay::SetKeyboardTransformAbsolute
	_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA * ___SetKeyboardTransformAbsolute_76;
	// Valve.VR.IVROverlay__SetKeyboardPositionForOverlay Valve.VR.IVROverlay::SetKeyboardPositionForOverlay
	_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF * ___SetKeyboardPositionForOverlay_77;
	// Valve.VR.IVROverlay__SetOverlayIntersectionMask Valve.VR.IVROverlay::SetOverlayIntersectionMask
	_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 * ___SetOverlayIntersectionMask_78;
	// Valve.VR.IVROverlay__GetOverlayFlags Valve.VR.IVROverlay::GetOverlayFlags
	_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 * ___GetOverlayFlags_79;
	// Valve.VR.IVROverlay__ShowMessageOverlay Valve.VR.IVROverlay::ShowMessageOverlay
	_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F * ___ShowMessageOverlay_80;
	// Valve.VR.IVROverlay__CloseMessageOverlay Valve.VR.IVROverlay::CloseMessageOverlay
	_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 * ___CloseMessageOverlay_81;

public:
	inline static int32_t get_offset_of_FindOverlay_0() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___FindOverlay_0)); }
	inline _FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B * get_FindOverlay_0() const { return ___FindOverlay_0; }
	inline _FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B ** get_address_of_FindOverlay_0() { return &___FindOverlay_0; }
	inline void set_FindOverlay_0(_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B * value)
	{
		___FindOverlay_0 = value;
		Il2CppCodeGenWriteBarrier((&___FindOverlay_0), value);
	}

	inline static int32_t get_offset_of_CreateOverlay_1() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___CreateOverlay_1)); }
	inline _CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 * get_CreateOverlay_1() const { return ___CreateOverlay_1; }
	inline _CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 ** get_address_of_CreateOverlay_1() { return &___CreateOverlay_1; }
	inline void set_CreateOverlay_1(_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 * value)
	{
		___CreateOverlay_1 = value;
		Il2CppCodeGenWriteBarrier((&___CreateOverlay_1), value);
	}

	inline static int32_t get_offset_of_DestroyOverlay_2() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___DestroyOverlay_2)); }
	inline _DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 * get_DestroyOverlay_2() const { return ___DestroyOverlay_2; }
	inline _DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 ** get_address_of_DestroyOverlay_2() { return &___DestroyOverlay_2; }
	inline void set_DestroyOverlay_2(_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 * value)
	{
		___DestroyOverlay_2 = value;
		Il2CppCodeGenWriteBarrier((&___DestroyOverlay_2), value);
	}

	inline static int32_t get_offset_of_SetHighQualityOverlay_3() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetHighQualityOverlay_3)); }
	inline _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C * get_SetHighQualityOverlay_3() const { return ___SetHighQualityOverlay_3; }
	inline _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C ** get_address_of_SetHighQualityOverlay_3() { return &___SetHighQualityOverlay_3; }
	inline void set_SetHighQualityOverlay_3(_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C * value)
	{
		___SetHighQualityOverlay_3 = value;
		Il2CppCodeGenWriteBarrier((&___SetHighQualityOverlay_3), value);
	}

	inline static int32_t get_offset_of_GetHighQualityOverlay_4() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetHighQualityOverlay_4)); }
	inline _GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF * get_GetHighQualityOverlay_4() const { return ___GetHighQualityOverlay_4; }
	inline _GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF ** get_address_of_GetHighQualityOverlay_4() { return &___GetHighQualityOverlay_4; }
	inline void set_GetHighQualityOverlay_4(_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF * value)
	{
		___GetHighQualityOverlay_4 = value;
		Il2CppCodeGenWriteBarrier((&___GetHighQualityOverlay_4), value);
	}

	inline static int32_t get_offset_of_GetOverlayKey_5() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayKey_5)); }
	inline _GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 * get_GetOverlayKey_5() const { return ___GetOverlayKey_5; }
	inline _GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 ** get_address_of_GetOverlayKey_5() { return &___GetOverlayKey_5; }
	inline void set_GetOverlayKey_5(_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 * value)
	{
		___GetOverlayKey_5 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayKey_5), value);
	}

	inline static int32_t get_offset_of_GetOverlayName_6() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayName_6)); }
	inline _GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 * get_GetOverlayName_6() const { return ___GetOverlayName_6; }
	inline _GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 ** get_address_of_GetOverlayName_6() { return &___GetOverlayName_6; }
	inline void set_GetOverlayName_6(_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 * value)
	{
		___GetOverlayName_6 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayName_6), value);
	}

	inline static int32_t get_offset_of_SetOverlayName_7() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayName_7)); }
	inline _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C * get_SetOverlayName_7() const { return ___SetOverlayName_7; }
	inline _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C ** get_address_of_SetOverlayName_7() { return &___SetOverlayName_7; }
	inline void set_SetOverlayName_7(_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C * value)
	{
		___SetOverlayName_7 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayName_7), value);
	}

	inline static int32_t get_offset_of_GetOverlayImageData_8() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayImageData_8)); }
	inline _GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 * get_GetOverlayImageData_8() const { return ___GetOverlayImageData_8; }
	inline _GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 ** get_address_of_GetOverlayImageData_8() { return &___GetOverlayImageData_8; }
	inline void set_GetOverlayImageData_8(_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 * value)
	{
		___GetOverlayImageData_8 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayImageData_8), value);
	}

	inline static int32_t get_offset_of_GetOverlayErrorNameFromEnum_9() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayErrorNameFromEnum_9)); }
	inline _GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 * get_GetOverlayErrorNameFromEnum_9() const { return ___GetOverlayErrorNameFromEnum_9; }
	inline _GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 ** get_address_of_GetOverlayErrorNameFromEnum_9() { return &___GetOverlayErrorNameFromEnum_9; }
	inline void set_GetOverlayErrorNameFromEnum_9(_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 * value)
	{
		___GetOverlayErrorNameFromEnum_9 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayErrorNameFromEnum_9), value);
	}

	inline static int32_t get_offset_of_SetOverlayRenderingPid_10() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayRenderingPid_10)); }
	inline _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 * get_SetOverlayRenderingPid_10() const { return ___SetOverlayRenderingPid_10; }
	inline _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 ** get_address_of_SetOverlayRenderingPid_10() { return &___SetOverlayRenderingPid_10; }
	inline void set_SetOverlayRenderingPid_10(_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 * value)
	{
		___SetOverlayRenderingPid_10 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayRenderingPid_10), value);
	}

	inline static int32_t get_offset_of_GetOverlayRenderingPid_11() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayRenderingPid_11)); }
	inline _GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 * get_GetOverlayRenderingPid_11() const { return ___GetOverlayRenderingPid_11; }
	inline _GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 ** get_address_of_GetOverlayRenderingPid_11() { return &___GetOverlayRenderingPid_11; }
	inline void set_GetOverlayRenderingPid_11(_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 * value)
	{
		___GetOverlayRenderingPid_11 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayRenderingPid_11), value);
	}

	inline static int32_t get_offset_of_SetOverlayFlag_12() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayFlag_12)); }
	inline _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E * get_SetOverlayFlag_12() const { return ___SetOverlayFlag_12; }
	inline _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E ** get_address_of_SetOverlayFlag_12() { return &___SetOverlayFlag_12; }
	inline void set_SetOverlayFlag_12(_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E * value)
	{
		___SetOverlayFlag_12 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayFlag_12), value);
	}

	inline static int32_t get_offset_of_GetOverlayFlag_13() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayFlag_13)); }
	inline _GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B * get_GetOverlayFlag_13() const { return ___GetOverlayFlag_13; }
	inline _GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B ** get_address_of_GetOverlayFlag_13() { return &___GetOverlayFlag_13; }
	inline void set_GetOverlayFlag_13(_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B * value)
	{
		___GetOverlayFlag_13 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayFlag_13), value);
	}

	inline static int32_t get_offset_of_SetOverlayColor_14() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayColor_14)); }
	inline _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 * get_SetOverlayColor_14() const { return ___SetOverlayColor_14; }
	inline _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 ** get_address_of_SetOverlayColor_14() { return &___SetOverlayColor_14; }
	inline void set_SetOverlayColor_14(_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 * value)
	{
		___SetOverlayColor_14 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayColor_14), value);
	}

	inline static int32_t get_offset_of_GetOverlayColor_15() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayColor_15)); }
	inline _GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 * get_GetOverlayColor_15() const { return ___GetOverlayColor_15; }
	inline _GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 ** get_address_of_GetOverlayColor_15() { return &___GetOverlayColor_15; }
	inline void set_GetOverlayColor_15(_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 * value)
	{
		___GetOverlayColor_15 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayColor_15), value);
	}

	inline static int32_t get_offset_of_SetOverlayAlpha_16() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayAlpha_16)); }
	inline _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 * get_SetOverlayAlpha_16() const { return ___SetOverlayAlpha_16; }
	inline _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 ** get_address_of_SetOverlayAlpha_16() { return &___SetOverlayAlpha_16; }
	inline void set_SetOverlayAlpha_16(_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 * value)
	{
		___SetOverlayAlpha_16 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayAlpha_16), value);
	}

	inline static int32_t get_offset_of_GetOverlayAlpha_17() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayAlpha_17)); }
	inline _GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 * get_GetOverlayAlpha_17() const { return ___GetOverlayAlpha_17; }
	inline _GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 ** get_address_of_GetOverlayAlpha_17() { return &___GetOverlayAlpha_17; }
	inline void set_GetOverlayAlpha_17(_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 * value)
	{
		___GetOverlayAlpha_17 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayAlpha_17), value);
	}

	inline static int32_t get_offset_of_SetOverlayTexelAspect_18() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayTexelAspect_18)); }
	inline _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E * get_SetOverlayTexelAspect_18() const { return ___SetOverlayTexelAspect_18; }
	inline _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E ** get_address_of_SetOverlayTexelAspect_18() { return &___SetOverlayTexelAspect_18; }
	inline void set_SetOverlayTexelAspect_18(_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E * value)
	{
		___SetOverlayTexelAspect_18 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayTexelAspect_18), value);
	}

	inline static int32_t get_offset_of_GetOverlayTexelAspect_19() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTexelAspect_19)); }
	inline _GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 * get_GetOverlayTexelAspect_19() const { return ___GetOverlayTexelAspect_19; }
	inline _GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 ** get_address_of_GetOverlayTexelAspect_19() { return &___GetOverlayTexelAspect_19; }
	inline void set_GetOverlayTexelAspect_19(_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 * value)
	{
		___GetOverlayTexelAspect_19 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTexelAspect_19), value);
	}

	inline static int32_t get_offset_of_SetOverlaySortOrder_20() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlaySortOrder_20)); }
	inline _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 * get_SetOverlaySortOrder_20() const { return ___SetOverlaySortOrder_20; }
	inline _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 ** get_address_of_SetOverlaySortOrder_20() { return &___SetOverlaySortOrder_20; }
	inline void set_SetOverlaySortOrder_20(_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 * value)
	{
		___SetOverlaySortOrder_20 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlaySortOrder_20), value);
	}

	inline static int32_t get_offset_of_GetOverlaySortOrder_21() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlaySortOrder_21)); }
	inline _GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 * get_GetOverlaySortOrder_21() const { return ___GetOverlaySortOrder_21; }
	inline _GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 ** get_address_of_GetOverlaySortOrder_21() { return &___GetOverlaySortOrder_21; }
	inline void set_GetOverlaySortOrder_21(_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 * value)
	{
		___GetOverlaySortOrder_21 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlaySortOrder_21), value);
	}

	inline static int32_t get_offset_of_SetOverlayWidthInMeters_22() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayWidthInMeters_22)); }
	inline _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 * get_SetOverlayWidthInMeters_22() const { return ___SetOverlayWidthInMeters_22; }
	inline _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 ** get_address_of_SetOverlayWidthInMeters_22() { return &___SetOverlayWidthInMeters_22; }
	inline void set_SetOverlayWidthInMeters_22(_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 * value)
	{
		___SetOverlayWidthInMeters_22 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayWidthInMeters_22), value);
	}

	inline static int32_t get_offset_of_GetOverlayWidthInMeters_23() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayWidthInMeters_23)); }
	inline _GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 * get_GetOverlayWidthInMeters_23() const { return ___GetOverlayWidthInMeters_23; }
	inline _GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 ** get_address_of_GetOverlayWidthInMeters_23() { return &___GetOverlayWidthInMeters_23; }
	inline void set_GetOverlayWidthInMeters_23(_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 * value)
	{
		___GetOverlayWidthInMeters_23 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayWidthInMeters_23), value);
	}

	inline static int32_t get_offset_of_SetOverlayAutoCurveDistanceRangeInMeters_24() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayAutoCurveDistanceRangeInMeters_24)); }
	inline _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 * get_SetOverlayAutoCurveDistanceRangeInMeters_24() const { return ___SetOverlayAutoCurveDistanceRangeInMeters_24; }
	inline _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 ** get_address_of_SetOverlayAutoCurveDistanceRangeInMeters_24() { return &___SetOverlayAutoCurveDistanceRangeInMeters_24; }
	inline void set_SetOverlayAutoCurveDistanceRangeInMeters_24(_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 * value)
	{
		___SetOverlayAutoCurveDistanceRangeInMeters_24 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayAutoCurveDistanceRangeInMeters_24), value);
	}

	inline static int32_t get_offset_of_GetOverlayAutoCurveDistanceRangeInMeters_25() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayAutoCurveDistanceRangeInMeters_25)); }
	inline _GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 * get_GetOverlayAutoCurveDistanceRangeInMeters_25() const { return ___GetOverlayAutoCurveDistanceRangeInMeters_25; }
	inline _GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 ** get_address_of_GetOverlayAutoCurveDistanceRangeInMeters_25() { return &___GetOverlayAutoCurveDistanceRangeInMeters_25; }
	inline void set_GetOverlayAutoCurveDistanceRangeInMeters_25(_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 * value)
	{
		___GetOverlayAutoCurveDistanceRangeInMeters_25 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayAutoCurveDistanceRangeInMeters_25), value);
	}

	inline static int32_t get_offset_of_SetOverlayTextureColorSpace_26() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayTextureColorSpace_26)); }
	inline _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F * get_SetOverlayTextureColorSpace_26() const { return ___SetOverlayTextureColorSpace_26; }
	inline _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F ** get_address_of_SetOverlayTextureColorSpace_26() { return &___SetOverlayTextureColorSpace_26; }
	inline void set_SetOverlayTextureColorSpace_26(_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F * value)
	{
		___SetOverlayTextureColorSpace_26 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayTextureColorSpace_26), value);
	}

	inline static int32_t get_offset_of_GetOverlayTextureColorSpace_27() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTextureColorSpace_27)); }
	inline _GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D * get_GetOverlayTextureColorSpace_27() const { return ___GetOverlayTextureColorSpace_27; }
	inline _GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D ** get_address_of_GetOverlayTextureColorSpace_27() { return &___GetOverlayTextureColorSpace_27; }
	inline void set_GetOverlayTextureColorSpace_27(_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D * value)
	{
		___GetOverlayTextureColorSpace_27 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTextureColorSpace_27), value);
	}

	inline static int32_t get_offset_of_SetOverlayTextureBounds_28() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayTextureBounds_28)); }
	inline _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E * get_SetOverlayTextureBounds_28() const { return ___SetOverlayTextureBounds_28; }
	inline _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E ** get_address_of_SetOverlayTextureBounds_28() { return &___SetOverlayTextureBounds_28; }
	inline void set_SetOverlayTextureBounds_28(_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E * value)
	{
		___SetOverlayTextureBounds_28 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayTextureBounds_28), value);
	}

	inline static int32_t get_offset_of_GetOverlayTextureBounds_29() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTextureBounds_29)); }
	inline _GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 * get_GetOverlayTextureBounds_29() const { return ___GetOverlayTextureBounds_29; }
	inline _GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 ** get_address_of_GetOverlayTextureBounds_29() { return &___GetOverlayTextureBounds_29; }
	inline void set_GetOverlayTextureBounds_29(_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 * value)
	{
		___GetOverlayTextureBounds_29 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTextureBounds_29), value);
	}

	inline static int32_t get_offset_of_GetOverlayRenderModel_30() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayRenderModel_30)); }
	inline _GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 * get_GetOverlayRenderModel_30() const { return ___GetOverlayRenderModel_30; }
	inline _GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 ** get_address_of_GetOverlayRenderModel_30() { return &___GetOverlayRenderModel_30; }
	inline void set_GetOverlayRenderModel_30(_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 * value)
	{
		___GetOverlayRenderModel_30 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayRenderModel_30), value);
	}

	inline static int32_t get_offset_of_SetOverlayRenderModel_31() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayRenderModel_31)); }
	inline _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 * get_SetOverlayRenderModel_31() const { return ___SetOverlayRenderModel_31; }
	inline _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 ** get_address_of_SetOverlayRenderModel_31() { return &___SetOverlayRenderModel_31; }
	inline void set_SetOverlayRenderModel_31(_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 * value)
	{
		___SetOverlayRenderModel_31 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayRenderModel_31), value);
	}

	inline static int32_t get_offset_of_GetOverlayTransformType_32() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTransformType_32)); }
	inline _GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 * get_GetOverlayTransformType_32() const { return ___GetOverlayTransformType_32; }
	inline _GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 ** get_address_of_GetOverlayTransformType_32() { return &___GetOverlayTransformType_32; }
	inline void set_GetOverlayTransformType_32(_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 * value)
	{
		___GetOverlayTransformType_32 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTransformType_32), value);
	}

	inline static int32_t get_offset_of_SetOverlayTransformAbsolute_33() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayTransformAbsolute_33)); }
	inline _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 * get_SetOverlayTransformAbsolute_33() const { return ___SetOverlayTransformAbsolute_33; }
	inline _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 ** get_address_of_SetOverlayTransformAbsolute_33() { return &___SetOverlayTransformAbsolute_33; }
	inline void set_SetOverlayTransformAbsolute_33(_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 * value)
	{
		___SetOverlayTransformAbsolute_33 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayTransformAbsolute_33), value);
	}

	inline static int32_t get_offset_of_GetOverlayTransformAbsolute_34() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTransformAbsolute_34)); }
	inline _GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 * get_GetOverlayTransformAbsolute_34() const { return ___GetOverlayTransformAbsolute_34; }
	inline _GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 ** get_address_of_GetOverlayTransformAbsolute_34() { return &___GetOverlayTransformAbsolute_34; }
	inline void set_GetOverlayTransformAbsolute_34(_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 * value)
	{
		___GetOverlayTransformAbsolute_34 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTransformAbsolute_34), value);
	}

	inline static int32_t get_offset_of_SetOverlayTransformTrackedDeviceRelative_35() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayTransformTrackedDeviceRelative_35)); }
	inline _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 * get_SetOverlayTransformTrackedDeviceRelative_35() const { return ___SetOverlayTransformTrackedDeviceRelative_35; }
	inline _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 ** get_address_of_SetOverlayTransformTrackedDeviceRelative_35() { return &___SetOverlayTransformTrackedDeviceRelative_35; }
	inline void set_SetOverlayTransformTrackedDeviceRelative_35(_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 * value)
	{
		___SetOverlayTransformTrackedDeviceRelative_35 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayTransformTrackedDeviceRelative_35), value);
	}

	inline static int32_t get_offset_of_GetOverlayTransformTrackedDeviceRelative_36() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTransformTrackedDeviceRelative_36)); }
	inline _GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B * get_GetOverlayTransformTrackedDeviceRelative_36() const { return ___GetOverlayTransformTrackedDeviceRelative_36; }
	inline _GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B ** get_address_of_GetOverlayTransformTrackedDeviceRelative_36() { return &___GetOverlayTransformTrackedDeviceRelative_36; }
	inline void set_GetOverlayTransformTrackedDeviceRelative_36(_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B * value)
	{
		___GetOverlayTransformTrackedDeviceRelative_36 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTransformTrackedDeviceRelative_36), value);
	}

	inline static int32_t get_offset_of_SetOverlayTransformTrackedDeviceComponent_37() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayTransformTrackedDeviceComponent_37)); }
	inline _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 * get_SetOverlayTransformTrackedDeviceComponent_37() const { return ___SetOverlayTransformTrackedDeviceComponent_37; }
	inline _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 ** get_address_of_SetOverlayTransformTrackedDeviceComponent_37() { return &___SetOverlayTransformTrackedDeviceComponent_37; }
	inline void set_SetOverlayTransformTrackedDeviceComponent_37(_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 * value)
	{
		___SetOverlayTransformTrackedDeviceComponent_37 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayTransformTrackedDeviceComponent_37), value);
	}

	inline static int32_t get_offset_of_GetOverlayTransformTrackedDeviceComponent_38() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTransformTrackedDeviceComponent_38)); }
	inline _GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF * get_GetOverlayTransformTrackedDeviceComponent_38() const { return ___GetOverlayTransformTrackedDeviceComponent_38; }
	inline _GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF ** get_address_of_GetOverlayTransformTrackedDeviceComponent_38() { return &___GetOverlayTransformTrackedDeviceComponent_38; }
	inline void set_GetOverlayTransformTrackedDeviceComponent_38(_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF * value)
	{
		___GetOverlayTransformTrackedDeviceComponent_38 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTransformTrackedDeviceComponent_38), value);
	}

	inline static int32_t get_offset_of_GetOverlayTransformOverlayRelative_39() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTransformOverlayRelative_39)); }
	inline _GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 * get_GetOverlayTransformOverlayRelative_39() const { return ___GetOverlayTransformOverlayRelative_39; }
	inline _GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 ** get_address_of_GetOverlayTransformOverlayRelative_39() { return &___GetOverlayTransformOverlayRelative_39; }
	inline void set_GetOverlayTransformOverlayRelative_39(_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 * value)
	{
		___GetOverlayTransformOverlayRelative_39 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTransformOverlayRelative_39), value);
	}

	inline static int32_t get_offset_of_SetOverlayTransformOverlayRelative_40() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayTransformOverlayRelative_40)); }
	inline _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 * get_SetOverlayTransformOverlayRelative_40() const { return ___SetOverlayTransformOverlayRelative_40; }
	inline _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 ** get_address_of_SetOverlayTransformOverlayRelative_40() { return &___SetOverlayTransformOverlayRelative_40; }
	inline void set_SetOverlayTransformOverlayRelative_40(_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 * value)
	{
		___SetOverlayTransformOverlayRelative_40 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayTransformOverlayRelative_40), value);
	}

	inline static int32_t get_offset_of_ShowOverlay_41() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___ShowOverlay_41)); }
	inline _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 * get_ShowOverlay_41() const { return ___ShowOverlay_41; }
	inline _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 ** get_address_of_ShowOverlay_41() { return &___ShowOverlay_41; }
	inline void set_ShowOverlay_41(_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 * value)
	{
		___ShowOverlay_41 = value;
		Il2CppCodeGenWriteBarrier((&___ShowOverlay_41), value);
	}

	inline static int32_t get_offset_of_HideOverlay_42() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___HideOverlay_42)); }
	inline _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC * get_HideOverlay_42() const { return ___HideOverlay_42; }
	inline _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC ** get_address_of_HideOverlay_42() { return &___HideOverlay_42; }
	inline void set_HideOverlay_42(_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC * value)
	{
		___HideOverlay_42 = value;
		Il2CppCodeGenWriteBarrier((&___HideOverlay_42), value);
	}

	inline static int32_t get_offset_of_IsOverlayVisible_43() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___IsOverlayVisible_43)); }
	inline _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 * get_IsOverlayVisible_43() const { return ___IsOverlayVisible_43; }
	inline _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 ** get_address_of_IsOverlayVisible_43() { return &___IsOverlayVisible_43; }
	inline void set_IsOverlayVisible_43(_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 * value)
	{
		___IsOverlayVisible_43 = value;
		Il2CppCodeGenWriteBarrier((&___IsOverlayVisible_43), value);
	}

	inline static int32_t get_offset_of_GetTransformForOverlayCoordinates_44() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetTransformForOverlayCoordinates_44)); }
	inline _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA * get_GetTransformForOverlayCoordinates_44() const { return ___GetTransformForOverlayCoordinates_44; }
	inline _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA ** get_address_of_GetTransformForOverlayCoordinates_44() { return &___GetTransformForOverlayCoordinates_44; }
	inline void set_GetTransformForOverlayCoordinates_44(_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA * value)
	{
		___GetTransformForOverlayCoordinates_44 = value;
		Il2CppCodeGenWriteBarrier((&___GetTransformForOverlayCoordinates_44), value);
	}

	inline static int32_t get_offset_of_PollNextOverlayEvent_45() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___PollNextOverlayEvent_45)); }
	inline _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 * get_PollNextOverlayEvent_45() const { return ___PollNextOverlayEvent_45; }
	inline _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 ** get_address_of_PollNextOverlayEvent_45() { return &___PollNextOverlayEvent_45; }
	inline void set_PollNextOverlayEvent_45(_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 * value)
	{
		___PollNextOverlayEvent_45 = value;
		Il2CppCodeGenWriteBarrier((&___PollNextOverlayEvent_45), value);
	}

	inline static int32_t get_offset_of_GetOverlayInputMethod_46() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayInputMethod_46)); }
	inline _GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E * get_GetOverlayInputMethod_46() const { return ___GetOverlayInputMethod_46; }
	inline _GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E ** get_address_of_GetOverlayInputMethod_46() { return &___GetOverlayInputMethod_46; }
	inline void set_GetOverlayInputMethod_46(_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E * value)
	{
		___GetOverlayInputMethod_46 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayInputMethod_46), value);
	}

	inline static int32_t get_offset_of_SetOverlayInputMethod_47() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayInputMethod_47)); }
	inline _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 * get_SetOverlayInputMethod_47() const { return ___SetOverlayInputMethod_47; }
	inline _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 ** get_address_of_SetOverlayInputMethod_47() { return &___SetOverlayInputMethod_47; }
	inline void set_SetOverlayInputMethod_47(_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 * value)
	{
		___SetOverlayInputMethod_47 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayInputMethod_47), value);
	}

	inline static int32_t get_offset_of_GetOverlayMouseScale_48() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayMouseScale_48)); }
	inline _GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 * get_GetOverlayMouseScale_48() const { return ___GetOverlayMouseScale_48; }
	inline _GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 ** get_address_of_GetOverlayMouseScale_48() { return &___GetOverlayMouseScale_48; }
	inline void set_GetOverlayMouseScale_48(_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 * value)
	{
		___GetOverlayMouseScale_48 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayMouseScale_48), value);
	}

	inline static int32_t get_offset_of_SetOverlayMouseScale_49() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayMouseScale_49)); }
	inline _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 * get_SetOverlayMouseScale_49() const { return ___SetOverlayMouseScale_49; }
	inline _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 ** get_address_of_SetOverlayMouseScale_49() { return &___SetOverlayMouseScale_49; }
	inline void set_SetOverlayMouseScale_49(_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 * value)
	{
		___SetOverlayMouseScale_49 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayMouseScale_49), value);
	}

	inline static int32_t get_offset_of_ComputeOverlayIntersection_50() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___ComputeOverlayIntersection_50)); }
	inline _ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 * get_ComputeOverlayIntersection_50() const { return ___ComputeOverlayIntersection_50; }
	inline _ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 ** get_address_of_ComputeOverlayIntersection_50() { return &___ComputeOverlayIntersection_50; }
	inline void set_ComputeOverlayIntersection_50(_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 * value)
	{
		___ComputeOverlayIntersection_50 = value;
		Il2CppCodeGenWriteBarrier((&___ComputeOverlayIntersection_50), value);
	}

	inline static int32_t get_offset_of_IsHoverTargetOverlay_51() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___IsHoverTargetOverlay_51)); }
	inline _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 * get_IsHoverTargetOverlay_51() const { return ___IsHoverTargetOverlay_51; }
	inline _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 ** get_address_of_IsHoverTargetOverlay_51() { return &___IsHoverTargetOverlay_51; }
	inline void set_IsHoverTargetOverlay_51(_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 * value)
	{
		___IsHoverTargetOverlay_51 = value;
		Il2CppCodeGenWriteBarrier((&___IsHoverTargetOverlay_51), value);
	}

	inline static int32_t get_offset_of_GetGamepadFocusOverlay_52() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetGamepadFocusOverlay_52)); }
	inline _GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F * get_GetGamepadFocusOverlay_52() const { return ___GetGamepadFocusOverlay_52; }
	inline _GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F ** get_address_of_GetGamepadFocusOverlay_52() { return &___GetGamepadFocusOverlay_52; }
	inline void set_GetGamepadFocusOverlay_52(_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F * value)
	{
		___GetGamepadFocusOverlay_52 = value;
		Il2CppCodeGenWriteBarrier((&___GetGamepadFocusOverlay_52), value);
	}

	inline static int32_t get_offset_of_SetGamepadFocusOverlay_53() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetGamepadFocusOverlay_53)); }
	inline _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 * get_SetGamepadFocusOverlay_53() const { return ___SetGamepadFocusOverlay_53; }
	inline _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 ** get_address_of_SetGamepadFocusOverlay_53() { return &___SetGamepadFocusOverlay_53; }
	inline void set_SetGamepadFocusOverlay_53(_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 * value)
	{
		___SetGamepadFocusOverlay_53 = value;
		Il2CppCodeGenWriteBarrier((&___SetGamepadFocusOverlay_53), value);
	}

	inline static int32_t get_offset_of_SetOverlayNeighbor_54() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayNeighbor_54)); }
	inline _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D * get_SetOverlayNeighbor_54() const { return ___SetOverlayNeighbor_54; }
	inline _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D ** get_address_of_SetOverlayNeighbor_54() { return &___SetOverlayNeighbor_54; }
	inline void set_SetOverlayNeighbor_54(_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D * value)
	{
		___SetOverlayNeighbor_54 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayNeighbor_54), value);
	}

	inline static int32_t get_offset_of_MoveGamepadFocusToNeighbor_55() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___MoveGamepadFocusToNeighbor_55)); }
	inline _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F * get_MoveGamepadFocusToNeighbor_55() const { return ___MoveGamepadFocusToNeighbor_55; }
	inline _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F ** get_address_of_MoveGamepadFocusToNeighbor_55() { return &___MoveGamepadFocusToNeighbor_55; }
	inline void set_MoveGamepadFocusToNeighbor_55(_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F * value)
	{
		___MoveGamepadFocusToNeighbor_55 = value;
		Il2CppCodeGenWriteBarrier((&___MoveGamepadFocusToNeighbor_55), value);
	}

	inline static int32_t get_offset_of_SetOverlayDualAnalogTransform_56() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayDualAnalogTransform_56)); }
	inline _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A * get_SetOverlayDualAnalogTransform_56() const { return ___SetOverlayDualAnalogTransform_56; }
	inline _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A ** get_address_of_SetOverlayDualAnalogTransform_56() { return &___SetOverlayDualAnalogTransform_56; }
	inline void set_SetOverlayDualAnalogTransform_56(_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A * value)
	{
		___SetOverlayDualAnalogTransform_56 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayDualAnalogTransform_56), value);
	}

	inline static int32_t get_offset_of_GetOverlayDualAnalogTransform_57() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayDualAnalogTransform_57)); }
	inline _GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 * get_GetOverlayDualAnalogTransform_57() const { return ___GetOverlayDualAnalogTransform_57; }
	inline _GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 ** get_address_of_GetOverlayDualAnalogTransform_57() { return &___GetOverlayDualAnalogTransform_57; }
	inline void set_GetOverlayDualAnalogTransform_57(_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 * value)
	{
		___GetOverlayDualAnalogTransform_57 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayDualAnalogTransform_57), value);
	}

	inline static int32_t get_offset_of_SetOverlayTexture_58() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayTexture_58)); }
	inline _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C * get_SetOverlayTexture_58() const { return ___SetOverlayTexture_58; }
	inline _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C ** get_address_of_SetOverlayTexture_58() { return &___SetOverlayTexture_58; }
	inline void set_SetOverlayTexture_58(_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C * value)
	{
		___SetOverlayTexture_58 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayTexture_58), value);
	}

	inline static int32_t get_offset_of_ClearOverlayTexture_59() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___ClearOverlayTexture_59)); }
	inline _ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E * get_ClearOverlayTexture_59() const { return ___ClearOverlayTexture_59; }
	inline _ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E ** get_address_of_ClearOverlayTexture_59() { return &___ClearOverlayTexture_59; }
	inline void set_ClearOverlayTexture_59(_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E * value)
	{
		___ClearOverlayTexture_59 = value;
		Il2CppCodeGenWriteBarrier((&___ClearOverlayTexture_59), value);
	}

	inline static int32_t get_offset_of_SetOverlayRaw_60() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayRaw_60)); }
	inline _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 * get_SetOverlayRaw_60() const { return ___SetOverlayRaw_60; }
	inline _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 ** get_address_of_SetOverlayRaw_60() { return &___SetOverlayRaw_60; }
	inline void set_SetOverlayRaw_60(_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 * value)
	{
		___SetOverlayRaw_60 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayRaw_60), value);
	}

	inline static int32_t get_offset_of_SetOverlayFromFile_61() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayFromFile_61)); }
	inline _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F * get_SetOverlayFromFile_61() const { return ___SetOverlayFromFile_61; }
	inline _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F ** get_address_of_SetOverlayFromFile_61() { return &___SetOverlayFromFile_61; }
	inline void set_SetOverlayFromFile_61(_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F * value)
	{
		___SetOverlayFromFile_61 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayFromFile_61), value);
	}

	inline static int32_t get_offset_of_GetOverlayTexture_62() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTexture_62)); }
	inline _GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 * get_GetOverlayTexture_62() const { return ___GetOverlayTexture_62; }
	inline _GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 ** get_address_of_GetOverlayTexture_62() { return &___GetOverlayTexture_62; }
	inline void set_GetOverlayTexture_62(_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 * value)
	{
		___GetOverlayTexture_62 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTexture_62), value);
	}

	inline static int32_t get_offset_of_ReleaseNativeOverlayHandle_63() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___ReleaseNativeOverlayHandle_63)); }
	inline _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 * get_ReleaseNativeOverlayHandle_63() const { return ___ReleaseNativeOverlayHandle_63; }
	inline _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 ** get_address_of_ReleaseNativeOverlayHandle_63() { return &___ReleaseNativeOverlayHandle_63; }
	inline void set_ReleaseNativeOverlayHandle_63(_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 * value)
	{
		___ReleaseNativeOverlayHandle_63 = value;
		Il2CppCodeGenWriteBarrier((&___ReleaseNativeOverlayHandle_63), value);
	}

	inline static int32_t get_offset_of_GetOverlayTextureSize_64() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayTextureSize_64)); }
	inline _GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 * get_GetOverlayTextureSize_64() const { return ___GetOverlayTextureSize_64; }
	inline _GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 ** get_address_of_GetOverlayTextureSize_64() { return &___GetOverlayTextureSize_64; }
	inline void set_GetOverlayTextureSize_64(_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 * value)
	{
		___GetOverlayTextureSize_64 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayTextureSize_64), value);
	}

	inline static int32_t get_offset_of_CreateDashboardOverlay_65() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___CreateDashboardOverlay_65)); }
	inline _CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B * get_CreateDashboardOverlay_65() const { return ___CreateDashboardOverlay_65; }
	inline _CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B ** get_address_of_CreateDashboardOverlay_65() { return &___CreateDashboardOverlay_65; }
	inline void set_CreateDashboardOverlay_65(_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B * value)
	{
		___CreateDashboardOverlay_65 = value;
		Il2CppCodeGenWriteBarrier((&___CreateDashboardOverlay_65), value);
	}

	inline static int32_t get_offset_of_IsDashboardVisible_66() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___IsDashboardVisible_66)); }
	inline _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C * get_IsDashboardVisible_66() const { return ___IsDashboardVisible_66; }
	inline _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C ** get_address_of_IsDashboardVisible_66() { return &___IsDashboardVisible_66; }
	inline void set_IsDashboardVisible_66(_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C * value)
	{
		___IsDashboardVisible_66 = value;
		Il2CppCodeGenWriteBarrier((&___IsDashboardVisible_66), value);
	}

	inline static int32_t get_offset_of_IsActiveDashboardOverlay_67() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___IsActiveDashboardOverlay_67)); }
	inline _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B * get_IsActiveDashboardOverlay_67() const { return ___IsActiveDashboardOverlay_67; }
	inline _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B ** get_address_of_IsActiveDashboardOverlay_67() { return &___IsActiveDashboardOverlay_67; }
	inline void set_IsActiveDashboardOverlay_67(_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B * value)
	{
		___IsActiveDashboardOverlay_67 = value;
		Il2CppCodeGenWriteBarrier((&___IsActiveDashboardOverlay_67), value);
	}

	inline static int32_t get_offset_of_SetDashboardOverlaySceneProcess_68() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetDashboardOverlaySceneProcess_68)); }
	inline _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C * get_SetDashboardOverlaySceneProcess_68() const { return ___SetDashboardOverlaySceneProcess_68; }
	inline _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C ** get_address_of_SetDashboardOverlaySceneProcess_68() { return &___SetDashboardOverlaySceneProcess_68; }
	inline void set_SetDashboardOverlaySceneProcess_68(_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C * value)
	{
		___SetDashboardOverlaySceneProcess_68 = value;
		Il2CppCodeGenWriteBarrier((&___SetDashboardOverlaySceneProcess_68), value);
	}

	inline static int32_t get_offset_of_GetDashboardOverlaySceneProcess_69() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetDashboardOverlaySceneProcess_69)); }
	inline _GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 * get_GetDashboardOverlaySceneProcess_69() const { return ___GetDashboardOverlaySceneProcess_69; }
	inline _GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 ** get_address_of_GetDashboardOverlaySceneProcess_69() { return &___GetDashboardOverlaySceneProcess_69; }
	inline void set_GetDashboardOverlaySceneProcess_69(_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 * value)
	{
		___GetDashboardOverlaySceneProcess_69 = value;
		Il2CppCodeGenWriteBarrier((&___GetDashboardOverlaySceneProcess_69), value);
	}

	inline static int32_t get_offset_of_ShowDashboard_70() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___ShowDashboard_70)); }
	inline _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 * get_ShowDashboard_70() const { return ___ShowDashboard_70; }
	inline _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 ** get_address_of_ShowDashboard_70() { return &___ShowDashboard_70; }
	inline void set_ShowDashboard_70(_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 * value)
	{
		___ShowDashboard_70 = value;
		Il2CppCodeGenWriteBarrier((&___ShowDashboard_70), value);
	}

	inline static int32_t get_offset_of_GetPrimaryDashboardDevice_71() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetPrimaryDashboardDevice_71)); }
	inline _GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C * get_GetPrimaryDashboardDevice_71() const { return ___GetPrimaryDashboardDevice_71; }
	inline _GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C ** get_address_of_GetPrimaryDashboardDevice_71() { return &___GetPrimaryDashboardDevice_71; }
	inline void set_GetPrimaryDashboardDevice_71(_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C * value)
	{
		___GetPrimaryDashboardDevice_71 = value;
		Il2CppCodeGenWriteBarrier((&___GetPrimaryDashboardDevice_71), value);
	}

	inline static int32_t get_offset_of_ShowKeyboard_72() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___ShowKeyboard_72)); }
	inline _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 * get_ShowKeyboard_72() const { return ___ShowKeyboard_72; }
	inline _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 ** get_address_of_ShowKeyboard_72() { return &___ShowKeyboard_72; }
	inline void set_ShowKeyboard_72(_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 * value)
	{
		___ShowKeyboard_72 = value;
		Il2CppCodeGenWriteBarrier((&___ShowKeyboard_72), value);
	}

	inline static int32_t get_offset_of_ShowKeyboardForOverlay_73() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___ShowKeyboardForOverlay_73)); }
	inline _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 * get_ShowKeyboardForOverlay_73() const { return ___ShowKeyboardForOverlay_73; }
	inline _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 ** get_address_of_ShowKeyboardForOverlay_73() { return &___ShowKeyboardForOverlay_73; }
	inline void set_ShowKeyboardForOverlay_73(_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 * value)
	{
		___ShowKeyboardForOverlay_73 = value;
		Il2CppCodeGenWriteBarrier((&___ShowKeyboardForOverlay_73), value);
	}

	inline static int32_t get_offset_of_GetKeyboardText_74() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetKeyboardText_74)); }
	inline _GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 * get_GetKeyboardText_74() const { return ___GetKeyboardText_74; }
	inline _GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 ** get_address_of_GetKeyboardText_74() { return &___GetKeyboardText_74; }
	inline void set_GetKeyboardText_74(_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 * value)
	{
		___GetKeyboardText_74 = value;
		Il2CppCodeGenWriteBarrier((&___GetKeyboardText_74), value);
	}

	inline static int32_t get_offset_of_HideKeyboard_75() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___HideKeyboard_75)); }
	inline _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 * get_HideKeyboard_75() const { return ___HideKeyboard_75; }
	inline _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 ** get_address_of_HideKeyboard_75() { return &___HideKeyboard_75; }
	inline void set_HideKeyboard_75(_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 * value)
	{
		___HideKeyboard_75 = value;
		Il2CppCodeGenWriteBarrier((&___HideKeyboard_75), value);
	}

	inline static int32_t get_offset_of_SetKeyboardTransformAbsolute_76() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetKeyboardTransformAbsolute_76)); }
	inline _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA * get_SetKeyboardTransformAbsolute_76() const { return ___SetKeyboardTransformAbsolute_76; }
	inline _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA ** get_address_of_SetKeyboardTransformAbsolute_76() { return &___SetKeyboardTransformAbsolute_76; }
	inline void set_SetKeyboardTransformAbsolute_76(_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA * value)
	{
		___SetKeyboardTransformAbsolute_76 = value;
		Il2CppCodeGenWriteBarrier((&___SetKeyboardTransformAbsolute_76), value);
	}

	inline static int32_t get_offset_of_SetKeyboardPositionForOverlay_77() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetKeyboardPositionForOverlay_77)); }
	inline _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF * get_SetKeyboardPositionForOverlay_77() const { return ___SetKeyboardPositionForOverlay_77; }
	inline _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF ** get_address_of_SetKeyboardPositionForOverlay_77() { return &___SetKeyboardPositionForOverlay_77; }
	inline void set_SetKeyboardPositionForOverlay_77(_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF * value)
	{
		___SetKeyboardPositionForOverlay_77 = value;
		Il2CppCodeGenWriteBarrier((&___SetKeyboardPositionForOverlay_77), value);
	}

	inline static int32_t get_offset_of_SetOverlayIntersectionMask_78() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___SetOverlayIntersectionMask_78)); }
	inline _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 * get_SetOverlayIntersectionMask_78() const { return ___SetOverlayIntersectionMask_78; }
	inline _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 ** get_address_of_SetOverlayIntersectionMask_78() { return &___SetOverlayIntersectionMask_78; }
	inline void set_SetOverlayIntersectionMask_78(_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 * value)
	{
		___SetOverlayIntersectionMask_78 = value;
		Il2CppCodeGenWriteBarrier((&___SetOverlayIntersectionMask_78), value);
	}

	inline static int32_t get_offset_of_GetOverlayFlags_79() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___GetOverlayFlags_79)); }
	inline _GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 * get_GetOverlayFlags_79() const { return ___GetOverlayFlags_79; }
	inline _GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 ** get_address_of_GetOverlayFlags_79() { return &___GetOverlayFlags_79; }
	inline void set_GetOverlayFlags_79(_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 * value)
	{
		___GetOverlayFlags_79 = value;
		Il2CppCodeGenWriteBarrier((&___GetOverlayFlags_79), value);
	}

	inline static int32_t get_offset_of_ShowMessageOverlay_80() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___ShowMessageOverlay_80)); }
	inline _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F * get_ShowMessageOverlay_80() const { return ___ShowMessageOverlay_80; }
	inline _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F ** get_address_of_ShowMessageOverlay_80() { return &___ShowMessageOverlay_80; }
	inline void set_ShowMessageOverlay_80(_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F * value)
	{
		___ShowMessageOverlay_80 = value;
		Il2CppCodeGenWriteBarrier((&___ShowMessageOverlay_80), value);
	}

	inline static int32_t get_offset_of_CloseMessageOverlay_81() { return static_cast<int32_t>(offsetof(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9, ___CloseMessageOverlay_81)); }
	inline _CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 * get_CloseMessageOverlay_81() const { return ___CloseMessageOverlay_81; }
	inline _CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 ** get_address_of_CloseMessageOverlay_81() { return &___CloseMessageOverlay_81; }
	inline void set_CloseMessageOverlay_81(_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 * value)
	{
		___CloseMessageOverlay_81 = value;
		Il2CppCodeGenWriteBarrier((&___CloseMessageOverlay_81), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVROverlay
struct IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshaled_pinvoke
{
	Il2CppMethodPointer ___FindOverlay_0;
	Il2CppMethodPointer ___CreateOverlay_1;
	Il2CppMethodPointer ___DestroyOverlay_2;
	Il2CppMethodPointer ___SetHighQualityOverlay_3;
	Il2CppMethodPointer ___GetHighQualityOverlay_4;
	Il2CppMethodPointer ___GetOverlayKey_5;
	Il2CppMethodPointer ___GetOverlayName_6;
	Il2CppMethodPointer ___SetOverlayName_7;
	Il2CppMethodPointer ___GetOverlayImageData_8;
	Il2CppMethodPointer ___GetOverlayErrorNameFromEnum_9;
	Il2CppMethodPointer ___SetOverlayRenderingPid_10;
	Il2CppMethodPointer ___GetOverlayRenderingPid_11;
	Il2CppMethodPointer ___SetOverlayFlag_12;
	Il2CppMethodPointer ___GetOverlayFlag_13;
	Il2CppMethodPointer ___SetOverlayColor_14;
	Il2CppMethodPointer ___GetOverlayColor_15;
	Il2CppMethodPointer ___SetOverlayAlpha_16;
	Il2CppMethodPointer ___GetOverlayAlpha_17;
	Il2CppMethodPointer ___SetOverlayTexelAspect_18;
	Il2CppMethodPointer ___GetOverlayTexelAspect_19;
	Il2CppMethodPointer ___SetOverlaySortOrder_20;
	Il2CppMethodPointer ___GetOverlaySortOrder_21;
	Il2CppMethodPointer ___SetOverlayWidthInMeters_22;
	Il2CppMethodPointer ___GetOverlayWidthInMeters_23;
	Il2CppMethodPointer ___SetOverlayAutoCurveDistanceRangeInMeters_24;
	Il2CppMethodPointer ___GetOverlayAutoCurveDistanceRangeInMeters_25;
	Il2CppMethodPointer ___SetOverlayTextureColorSpace_26;
	Il2CppMethodPointer ___GetOverlayTextureColorSpace_27;
	Il2CppMethodPointer ___SetOverlayTextureBounds_28;
	Il2CppMethodPointer ___GetOverlayTextureBounds_29;
	Il2CppMethodPointer ___GetOverlayRenderModel_30;
	Il2CppMethodPointer ___SetOverlayRenderModel_31;
	Il2CppMethodPointer ___GetOverlayTransformType_32;
	Il2CppMethodPointer ___SetOverlayTransformAbsolute_33;
	Il2CppMethodPointer ___GetOverlayTransformAbsolute_34;
	Il2CppMethodPointer ___SetOverlayTransformTrackedDeviceRelative_35;
	Il2CppMethodPointer ___GetOverlayTransformTrackedDeviceRelative_36;
	Il2CppMethodPointer ___SetOverlayTransformTrackedDeviceComponent_37;
	Il2CppMethodPointer ___GetOverlayTransformTrackedDeviceComponent_38;
	Il2CppMethodPointer ___GetOverlayTransformOverlayRelative_39;
	Il2CppMethodPointer ___SetOverlayTransformOverlayRelative_40;
	Il2CppMethodPointer ___ShowOverlay_41;
	Il2CppMethodPointer ___HideOverlay_42;
	Il2CppMethodPointer ___IsOverlayVisible_43;
	Il2CppMethodPointer ___GetTransformForOverlayCoordinates_44;
	Il2CppMethodPointer ___PollNextOverlayEvent_45;
	Il2CppMethodPointer ___GetOverlayInputMethod_46;
	Il2CppMethodPointer ___SetOverlayInputMethod_47;
	Il2CppMethodPointer ___GetOverlayMouseScale_48;
	Il2CppMethodPointer ___SetOverlayMouseScale_49;
	Il2CppMethodPointer ___ComputeOverlayIntersection_50;
	Il2CppMethodPointer ___IsHoverTargetOverlay_51;
	Il2CppMethodPointer ___GetGamepadFocusOverlay_52;
	Il2CppMethodPointer ___SetGamepadFocusOverlay_53;
	Il2CppMethodPointer ___SetOverlayNeighbor_54;
	Il2CppMethodPointer ___MoveGamepadFocusToNeighbor_55;
	Il2CppMethodPointer ___SetOverlayDualAnalogTransform_56;
	Il2CppMethodPointer ___GetOverlayDualAnalogTransform_57;
	Il2CppMethodPointer ___SetOverlayTexture_58;
	Il2CppMethodPointer ___ClearOverlayTexture_59;
	Il2CppMethodPointer ___SetOverlayRaw_60;
	Il2CppMethodPointer ___SetOverlayFromFile_61;
	Il2CppMethodPointer ___GetOverlayTexture_62;
	Il2CppMethodPointer ___ReleaseNativeOverlayHandle_63;
	Il2CppMethodPointer ___GetOverlayTextureSize_64;
	Il2CppMethodPointer ___CreateDashboardOverlay_65;
	Il2CppMethodPointer ___IsDashboardVisible_66;
	Il2CppMethodPointer ___IsActiveDashboardOverlay_67;
	Il2CppMethodPointer ___SetDashboardOverlaySceneProcess_68;
	Il2CppMethodPointer ___GetDashboardOverlaySceneProcess_69;
	Il2CppMethodPointer ___ShowDashboard_70;
	Il2CppMethodPointer ___GetPrimaryDashboardDevice_71;
	Il2CppMethodPointer ___ShowKeyboard_72;
	Il2CppMethodPointer ___ShowKeyboardForOverlay_73;
	Il2CppMethodPointer ___GetKeyboardText_74;
	Il2CppMethodPointer ___HideKeyboard_75;
	Il2CppMethodPointer ___SetKeyboardTransformAbsolute_76;
	Il2CppMethodPointer ___SetKeyboardPositionForOverlay_77;
	Il2CppMethodPointer ___SetOverlayIntersectionMask_78;
	Il2CppMethodPointer ___GetOverlayFlags_79;
	Il2CppMethodPointer ___ShowMessageOverlay_80;
	Il2CppMethodPointer ___CloseMessageOverlay_81;
};
// Native definition for COM marshalling of Valve.VR.IVROverlay
struct IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshaled_com
{
	Il2CppMethodPointer ___FindOverlay_0;
	Il2CppMethodPointer ___CreateOverlay_1;
	Il2CppMethodPointer ___DestroyOverlay_2;
	Il2CppMethodPointer ___SetHighQualityOverlay_3;
	Il2CppMethodPointer ___GetHighQualityOverlay_4;
	Il2CppMethodPointer ___GetOverlayKey_5;
	Il2CppMethodPointer ___GetOverlayName_6;
	Il2CppMethodPointer ___SetOverlayName_7;
	Il2CppMethodPointer ___GetOverlayImageData_8;
	Il2CppMethodPointer ___GetOverlayErrorNameFromEnum_9;
	Il2CppMethodPointer ___SetOverlayRenderingPid_10;
	Il2CppMethodPointer ___GetOverlayRenderingPid_11;
	Il2CppMethodPointer ___SetOverlayFlag_12;
	Il2CppMethodPointer ___GetOverlayFlag_13;
	Il2CppMethodPointer ___SetOverlayColor_14;
	Il2CppMethodPointer ___GetOverlayColor_15;
	Il2CppMethodPointer ___SetOverlayAlpha_16;
	Il2CppMethodPointer ___GetOverlayAlpha_17;
	Il2CppMethodPointer ___SetOverlayTexelAspect_18;
	Il2CppMethodPointer ___GetOverlayTexelAspect_19;
	Il2CppMethodPointer ___SetOverlaySortOrder_20;
	Il2CppMethodPointer ___GetOverlaySortOrder_21;
	Il2CppMethodPointer ___SetOverlayWidthInMeters_22;
	Il2CppMethodPointer ___GetOverlayWidthInMeters_23;
	Il2CppMethodPointer ___SetOverlayAutoCurveDistanceRangeInMeters_24;
	Il2CppMethodPointer ___GetOverlayAutoCurveDistanceRangeInMeters_25;
	Il2CppMethodPointer ___SetOverlayTextureColorSpace_26;
	Il2CppMethodPointer ___GetOverlayTextureColorSpace_27;
	Il2CppMethodPointer ___SetOverlayTextureBounds_28;
	Il2CppMethodPointer ___GetOverlayTextureBounds_29;
	Il2CppMethodPointer ___GetOverlayRenderModel_30;
	Il2CppMethodPointer ___SetOverlayRenderModel_31;
	Il2CppMethodPointer ___GetOverlayTransformType_32;
	Il2CppMethodPointer ___SetOverlayTransformAbsolute_33;
	Il2CppMethodPointer ___GetOverlayTransformAbsolute_34;
	Il2CppMethodPointer ___SetOverlayTransformTrackedDeviceRelative_35;
	Il2CppMethodPointer ___GetOverlayTransformTrackedDeviceRelative_36;
	Il2CppMethodPointer ___SetOverlayTransformTrackedDeviceComponent_37;
	Il2CppMethodPointer ___GetOverlayTransformTrackedDeviceComponent_38;
	Il2CppMethodPointer ___GetOverlayTransformOverlayRelative_39;
	Il2CppMethodPointer ___SetOverlayTransformOverlayRelative_40;
	Il2CppMethodPointer ___ShowOverlay_41;
	Il2CppMethodPointer ___HideOverlay_42;
	Il2CppMethodPointer ___IsOverlayVisible_43;
	Il2CppMethodPointer ___GetTransformForOverlayCoordinates_44;
	Il2CppMethodPointer ___PollNextOverlayEvent_45;
	Il2CppMethodPointer ___GetOverlayInputMethod_46;
	Il2CppMethodPointer ___SetOverlayInputMethod_47;
	Il2CppMethodPointer ___GetOverlayMouseScale_48;
	Il2CppMethodPointer ___SetOverlayMouseScale_49;
	Il2CppMethodPointer ___ComputeOverlayIntersection_50;
	Il2CppMethodPointer ___IsHoverTargetOverlay_51;
	Il2CppMethodPointer ___GetGamepadFocusOverlay_52;
	Il2CppMethodPointer ___SetGamepadFocusOverlay_53;
	Il2CppMethodPointer ___SetOverlayNeighbor_54;
	Il2CppMethodPointer ___MoveGamepadFocusToNeighbor_55;
	Il2CppMethodPointer ___SetOverlayDualAnalogTransform_56;
	Il2CppMethodPointer ___GetOverlayDualAnalogTransform_57;
	Il2CppMethodPointer ___SetOverlayTexture_58;
	Il2CppMethodPointer ___ClearOverlayTexture_59;
	Il2CppMethodPointer ___SetOverlayRaw_60;
	Il2CppMethodPointer ___SetOverlayFromFile_61;
	Il2CppMethodPointer ___GetOverlayTexture_62;
	Il2CppMethodPointer ___ReleaseNativeOverlayHandle_63;
	Il2CppMethodPointer ___GetOverlayTextureSize_64;
	Il2CppMethodPointer ___CreateDashboardOverlay_65;
	Il2CppMethodPointer ___IsDashboardVisible_66;
	Il2CppMethodPointer ___IsActiveDashboardOverlay_67;
	Il2CppMethodPointer ___SetDashboardOverlaySceneProcess_68;
	Il2CppMethodPointer ___GetDashboardOverlaySceneProcess_69;
	Il2CppMethodPointer ___ShowDashboard_70;
	Il2CppMethodPointer ___GetPrimaryDashboardDevice_71;
	Il2CppMethodPointer ___ShowKeyboard_72;
	Il2CppMethodPointer ___ShowKeyboardForOverlay_73;
	Il2CppMethodPointer ___GetKeyboardText_74;
	Il2CppMethodPointer ___HideKeyboard_75;
	Il2CppMethodPointer ___SetKeyboardTransformAbsolute_76;
	Il2CppMethodPointer ___SetKeyboardPositionForOverlay_77;
	Il2CppMethodPointer ___SetOverlayIntersectionMask_78;
	Il2CppMethodPointer ___GetOverlayFlags_79;
	Il2CppMethodPointer ___ShowMessageOverlay_80;
	Il2CppMethodPointer ___CloseMessageOverlay_81;
};
#endif // IVROVERLAY_TFAE763C447352BFE3C1D4D3C08166F27314AA8D9_H
#ifndef INTERSECTIONMASKCIRCLE_T_TCD5731997063808F07FA42C3774ECE5DC9272725_H
#define INTERSECTIONMASKCIRCLE_T_TCD5731997063808F07FA42C3774ECE5DC9272725_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IntersectionMaskCircle_t
struct  IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725 
{
public:
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flCenterX
	float ___m_flCenterX_0;
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flCenterY
	float ___m_flCenterY_1;
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flRadius
	float ___m_flRadius_2;

public:
	inline static int32_t get_offset_of_m_flCenterX_0() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725, ___m_flCenterX_0)); }
	inline float get_m_flCenterX_0() const { return ___m_flCenterX_0; }
	inline float* get_address_of_m_flCenterX_0() { return &___m_flCenterX_0; }
	inline void set_m_flCenterX_0(float value)
	{
		___m_flCenterX_0 = value;
	}

	inline static int32_t get_offset_of_m_flCenterY_1() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725, ___m_flCenterY_1)); }
	inline float get_m_flCenterY_1() const { return ___m_flCenterY_1; }
	inline float* get_address_of_m_flCenterY_1() { return &___m_flCenterY_1; }
	inline void set_m_flCenterY_1(float value)
	{
		___m_flCenterY_1 = value;
	}

	inline static int32_t get_offset_of_m_flRadius_2() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725, ___m_flRadius_2)); }
	inline float get_m_flRadius_2() const { return ___m_flRadius_2; }
	inline float* get_address_of_m_flRadius_2() { return &___m_flRadius_2; }
	inline void set_m_flRadius_2(float value)
	{
		___m_flRadius_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // INTERSECTIONMASKCIRCLE_T_TCD5731997063808F07FA42C3774ECE5DC9272725_H
#ifndef INTERSECTIONMASKRECTANGLE_T_T0644AB30C559134DA3794A92E18F2D71ABB948A8_H
#define INTERSECTIONMASKRECTANGLE_T_T0644AB30C559134DA3794A92E18F2D71ABB948A8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IntersectionMaskRectangle_t
struct  IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8 
{
public:
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flTopLeftX
	float ___m_flTopLeftX_0;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flTopLeftY
	float ___m_flTopLeftY_1;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flWidth
	float ___m_flWidth_2;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flHeight
	float ___m_flHeight_3;

public:
	inline static int32_t get_offset_of_m_flTopLeftX_0() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8, ___m_flTopLeftX_0)); }
	inline float get_m_flTopLeftX_0() const { return ___m_flTopLeftX_0; }
	inline float* get_address_of_m_flTopLeftX_0() { return &___m_flTopLeftX_0; }
	inline void set_m_flTopLeftX_0(float value)
	{
		___m_flTopLeftX_0 = value;
	}

	inline static int32_t get_offset_of_m_flTopLeftY_1() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8, ___m_flTopLeftY_1)); }
	inline float get_m_flTopLeftY_1() const { return ___m_flTopLeftY_1; }
	inline float* get_address_of_m_flTopLeftY_1() { return &___m_flTopLeftY_1; }
	inline void set_m_flTopLeftY_1(float value)
	{
		___m_flTopLeftY_1 = value;
	}

	inline static int32_t get_offset_of_m_flWidth_2() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8, ___m_flWidth_2)); }
	inline float get_m_flWidth_2() const { return ___m_flWidth_2; }
	inline float* get_address_of_m_flWidth_2() { return &___m_flWidth_2; }
	inline void set_m_flWidth_2(float value)
	{
		___m_flWidth_2 = value;
	}

	inline static int32_t get_offset_of_m_flHeight_3() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8, ___m_flHeight_3)); }
	inline float get_m_flHeight_3() const { return ___m_flHeight_3; }
	inline float* get_address_of_m_flHeight_3() { return &___m_flHeight_3; }
	inline void set_m_flHeight_3(float value)
	{
		___m_flHeight_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // INTERSECTIONMASKRECTANGLE_T_T0644AB30C559134DA3794A92E18F2D71ABB948A8_H
#ifndef VREVENT_APPLICATIONLAUNCH_T_T902F35797A687AA43E57703E160C252BE0877DB8_H
#define VREVENT_APPLICATIONLAUNCH_T_T902F35797A687AA43E57703E160C252BE0877DB8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_ApplicationLaunch_t
struct  VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8 
{
public:
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::unArgsHandle
	uint32_t ___unArgsHandle_1;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_unArgsHandle_1() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8, ___unArgsHandle_1)); }
	inline uint32_t get_unArgsHandle_1() const { return ___unArgsHandle_1; }
	inline uint32_t* get_address_of_unArgsHandle_1() { return &___unArgsHandle_1; }
	inline void set_unArgsHandle_1(uint32_t value)
	{
		___unArgsHandle_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_APPLICATIONLAUNCH_T_T902F35797A687AA43E57703E160C252BE0877DB8_H
#ifndef VREVENT_CHAPERONE_T_T1236967FA48384C188CF6E49C5A991AACC5DF59A_H
#define VREVENT_CHAPERONE_T_T1236967FA48384C188CF6E49C5A991AACC5DF59A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Chaperone_t
struct  VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A 
{
public:
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nPreviousUniverse
	uint64_t ___m_nPreviousUniverse_0;
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nCurrentUniverse
	uint64_t ___m_nCurrentUniverse_1;

public:
	inline static int32_t get_offset_of_m_nPreviousUniverse_0() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A, ___m_nPreviousUniverse_0)); }
	inline uint64_t get_m_nPreviousUniverse_0() const { return ___m_nPreviousUniverse_0; }
	inline uint64_t* get_address_of_m_nPreviousUniverse_0() { return &___m_nPreviousUniverse_0; }
	inline void set_m_nPreviousUniverse_0(uint64_t value)
	{
		___m_nPreviousUniverse_0 = value;
	}

	inline static int32_t get_offset_of_m_nCurrentUniverse_1() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A, ___m_nCurrentUniverse_1)); }
	inline uint64_t get_m_nCurrentUniverse_1() const { return ___m_nCurrentUniverse_1; }
	inline uint64_t* get_address_of_m_nCurrentUniverse_1() { return &___m_nCurrentUniverse_1; }
	inline void set_m_nCurrentUniverse_1(uint64_t value)
	{
		___m_nCurrentUniverse_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_CHAPERONE_T_T1236967FA48384C188CF6E49C5A991AACC5DF59A_H
#ifndef VREVENT_CONTROLLER_T_TB1FFD48DCBC52E589F9BD9987063A6228CDD21D8_H
#define VREVENT_CONTROLLER_T_TB1FFD48DCBC52E589F9BD9987063A6228CDD21D8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Controller_t
struct  VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8 
{
public:
	// System.UInt32 Valve.VR.VREvent_Controller_t::button
	uint32_t ___button_0;

public:
	inline static int32_t get_offset_of_button_0() { return static_cast<int32_t>(offsetof(VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8, ___button_0)); }
	inline uint32_t get_button_0() const { return ___button_0; }
	inline uint32_t* get_address_of_button_0() { return &___button_0; }
	inline void set_button_0(uint32_t value)
	{
		___button_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_CONTROLLER_T_TB1FFD48DCBC52E589F9BD9987063A6228CDD21D8_H
#ifndef VREVENT_EDITINGCAMERASURFACE_T_T017AA24A092F59E0A165CE5F1E76347CB00C2FD6_H
#define VREVENT_EDITINGCAMERASURFACE_T_T017AA24A092F59E0A165CE5F1E76347CB00C2FD6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_EditingCameraSurface_t
struct  VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6 
{
public:
	// System.UInt64 Valve.VR.VREvent_EditingCameraSurface_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt32 Valve.VR.VREvent_EditingCameraSurface_t::nVisualMode
	uint32_t ___nVisualMode_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_nVisualMode_1() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6, ___nVisualMode_1)); }
	inline uint32_t get_nVisualMode_1() const { return ___nVisualMode_1; }
	inline uint32_t* get_address_of_nVisualMode_1() { return &___nVisualMode_1; }
	inline void set_nVisualMode_1(uint32_t value)
	{
		___nVisualMode_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_EDITINGCAMERASURFACE_T_T017AA24A092F59E0A165CE5F1E76347CB00C2FD6_H
#ifndef VREVENT_HAPTICVIBRATION_T_T786CA5B3A8C34B778835ADDDEBB62831C2C141CF_H
#define VREVENT_HAPTICVIBRATION_T_T786CA5B3A8C34B778835ADDDEBB62831C2C141CF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_HapticVibration_t
struct  VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF 
{
public:
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::containerHandle
	uint64_t ___containerHandle_0;
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::componentHandle
	uint64_t ___componentHandle_1;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fDurationSeconds
	float ___fDurationSeconds_2;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fFrequency
	float ___fFrequency_3;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fAmplitude
	float ___fAmplitude_4;

public:
	inline static int32_t get_offset_of_containerHandle_0() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___containerHandle_0)); }
	inline uint64_t get_containerHandle_0() const { return ___containerHandle_0; }
	inline uint64_t* get_address_of_containerHandle_0() { return &___containerHandle_0; }
	inline void set_containerHandle_0(uint64_t value)
	{
		___containerHandle_0 = value;
	}

	inline static int32_t get_offset_of_componentHandle_1() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___componentHandle_1)); }
	inline uint64_t get_componentHandle_1() const { return ___componentHandle_1; }
	inline uint64_t* get_address_of_componentHandle_1() { return &___componentHandle_1; }
	inline void set_componentHandle_1(uint64_t value)
	{
		___componentHandle_1 = value;
	}

	inline static int32_t get_offset_of_fDurationSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___fDurationSeconds_2)); }
	inline float get_fDurationSeconds_2() const { return ___fDurationSeconds_2; }
	inline float* get_address_of_fDurationSeconds_2() { return &___fDurationSeconds_2; }
	inline void set_fDurationSeconds_2(float value)
	{
		___fDurationSeconds_2 = value;
	}

	inline static int32_t get_offset_of_fFrequency_3() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___fFrequency_3)); }
	inline float get_fFrequency_3() const { return ___fFrequency_3; }
	inline float* get_address_of_fFrequency_3() { return &___fFrequency_3; }
	inline void set_fFrequency_3(float value)
	{
		___fFrequency_3 = value;
	}

	inline static int32_t get_offset_of_fAmplitude_4() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___fAmplitude_4)); }
	inline float get_fAmplitude_4() const { return ___fAmplitude_4; }
	inline float* get_address_of_fAmplitude_4() { return &___fAmplitude_4; }
	inline void set_fAmplitude_4(float value)
	{
		___fAmplitude_4 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_HAPTICVIBRATION_T_T786CA5B3A8C34B778835ADDDEBB62831C2C141CF_H
#ifndef VREVENT_IPD_T_TAFFEBE073442A4A1326C4464CF1A92C030C22C22_H
#define VREVENT_IPD_T_TAFFEBE073442A4A1326C4464CF1A92C030C22C22_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Ipd_t
struct  VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22 
{
public:
	// System.Single Valve.VR.VREvent_Ipd_t::ipdMeters
	float ___ipdMeters_0;

public:
	inline static int32_t get_offset_of_ipdMeters_0() { return static_cast<int32_t>(offsetof(VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22, ___ipdMeters_0)); }
	inline float get_ipdMeters_0() const { return ___ipdMeters_0; }
	inline float* get_address_of_ipdMeters_0() { return &___ipdMeters_0; }
	inline void set_ipdMeters_0(float value)
	{
		___ipdMeters_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_IPD_T_TAFFEBE073442A4A1326C4464CF1A92C030C22C22_H
#ifndef VREVENT_KEYBOARD_T_T1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE_H
#define VREVENT_KEYBOARD_T_T1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Keyboard_t
struct  VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE 
{
public:
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput0
	uint8_t ___cNewInput0_0;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput1
	uint8_t ___cNewInput1_1;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput2
	uint8_t ___cNewInput2_2;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput3
	uint8_t ___cNewInput3_3;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput4
	uint8_t ___cNewInput4_4;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput5
	uint8_t ___cNewInput5_5;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput6
	uint8_t ___cNewInput6_6;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput7
	uint8_t ___cNewInput7_7;
	// System.UInt64 Valve.VR.VREvent_Keyboard_t::uUserValue
	uint64_t ___uUserValue_8;

public:
	inline static int32_t get_offset_of_cNewInput0_0() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput0_0)); }
	inline uint8_t get_cNewInput0_0() const { return ___cNewInput0_0; }
	inline uint8_t* get_address_of_cNewInput0_0() { return &___cNewInput0_0; }
	inline void set_cNewInput0_0(uint8_t value)
	{
		___cNewInput0_0 = value;
	}

	inline static int32_t get_offset_of_cNewInput1_1() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput1_1)); }
	inline uint8_t get_cNewInput1_1() const { return ___cNewInput1_1; }
	inline uint8_t* get_address_of_cNewInput1_1() { return &___cNewInput1_1; }
	inline void set_cNewInput1_1(uint8_t value)
	{
		___cNewInput1_1 = value;
	}

	inline static int32_t get_offset_of_cNewInput2_2() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput2_2)); }
	inline uint8_t get_cNewInput2_2() const { return ___cNewInput2_2; }
	inline uint8_t* get_address_of_cNewInput2_2() { return &___cNewInput2_2; }
	inline void set_cNewInput2_2(uint8_t value)
	{
		___cNewInput2_2 = value;
	}

	inline static int32_t get_offset_of_cNewInput3_3() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput3_3)); }
	inline uint8_t get_cNewInput3_3() const { return ___cNewInput3_3; }
	inline uint8_t* get_address_of_cNewInput3_3() { return &___cNewInput3_3; }
	inline void set_cNewInput3_3(uint8_t value)
	{
		___cNewInput3_3 = value;
	}

	inline static int32_t get_offset_of_cNewInput4_4() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput4_4)); }
	inline uint8_t get_cNewInput4_4() const { return ___cNewInput4_4; }
	inline uint8_t* get_address_of_cNewInput4_4() { return &___cNewInput4_4; }
	inline void set_cNewInput4_4(uint8_t value)
	{
		___cNewInput4_4 = value;
	}

	inline static int32_t get_offset_of_cNewInput5_5() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput5_5)); }
	inline uint8_t get_cNewInput5_5() const { return ___cNewInput5_5; }
	inline uint8_t* get_address_of_cNewInput5_5() { return &___cNewInput5_5; }
	inline void set_cNewInput5_5(uint8_t value)
	{
		___cNewInput5_5 = value;
	}

	inline static int32_t get_offset_of_cNewInput6_6() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput6_6)); }
	inline uint8_t get_cNewInput6_6() const { return ___cNewInput6_6; }
	inline uint8_t* get_address_of_cNewInput6_6() { return &___cNewInput6_6; }
	inline void set_cNewInput6_6(uint8_t value)
	{
		___cNewInput6_6 = value;
	}

	inline static int32_t get_offset_of_cNewInput7_7() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput7_7)); }
	inline uint8_t get_cNewInput7_7() const { return ___cNewInput7_7; }
	inline uint8_t* get_address_of_cNewInput7_7() { return &___cNewInput7_7; }
	inline void set_cNewInput7_7(uint8_t value)
	{
		___cNewInput7_7 = value;
	}

	inline static int32_t get_offset_of_uUserValue_8() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___uUserValue_8)); }
	inline uint64_t get_uUserValue_8() const { return ___uUserValue_8; }
	inline uint64_t* get_address_of_uUserValue_8() { return &___uUserValue_8; }
	inline void set_uUserValue_8(uint64_t value)
	{
		___uUserValue_8 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_KEYBOARD_T_T1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE_H
#ifndef VREVENT_MESSAGEOVERLAY_T_TD7AE309A410FAFD42C1683CE33E0885E92E296BF_H
#define VREVENT_MESSAGEOVERLAY_T_TD7AE309A410FAFD42C1683CE33E0885E92E296BF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_MessageOverlay_t
struct  VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF 
{
public:
	// System.UInt32 Valve.VR.VREvent_MessageOverlay_t::unVRMessageOverlayResponse
	uint32_t ___unVRMessageOverlayResponse_0;

public:
	inline static int32_t get_offset_of_unVRMessageOverlayResponse_0() { return static_cast<int32_t>(offsetof(VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF, ___unVRMessageOverlayResponse_0)); }
	inline uint32_t get_unVRMessageOverlayResponse_0() const { return ___unVRMessageOverlayResponse_0; }
	inline uint32_t* get_address_of_unVRMessageOverlayResponse_0() { return &___unVRMessageOverlayResponse_0; }
	inline void set_unVRMessageOverlayResponse_0(uint32_t value)
	{
		___unVRMessageOverlayResponse_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_MESSAGEOVERLAY_T_TD7AE309A410FAFD42C1683CE33E0885E92E296BF_H
#ifndef VREVENT_MOUSE_T_TE88D68F4C4CB957B62099C82C7AED290AA0FF267_H
#define VREVENT_MOUSE_T_TE88D68F4C4CB957B62099C82C7AED290AA0FF267_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Mouse_t
struct  VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267 
{
public:
	// System.Single Valve.VR.VREvent_Mouse_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_Mouse_t::y
	float ___y_1;
	// System.UInt32 Valve.VR.VREvent_Mouse_t::button
	uint32_t ___button_2;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_button_2() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267, ___button_2)); }
	inline uint32_t get_button_2() const { return ___button_2; }
	inline uint32_t* get_address_of_button_2() { return &___button_2; }
	inline void set_button_2(uint32_t value)
	{
		___button_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_MOUSE_T_TE88D68F4C4CB957B62099C82C7AED290AA0FF267_H
#ifndef VREVENT_NOTIFICATION_T_TDBB23936BEDFBB6ED34830252A310DB5B2FE23A9_H
#define VREVENT_NOTIFICATION_T_TDBB23936BEDFBB6ED34830252A310DB5B2FE23A9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Notification_t
struct  VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9 
{
public:
	// System.UInt64 Valve.VR.VREvent_Notification_t::ulUserValue
	uint64_t ___ulUserValue_0;
	// System.UInt32 Valve.VR.VREvent_Notification_t::notificationId
	uint32_t ___notificationId_1;

public:
	inline static int32_t get_offset_of_ulUserValue_0() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9, ___ulUserValue_0)); }
	inline uint64_t get_ulUserValue_0() const { return ___ulUserValue_0; }
	inline uint64_t* get_address_of_ulUserValue_0() { return &___ulUserValue_0; }
	inline void set_ulUserValue_0(uint64_t value)
	{
		___ulUserValue_0 = value;
	}

	inline static int32_t get_offset_of_notificationId_1() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9, ___notificationId_1)); }
	inline uint32_t get_notificationId_1() const { return ___notificationId_1; }
	inline uint32_t* get_address_of_notificationId_1() { return &___notificationId_1; }
	inline void set_notificationId_1(uint32_t value)
	{
		___notificationId_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_NOTIFICATION_T_TDBB23936BEDFBB6ED34830252A310DB5B2FE23A9_H
#ifndef VREVENT_OVERLAY_T_T909148C3CA59C47163B718FFE65700E4F9680900_H
#define VREVENT_OVERLAY_T_T909148C3CA59C47163B718FFE65700E4F9680900_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Overlay_t
struct  VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900 
{
public:
	// System.UInt64 Valve.VR.VREvent_Overlay_t::overlayHandle
	uint64_t ___overlayHandle_0;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_OVERLAY_T_T909148C3CA59C47163B718FFE65700E4F9680900_H
#ifndef VREVENT_PERFORMANCETEST_T_T1E9209C87C10EB6362D3123FF0182CFE4939AD9F_H
#define VREVENT_PERFORMANCETEST_T_T1E9209C87C10EB6362D3123FF0182CFE4939AD9F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_PerformanceTest_t
struct  VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F 
{
public:
	// System.UInt32 Valve.VR.VREvent_PerformanceTest_t::m_nFidelityLevel
	uint32_t ___m_nFidelityLevel_0;

public:
	inline static int32_t get_offset_of_m_nFidelityLevel_0() { return static_cast<int32_t>(offsetof(VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F, ___m_nFidelityLevel_0)); }
	inline uint32_t get_m_nFidelityLevel_0() const { return ___m_nFidelityLevel_0; }
	inline uint32_t* get_address_of_m_nFidelityLevel_0() { return &___m_nFidelityLevel_0; }
	inline void set_m_nFidelityLevel_0(uint32_t value)
	{
		___m_nFidelityLevel_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_PERFORMANCETEST_T_T1E9209C87C10EB6362D3123FF0182CFE4939AD9F_H
#ifndef VREVENT_PROCESS_T_T3D2B492B7F7042AEB6072913B305BE5597343E10_H
#define VREVENT_PROCESS_T_T3D2B492B7F7042AEB6072913B305BE5597343E10_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Process_t
struct  VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10 
{
public:
	// System.UInt32 Valve.VR.VREvent_Process_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_Process_t::oldPid
	uint32_t ___oldPid_1;
	// System.Boolean Valve.VR.VREvent_Process_t::bForced
	bool ___bForced_2;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_oldPid_1() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10, ___oldPid_1)); }
	inline uint32_t get_oldPid_1() const { return ___oldPid_1; }
	inline uint32_t* get_address_of_oldPid_1() { return &___oldPid_1; }
	inline void set_oldPid_1(uint32_t value)
	{
		___oldPid_1 = value;
	}

	inline static int32_t get_offset_of_bForced_2() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10, ___bForced_2)); }
	inline bool get_bForced_2() const { return ___bForced_2; }
	inline bool* get_address_of_bForced_2() { return &___bForced_2; }
	inline void set_bForced_2(bool value)
	{
		___bForced_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_PROCESS_T_T3D2B492B7F7042AEB6072913B305BE5597343E10_H
#ifndef VREVENT_RESERVED_T_T42EADCBC910F8ECC29C85F4E2376E34677EDC23F_H
#define VREVENT_RESERVED_T_T42EADCBC910F8ECC29C85F4E2376E34677EDC23F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Reserved_t
struct  VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F 
{
public:
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved0
	uint64_t ___reserved0_0;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved1
	uint64_t ___reserved1_1;

public:
	inline static int32_t get_offset_of_reserved0_0() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F, ___reserved0_0)); }
	inline uint64_t get_reserved0_0() const { return ___reserved0_0; }
	inline uint64_t* get_address_of_reserved0_0() { return &___reserved0_0; }
	inline void set_reserved0_0(uint64_t value)
	{
		___reserved0_0 = value;
	}

	inline static int32_t get_offset_of_reserved1_1() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F, ___reserved1_1)); }
	inline uint64_t get_reserved1_1() const { return ___reserved1_1; }
	inline uint64_t* get_address_of_reserved1_1() { return &___reserved1_1; }
	inline void set_reserved1_1(uint64_t value)
	{
		___reserved1_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_RESERVED_T_T42EADCBC910F8ECC29C85F4E2376E34677EDC23F_H
#ifndef VREVENT_SCREENSHOTPROGRESS_T_T72E093E61A1D8FE405A54C66387501EE3506601D_H
#define VREVENT_SCREENSHOTPROGRESS_T_T72E093E61A1D8FE405A54C66387501EE3506601D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_ScreenshotProgress_t
struct  VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D 
{
public:
	// System.Single Valve.VR.VREvent_ScreenshotProgress_t::progress
	float ___progress_0;

public:
	inline static int32_t get_offset_of_progress_0() { return static_cast<int32_t>(offsetof(VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D, ___progress_0)); }
	inline float get_progress_0() const { return ___progress_0; }
	inline float* get_address_of_progress_0() { return &___progress_0; }
	inline void set_progress_0(float value)
	{
		___progress_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_SCREENSHOTPROGRESS_T_T72E093E61A1D8FE405A54C66387501EE3506601D_H
#ifndef VREVENT_SCREENSHOT_T_TBC0F7EE971E9E1DEDD665F664010039718459B11_H
#define VREVENT_SCREENSHOT_T_TBC0F7EE971E9E1DEDD665F664010039718459B11_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Screenshot_t
struct  VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11 
{
public:
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::handle
	uint32_t ___handle_0;
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::type
	uint32_t ___type_1;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11, ___handle_0)); }
	inline uint32_t get_handle_0() const { return ___handle_0; }
	inline uint32_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(uint32_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11, ___type_1)); }
	inline uint32_t get_type_1() const { return ___type_1; }
	inline uint32_t* get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(uint32_t value)
	{
		___type_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_SCREENSHOT_T_TBC0F7EE971E9E1DEDD665F664010039718459B11_H
#ifndef VREVENT_SCROLL_T_T491F52F7AFAAE972F9F49DAABDB2233A48E33CA5_H
#define VREVENT_SCROLL_T_T491F52F7AFAAE972F9F49DAABDB2233A48E33CA5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Scroll_t
struct  VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5 
{
public:
	// System.Single Valve.VR.VREvent_Scroll_t::xdelta
	float ___xdelta_0;
	// System.Single Valve.VR.VREvent_Scroll_t::ydelta
	float ___ydelta_1;
	// System.UInt32 Valve.VR.VREvent_Scroll_t::repeatCount
	uint32_t ___repeatCount_2;

public:
	inline static int32_t get_offset_of_xdelta_0() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5, ___xdelta_0)); }
	inline float get_xdelta_0() const { return ___xdelta_0; }
	inline float* get_address_of_xdelta_0() { return &___xdelta_0; }
	inline void set_xdelta_0(float value)
	{
		___xdelta_0 = value;
	}

	inline static int32_t get_offset_of_ydelta_1() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5, ___ydelta_1)); }
	inline float get_ydelta_1() const { return ___ydelta_1; }
	inline float* get_address_of_ydelta_1() { return &___ydelta_1; }
	inline void set_ydelta_1(float value)
	{
		___ydelta_1 = value;
	}

	inline static int32_t get_offset_of_repeatCount_2() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5, ___repeatCount_2)); }
	inline uint32_t get_repeatCount_2() const { return ___repeatCount_2; }
	inline uint32_t* get_address_of_repeatCount_2() { return &___repeatCount_2; }
	inline void set_repeatCount_2(uint32_t value)
	{
		___repeatCount_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_SCROLL_T_T491F52F7AFAAE972F9F49DAABDB2233A48E33CA5_H
#ifndef VREVENT_SEATEDZEROPOSERESET_T_T2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4_H
#define VREVENT_SEATEDZEROPOSERESET_T_T2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_SeatedZeroPoseReset_t
struct  VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4 
{
public:
	// System.Boolean Valve.VR.VREvent_SeatedZeroPoseReset_t::bResetBySystemMenu
	bool ___bResetBySystemMenu_0;

public:
	inline static int32_t get_offset_of_bResetBySystemMenu_0() { return static_cast<int32_t>(offsetof(VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4, ___bResetBySystemMenu_0)); }
	inline bool get_bResetBySystemMenu_0() const { return ___bResetBySystemMenu_0; }
	inline bool* get_address_of_bResetBySystemMenu_0() { return &___bResetBySystemMenu_0; }
	inline void set_bResetBySystemMenu_0(bool value)
	{
		___bResetBySystemMenu_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_SEATEDZEROPOSERESET_T_T2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4_H
#ifndef VREVENT_STATUS_T_T415E997F9090A3C09A62FBF77303E4012CC8D392_H
#define VREVENT_STATUS_T_T415E997F9090A3C09A62FBF77303E4012CC8D392_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Status_t
struct  VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392 
{
public:
	// System.UInt32 Valve.VR.VREvent_Status_t::statusState
	uint32_t ___statusState_0;

public:
	inline static int32_t get_offset_of_statusState_0() { return static_cast<int32_t>(offsetof(VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392, ___statusState_0)); }
	inline uint32_t get_statusState_0() const { return ___statusState_0; }
	inline uint32_t* get_address_of_statusState_0() { return &___statusState_0; }
	inline void set_statusState_0(uint32_t value)
	{
		___statusState_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_STATUS_T_T415E997F9090A3C09A62FBF77303E4012CC8D392_H
#ifndef VREVENT_TOUCHPADMOVE_T_T66AC6500BD6C5B370506ED04AADE1C1C5EF98B18_H
#define VREVENT_TOUCHPADMOVE_T_T66AC6500BD6C5B370506ED04AADE1C1C5EF98B18_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_TouchPadMove_t
struct  VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18 
{
public:
	// System.Boolean Valve.VR.VREvent_TouchPadMove_t::bFingerDown
	bool ___bFingerDown_0;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::flSecondsFingerDown
	float ___flSecondsFingerDown_1;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXFirst
	float ___fValueXFirst_2;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYFirst
	float ___fValueYFirst_3;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXRaw
	float ___fValueXRaw_4;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYRaw
	float ___fValueYRaw_5;

public:
	inline static int32_t get_offset_of_bFingerDown_0() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___bFingerDown_0)); }
	inline bool get_bFingerDown_0() const { return ___bFingerDown_0; }
	inline bool* get_address_of_bFingerDown_0() { return &___bFingerDown_0; }
	inline void set_bFingerDown_0(bool value)
	{
		___bFingerDown_0 = value;
	}

	inline static int32_t get_offset_of_flSecondsFingerDown_1() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___flSecondsFingerDown_1)); }
	inline float get_flSecondsFingerDown_1() const { return ___flSecondsFingerDown_1; }
	inline float* get_address_of_flSecondsFingerDown_1() { return &___flSecondsFingerDown_1; }
	inline void set_flSecondsFingerDown_1(float value)
	{
		___flSecondsFingerDown_1 = value;
	}

	inline static int32_t get_offset_of_fValueXFirst_2() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___fValueXFirst_2)); }
	inline float get_fValueXFirst_2() const { return ___fValueXFirst_2; }
	inline float* get_address_of_fValueXFirst_2() { return &___fValueXFirst_2; }
	inline void set_fValueXFirst_2(float value)
	{
		___fValueXFirst_2 = value;
	}

	inline static int32_t get_offset_of_fValueYFirst_3() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___fValueYFirst_3)); }
	inline float get_fValueYFirst_3() const { return ___fValueYFirst_3; }
	inline float* get_address_of_fValueYFirst_3() { return &___fValueYFirst_3; }
	inline void set_fValueYFirst_3(float value)
	{
		___fValueYFirst_3 = value;
	}

	inline static int32_t get_offset_of_fValueXRaw_4() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___fValueXRaw_4)); }
	inline float get_fValueXRaw_4() const { return ___fValueXRaw_4; }
	inline float* get_address_of_fValueXRaw_4() { return &___fValueXRaw_4; }
	inline void set_fValueXRaw_4(float value)
	{
		___fValueXRaw_4 = value;
	}

	inline static int32_t get_offset_of_fValueYRaw_5() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___fValueYRaw_5)); }
	inline float get_fValueYRaw_5() const { return ___fValueYRaw_5; }
	inline float* get_address_of_fValueYRaw_5() { return &___fValueYRaw_5; }
	inline void set_fValueYRaw_5(float value)
	{
		___fValueYRaw_5 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_TOUCHPADMOVE_T_T66AC6500BD6C5B370506ED04AADE1C1C5EF98B18_H
#ifndef VRTEXTUREBOUNDS_T_TA84A0B9DA2ED7706E784D3205C9D029C64EB2813_H
#define VRTEXTUREBOUNDS_T_TA84A0B9DA2ED7706E784D3205C9D029C64EB2813_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VRTextureBounds_t
struct  VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 
{
public:
	// System.Single Valve.VR.VRTextureBounds_t::uMin
	float ___uMin_0;
	// System.Single Valve.VR.VRTextureBounds_t::vMin
	float ___vMin_1;
	// System.Single Valve.VR.VRTextureBounds_t::uMax
	float ___uMax_2;
	// System.Single Valve.VR.VRTextureBounds_t::vMax
	float ___vMax_3;

public:
	inline static int32_t get_offset_of_uMin_0() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813, ___uMin_0)); }
	inline float get_uMin_0() const { return ___uMin_0; }
	inline float* get_address_of_uMin_0() { return &___uMin_0; }
	inline void set_uMin_0(float value)
	{
		___uMin_0 = value;
	}

	inline static int32_t get_offset_of_vMin_1() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813, ___vMin_1)); }
	inline float get_vMin_1() const { return ___vMin_1; }
	inline float* get_address_of_vMin_1() { return &___vMin_1; }
	inline void set_vMin_1(float value)
	{
		___vMin_1 = value;
	}

	inline static int32_t get_offset_of_uMax_2() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813, ___uMax_2)); }
	inline float get_uMax_2() const { return ___uMax_2; }
	inline float* get_address_of_uMax_2() { return &___uMax_2; }
	inline void set_uMax_2(float value)
	{
		___uMax_2 = value;
	}

	inline static int32_t get_offset_of_vMax_3() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813, ___vMax_3)); }
	inline float get_vMax_3() const { return ___vMax_3; }
	inline float* get_address_of_vMax_3() { return &___vMax_3; }
	inline void set_vMax_3(float value)
	{
		___vMax_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VRTEXTUREBOUNDS_T_TA84A0B9DA2ED7706E784D3205C9D029C64EB2813_H
#ifndef DELEGATE_T_H
#define DELEGATE_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Delegate
struct  Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((&___m_target_2), value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((&___method_info_7), value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((&___original_method_info_8), value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((&___data_9), value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
#endif // DELEGATE_T_H
#ifndef ECOLORSPACE_T4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_H
#define ECOLORSPACE_T4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EColorSpace
struct  EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04 
{
public:
	// System.Int32 Valve.VR.EColorSpace::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ECOLORSPACE_T4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_H
#ifndef EDUALANALOGWHICH_T26DB6059FD57DBF15F7F416304BF27A036E14F4C_H
#define EDUALANALOGWHICH_T26DB6059FD57DBF15F7F416304BF27A036E14F4C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EDualAnalogWhich
struct  EDualAnalogWhich_t26DB6059FD57DBF15F7F416304BF27A036E14F4C 
{
public:
	// System.Int32 Valve.VR.EDualAnalogWhich::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EDualAnalogWhich_t26DB6059FD57DBF15F7F416304BF27A036E14F4C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EDUALANALOGWHICH_T26DB6059FD57DBF15F7F416304BF27A036E14F4C_H
#ifndef EOVERLAYDIRECTION_T0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_H
#define EOVERLAYDIRECTION_T0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EOverlayDirection
struct  EOverlayDirection_t0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B 
{
public:
	// System.Int32 Valve.VR.EOverlayDirection::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EOverlayDirection_t0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EOVERLAYDIRECTION_T0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_H
#ifndef ETEXTURETYPE_T47A335610F8DC272C02D381BCEEE184C17B0BD17_H
#define ETEXTURETYPE_T47A335610F8DC272C02D381BCEEE184C17B0BD17_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETextureType
struct  ETextureType_t47A335610F8DC272C02D381BCEEE184C17B0BD17 
{
public:
	// System.Int32 Valve.VR.ETextureType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETextureType_t47A335610F8DC272C02D381BCEEE184C17B0BD17, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETEXTURETYPE_T47A335610F8DC272C02D381BCEEE184C17B0BD17_H
#ifndef ETRACKEDDEVICEPROPERTY_T340DF2977F9C0002F9BE6B240D99C3AA55CD2239_H
#define ETRACKEDDEVICEPROPERTY_T340DF2977F9C0002F9BE6B240D99C3AA55CD2239_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackedDeviceProperty
struct  ETrackedDeviceProperty_t340DF2977F9C0002F9BE6B240D99C3AA55CD2239 
{
public:
	// System.Int32 Valve.VR.ETrackedDeviceProperty::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedDeviceProperty_t340DF2977F9C0002F9BE6B240D99C3AA55CD2239, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKEDDEVICEPROPERTY_T340DF2977F9C0002F9BE6B240D99C3AA55CD2239_H
#ifndef ETRACKINGRESULT_TD4ECC9648BB93C106B2DD11743A874DA81612F60_H
#define ETRACKINGRESULT_TD4ECC9648BB93C106B2DD11743A874DA81612F60_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackingResult
struct  ETrackingResult_tD4ECC9648BB93C106B2DD11743A874DA81612F60 
{
public:
	// System.Int32 Valve.VR.ETrackingResult::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingResult_tD4ECC9648BB93C106B2DD11743A874DA81612F60, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKINGRESULT_TD4ECC9648BB93C106B2DD11743A874DA81612F60_H
#ifndef ETRACKINGUNIVERSEORIGIN_T56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_H
#define ETRACKINGUNIVERSEORIGIN_T56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackingUniverseOrigin
struct  ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6 
{
public:
	// System.Int32 Valve.VR.ETrackingUniverseOrigin::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKINGUNIVERSEORIGIN_T56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_H
#ifndef EVRCOMPOSITORERROR_TAE13993963386AA482C33A97A26E2FAC09847555_H
#define EVRCOMPOSITORERROR_TAE13993963386AA482C33A97A26E2FAC09847555_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRCompositorError
struct  EVRCompositorError_tAE13993963386AA482C33A97A26E2FAC09847555 
{
public:
	// System.Int32 Valve.VR.EVRCompositorError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRCompositorError_tAE13993963386AA482C33A97A26E2FAC09847555, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRCOMPOSITORERROR_TAE13993963386AA482C33A97A26E2FAC09847555_H
#ifndef EVRCOMPOSITORTIMINGMODE_T62616F6C9A8D91140EF20E4E8A36122EA8CD3695_H
#define EVRCOMPOSITORTIMINGMODE_T62616F6C9A8D91140EF20E4E8A36122EA8CD3695_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRCompositorTimingMode
struct  EVRCompositorTimingMode_t62616F6C9A8D91140EF20E4E8A36122EA8CD3695 
{
public:
	// System.Int32 Valve.VR.EVRCompositorTimingMode::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRCompositorTimingMode_t62616F6C9A8D91140EF20E4E8A36122EA8CD3695, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRCOMPOSITORTIMINGMODE_T62616F6C9A8D91140EF20E4E8A36122EA8CD3695_H
#ifndef EVREYE_T4097B73599986F5B774296C51091EF53A629C2FD_H
#define EVREYE_T4097B73599986F5B774296C51091EF53A629C2FD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVREye
struct  EVREye_t4097B73599986F5B774296C51091EF53A629C2FD 
{
public:
	// System.Int32 Valve.VR.EVREye::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREye_t4097B73599986F5B774296C51091EF53A629C2FD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVREYE_T4097B73599986F5B774296C51091EF53A629C2FD_H
#ifndef EVRNOTIFICATIONERROR_T4258095337C6B6078DAEF117B67A5163EEACB1E1_H
#define EVRNOTIFICATIONERROR_T4258095337C6B6078DAEF117B67A5163EEACB1E1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRNotificationError
struct  EVRNotificationError_t4258095337C6B6078DAEF117B67A5163EEACB1E1 
{
public:
	// System.Int32 Valve.VR.EVRNotificationError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRNotificationError_t4258095337C6B6078DAEF117B67A5163EEACB1E1, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRNOTIFICATIONERROR_T4258095337C6B6078DAEF117B67A5163EEACB1E1_H
#ifndef EVRNOTIFICATIONSTYLE_T34E78DE1E5386975ACBBCB0BD8731BD413AC951A_H
#define EVRNOTIFICATIONSTYLE_T34E78DE1E5386975ACBBCB0BD8731BD413AC951A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRNotificationStyle
struct  EVRNotificationStyle_t34E78DE1E5386975ACBBCB0BD8731BD413AC951A 
{
public:
	// System.Int32 Valve.VR.EVRNotificationStyle::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRNotificationStyle_t34E78DE1E5386975ACBBCB0BD8731BD413AC951A, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRNOTIFICATIONSTYLE_T34E78DE1E5386975ACBBCB0BD8731BD413AC951A_H
#ifndef EVRNOTIFICATIONTYPE_T9D531A4C057BF14A85B73F26046221CCAB26D2D9_H
#define EVRNOTIFICATIONTYPE_T9D531A4C057BF14A85B73F26046221CCAB26D2D9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRNotificationType
struct  EVRNotificationType_t9D531A4C057BF14A85B73F26046221CCAB26D2D9 
{
public:
	// System.Int32 Valve.VR.EVRNotificationType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRNotificationType_t9D531A4C057BF14A85B73F26046221CCAB26D2D9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRNOTIFICATIONTYPE_T9D531A4C057BF14A85B73F26046221CCAB26D2D9_H
#ifndef EVROVERLAYERROR_TE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_H
#define EVROVERLAYERROR_TE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVROverlayError
struct  EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B 
{
public:
	// System.Int32 Valve.VR.EVROverlayError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVROVERLAYERROR_TE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_H
#ifndef EVROVERLAYINTERSECTIONMASKPRIMITIVETYPE_TC5E427CA3995B08A80950275C761E59F38D39BFB_H
#define EVROVERLAYINTERSECTIONMASKPRIMITIVETYPE_TC5E427CA3995B08A80950275C761E59F38D39BFB_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVROverlayIntersectionMaskPrimitiveType
struct  EVROverlayIntersectionMaskPrimitiveType_tC5E427CA3995B08A80950275C761E59F38D39BFB 
{
public:
	// System.Int32 Valve.VR.EVROverlayIntersectionMaskPrimitiveType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVROverlayIntersectionMaskPrimitiveType_tC5E427CA3995B08A80950275C761E59F38D39BFB, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVROVERLAYINTERSECTIONMASKPRIMITIVETYPE_TC5E427CA3995B08A80950275C761E59F38D39BFB_H
#ifndef EVRSUBMITFLAGS_T9629FE63CBD4B11E035117494981D038C16B301B_H
#define EVRSUBMITFLAGS_T9629FE63CBD4B11E035117494981D038C16B301B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRSubmitFlags
struct  EVRSubmitFlags_t9629FE63CBD4B11E035117494981D038C16B301B 
{
public:
	// System.Int32 Valve.VR.EVRSubmitFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSubmitFlags_t9629FE63CBD4B11E035117494981D038C16B301B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRSUBMITFLAGS_T9629FE63CBD4B11E035117494981D038C16B301B_H
#ifndef HMDQUAD_T_TC99408E542DBDB164A98BB7130748461C03869CE_H
#define HMDQUAD_T_TC99408E542DBDB164A98BB7130748461C03869CE_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdQuad_t
struct  HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE 
{
public:
	// Valve.VR.HmdVector3_t Valve.VR.HmdQuad_t::vCorners0
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vCorners0_0;
	// Valve.VR.HmdVector3_t Valve.VR.HmdQuad_t::vCorners1
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vCorners1_1;
	// Valve.VR.HmdVector3_t Valve.VR.HmdQuad_t::vCorners2
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vCorners2_2;
	// Valve.VR.HmdVector3_t Valve.VR.HmdQuad_t::vCorners3
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vCorners3_3;

public:
	inline static int32_t get_offset_of_vCorners0_0() { return static_cast<int32_t>(offsetof(HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE, ___vCorners0_0)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vCorners0_0() const { return ___vCorners0_0; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vCorners0_0() { return &___vCorners0_0; }
	inline void set_vCorners0_0(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vCorners0_0 = value;
	}

	inline static int32_t get_offset_of_vCorners1_1() { return static_cast<int32_t>(offsetof(HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE, ___vCorners1_1)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vCorners1_1() const { return ___vCorners1_1; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vCorners1_1() { return &___vCorners1_1; }
	inline void set_vCorners1_1(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vCorners1_1 = value;
	}

	inline static int32_t get_offset_of_vCorners2_2() { return static_cast<int32_t>(offsetof(HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE, ___vCorners2_2)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vCorners2_2() const { return ___vCorners2_2; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vCorners2_2() { return &___vCorners2_2; }
	inline void set_vCorners2_2(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vCorners2_2 = value;
	}

	inline static int32_t get_offset_of_vCorners3_3() { return static_cast<int32_t>(offsetof(HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE, ___vCorners3_3)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vCorners3_3() const { return ___vCorners3_3; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vCorners3_3() { return &___vCorners3_3; }
	inline void set_vCorners3_3(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vCorners3_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDQUAD_T_TC99408E542DBDB164A98BB7130748461C03869CE_H
#ifndef HMDRECT2_T_T26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7_H
#define HMDRECT2_T_T26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdRect2_t
struct  HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 
{
public:
	// Valve.VR.HmdVector2_t Valve.VR.HmdRect2_t::vTopLeft
	HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  ___vTopLeft_0;
	// Valve.VR.HmdVector2_t Valve.VR.HmdRect2_t::vBottomRight
	HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  ___vBottomRight_1;

public:
	inline static int32_t get_offset_of_vTopLeft_0() { return static_cast<int32_t>(offsetof(HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7, ___vTopLeft_0)); }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  get_vTopLeft_0() const { return ___vTopLeft_0; }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * get_address_of_vTopLeft_0() { return &___vTopLeft_0; }
	inline void set_vTopLeft_0(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  value)
	{
		___vTopLeft_0 = value;
	}

	inline static int32_t get_offset_of_vBottomRight_1() { return static_cast<int32_t>(offsetof(HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7, ___vBottomRight_1)); }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  get_vBottomRight_1() const { return ___vBottomRight_1; }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * get_address_of_vBottomRight_1() { return &___vBottomRight_1; }
	inline void set_vBottomRight_1(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  value)
	{
		___vBottomRight_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDRECT2_T_T26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7_H
#ifndef NOTIFICATIONBITMAP_T_TAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609_H
#define NOTIFICATIONBITMAP_T_TAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.NotificationBitmap_t
struct  NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 
{
public:
	// System.IntPtr Valve.VR.NotificationBitmap_t::m_pImageData
	intptr_t ___m_pImageData_0;
	// System.Int32 Valve.VR.NotificationBitmap_t::m_nWidth
	int32_t ___m_nWidth_1;
	// System.Int32 Valve.VR.NotificationBitmap_t::m_nHeight
	int32_t ___m_nHeight_2;
	// System.Int32 Valve.VR.NotificationBitmap_t::m_nBytesPerPixel
	int32_t ___m_nBytesPerPixel_3;

public:
	inline static int32_t get_offset_of_m_pImageData_0() { return static_cast<int32_t>(offsetof(NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609, ___m_pImageData_0)); }
	inline intptr_t get_m_pImageData_0() const { return ___m_pImageData_0; }
	inline intptr_t* get_address_of_m_pImageData_0() { return &___m_pImageData_0; }
	inline void set_m_pImageData_0(intptr_t value)
	{
		___m_pImageData_0 = value;
	}

	inline static int32_t get_offset_of_m_nWidth_1() { return static_cast<int32_t>(offsetof(NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609, ___m_nWidth_1)); }
	inline int32_t get_m_nWidth_1() const { return ___m_nWidth_1; }
	inline int32_t* get_address_of_m_nWidth_1() { return &___m_nWidth_1; }
	inline void set_m_nWidth_1(int32_t value)
	{
		___m_nWidth_1 = value;
	}

	inline static int32_t get_offset_of_m_nHeight_2() { return static_cast<int32_t>(offsetof(NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609, ___m_nHeight_2)); }
	inline int32_t get_m_nHeight_2() const { return ___m_nHeight_2; }
	inline int32_t* get_address_of_m_nHeight_2() { return &___m_nHeight_2; }
	inline void set_m_nHeight_2(int32_t value)
	{
		___m_nHeight_2 = value;
	}

	inline static int32_t get_offset_of_m_nBytesPerPixel_3() { return static_cast<int32_t>(offsetof(NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609, ___m_nBytesPerPixel_3)); }
	inline int32_t get_m_nBytesPerPixel_3() const { return ___m_nBytesPerPixel_3; }
	inline int32_t* get_address_of_m_nBytesPerPixel_3() { return &___m_nBytesPerPixel_3; }
	inline void set_m_nBytesPerPixel_3(int32_t value)
	{
		___m_nBytesPerPixel_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // NOTIFICATIONBITMAP_T_TAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609_H
#ifndef VRMESSAGEOVERLAYRESPONSE_T6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9_H
#define VRMESSAGEOVERLAYRESPONSE_T6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VRMessageOverlayResponse
struct  VRMessageOverlayResponse_t6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9 
{
public:
	// System.Int32 Valve.VR.VRMessageOverlayResponse::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VRMessageOverlayResponse_t6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VRMESSAGEOVERLAYRESPONSE_T6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9_H
#ifndef VROVERLAYFLAGS_T00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_H
#define VROVERLAYFLAGS_T00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayFlags
struct  VROverlayFlags_t00FDF5B61DD41CC0BFB93B882D56F55412FC3A08 
{
public:
	// System.Int32 Valve.VR.VROverlayFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VROverlayFlags_t00FDF5B61DD41CC0BFB93B882D56F55412FC3A08, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYFLAGS_T00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_H
#ifndef VROVERLAYINPUTMETHOD_T92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_H
#define VROVERLAYINPUTMETHOD_T92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayInputMethod
struct  VROverlayInputMethod_t92DF5A3C8C399B2C7BCFA8CFABBC882C20265407 
{
public:
	// System.Int32 Valve.VR.VROverlayInputMethod::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VROverlayInputMethod_t92DF5A3C8C399B2C7BCFA8CFABBC882C20265407, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYINPUTMETHOD_T92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_H
#ifndef VROVERLAYINTERSECTIONMASKPRIMITIVE_DATA_T_TB7E1117C9C23976D0E6300DF16C455F46720EEE2_H
#define VROVERLAYINTERSECTIONMASKPRIMITIVE_DATA_T_TB7E1117C9C23976D0E6300DF16C455F46720EEE2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t
struct  VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.IntersectionMaskRectangle_t Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t::m_Rectangle
			IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8  ___m_Rectangle_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8  ___m_Rectangle_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.IntersectionMaskCircle_t Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t::m_Circle
			IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725  ___m_Circle_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725  ___m_Circle_1_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_m_Rectangle_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2, ___m_Rectangle_0)); }
	inline IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8  get_m_Rectangle_0() const { return ___m_Rectangle_0; }
	inline IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8 * get_address_of_m_Rectangle_0() { return &___m_Rectangle_0; }
	inline void set_m_Rectangle_0(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8  value)
	{
		___m_Rectangle_0 = value;
	}

	inline static int32_t get_offset_of_m_Circle_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2, ___m_Circle_1)); }
	inline IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725  get_m_Circle_1() const { return ___m_Circle_1; }
	inline IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725 * get_address_of_m_Circle_1() { return &___m_Circle_1; }
	inline void set_m_Circle_1(IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725  value)
	{
		___m_Circle_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYINTERSECTIONMASKPRIMITIVE_DATA_T_TB7E1117C9C23976D0E6300DF16C455F46720EEE2_H
#ifndef VROVERLAYINTERSECTIONRESULTS_T_TCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354_H
#define VROVERLAYINTERSECTIONRESULTS_T_TCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayIntersectionResults_t
struct  VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 
{
public:
	// Valve.VR.HmdVector3_t Valve.VR.VROverlayIntersectionResults_t::vPoint
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vPoint_0;
	// Valve.VR.HmdVector3_t Valve.VR.VROverlayIntersectionResults_t::vNormal
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vNormal_1;
	// Valve.VR.HmdVector2_t Valve.VR.VROverlayIntersectionResults_t::vUVs
	HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  ___vUVs_2;
	// System.Single Valve.VR.VROverlayIntersectionResults_t::fDistance
	float ___fDistance_3;

public:
	inline static int32_t get_offset_of_vPoint_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354, ___vPoint_0)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vPoint_0() const { return ___vPoint_0; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vPoint_0() { return &___vPoint_0; }
	inline void set_vPoint_0(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vPoint_0 = value;
	}

	inline static int32_t get_offset_of_vNormal_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354, ___vNormal_1)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vNormal_1() const { return ___vNormal_1; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vNormal_1() { return &___vNormal_1; }
	inline void set_vNormal_1(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vNormal_1 = value;
	}

	inline static int32_t get_offset_of_vUVs_2() { return static_cast<int32_t>(offsetof(VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354, ___vUVs_2)); }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  get_vUVs_2() const { return ___vUVs_2; }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * get_address_of_vUVs_2() { return &___vUVs_2; }
	inline void set_vUVs_2(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  value)
	{
		___vUVs_2 = value;
	}

	inline static int32_t get_offset_of_fDistance_3() { return static_cast<int32_t>(offsetof(VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354, ___fDistance_3)); }
	inline float get_fDistance_3() const { return ___fDistance_3; }
	inline float* get_address_of_fDistance_3() { return &___fDistance_3; }
	inline void set_fDistance_3(float value)
	{
		___fDistance_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYINTERSECTIONRESULTS_T_TCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354_H
#ifndef VROVERLAYTRANSFORMTYPE_TE05C52CE902B086FBE0377133694A58DA911431E_H
#define VROVERLAYTRANSFORMTYPE_TE05C52CE902B086FBE0377133694A58DA911431E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayTransformType
struct  VROverlayTransformType_tE05C52CE902B086FBE0377133694A58DA911431E 
{
public:
	// System.Int32 Valve.VR.VROverlayTransformType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VROverlayTransformType_tE05C52CE902B086FBE0377133694A58DA911431E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYTRANSFORMTYPE_TE05C52CE902B086FBE0377133694A58DA911431E_H
#ifndef MULTICASTDELEGATE_T_H
#define MULTICASTDELEGATE_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.MulticastDelegate
struct  MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((&___delegates_11), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};
#endif // MULTICASTDELEGATE_T_H
#ifndef TEXTURE_T_TBBD7CD2974A80205F362D98F631A21D85330120D_H
#define TEXTURE_T_TBBD7CD2974A80205F362D98F631A21D85330120D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.Texture_t
struct  Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D 
{
public:
	// System.IntPtr Valve.VR.Texture_t::handle
	intptr_t ___handle_0;
	// Valve.VR.ETextureType Valve.VR.Texture_t::eType
	int32_t ___eType_1;
	// Valve.VR.EColorSpace Valve.VR.Texture_t::eColorSpace
	int32_t ___eColorSpace_2;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_eType_1() { return static_cast<int32_t>(offsetof(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D, ___eType_1)); }
	inline int32_t get_eType_1() const { return ___eType_1; }
	inline int32_t* get_address_of_eType_1() { return &___eType_1; }
	inline void set_eType_1(int32_t value)
	{
		___eType_1 = value;
	}

	inline static int32_t get_offset_of_eColorSpace_2() { return static_cast<int32_t>(offsetof(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D, ___eColorSpace_2)); }
	inline int32_t get_eColorSpace_2() const { return ___eColorSpace_2; }
	inline int32_t* get_address_of_eColorSpace_2() { return &___eColorSpace_2; }
	inline void set_eColorSpace_2(int32_t value)
	{
		___eColorSpace_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // TEXTURE_T_TBBD7CD2974A80205F362D98F631A21D85330120D_H
#ifndef TRACKEDDEVICEPOSE_T_T8749211F1556D3E333E784315E857A7C7F83FCA6_H
#define TRACKEDDEVICEPOSE_T_T8749211F1556D3E333E784315E857A7C7F83FCA6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.TrackedDevicePose_t
struct  TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.TrackedDevicePose_t::mDeviceToAbsoluteTracking
	HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  ___mDeviceToAbsoluteTracking_0;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vVelocity
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vVelocity_1;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vAngularVelocity
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vAngularVelocity_2;
	// Valve.VR.ETrackingResult Valve.VR.TrackedDevicePose_t::eTrackingResult
	int32_t ___eTrackingResult_3;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bPoseIsValid
	bool ___bPoseIsValid_4;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bDeviceIsConnected
	bool ___bDeviceIsConnected_5;

public:
	inline static int32_t get_offset_of_mDeviceToAbsoluteTracking_0() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___mDeviceToAbsoluteTracking_0)); }
	inline HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  get_mDeviceToAbsoluteTracking_0() const { return ___mDeviceToAbsoluteTracking_0; }
	inline HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * get_address_of_mDeviceToAbsoluteTracking_0() { return &___mDeviceToAbsoluteTracking_0; }
	inline void set_mDeviceToAbsoluteTracking_0(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  value)
	{
		___mDeviceToAbsoluteTracking_0 = value;
	}

	inline static int32_t get_offset_of_vVelocity_1() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___vVelocity_1)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vVelocity_1() const { return ___vVelocity_1; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vVelocity_1() { return &___vVelocity_1; }
	inline void set_vVelocity_1(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vVelocity_1 = value;
	}

	inline static int32_t get_offset_of_vAngularVelocity_2() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___vAngularVelocity_2)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vAngularVelocity_2() const { return ___vAngularVelocity_2; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vAngularVelocity_2() { return &___vAngularVelocity_2; }
	inline void set_vAngularVelocity_2(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vAngularVelocity_2 = value;
	}

	inline static int32_t get_offset_of_eTrackingResult_3() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___eTrackingResult_3)); }
	inline int32_t get_eTrackingResult_3() const { return ___eTrackingResult_3; }
	inline int32_t* get_address_of_eTrackingResult_3() { return &___eTrackingResult_3; }
	inline void set_eTrackingResult_3(int32_t value)
	{
		___eTrackingResult_3 = value;
	}

	inline static int32_t get_offset_of_bPoseIsValid_4() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___bPoseIsValid_4)); }
	inline bool get_bPoseIsValid_4() const { return ___bPoseIsValid_4; }
	inline bool* get_address_of_bPoseIsValid_4() { return &___bPoseIsValid_4; }
	inline void set_bPoseIsValid_4(bool value)
	{
		___bPoseIsValid_4 = value;
	}

	inline static int32_t get_offset_of_bDeviceIsConnected_5() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___bDeviceIsConnected_5)); }
	inline bool get_bDeviceIsConnected_5() const { return ___bDeviceIsConnected_5; }
	inline bool* get_address_of_bDeviceIsConnected_5() { return &___bDeviceIsConnected_5; }
	inline void set_bDeviceIsConnected_5(bool value)
	{
		___bDeviceIsConnected_5 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // TRACKEDDEVICEPOSE_T_T8749211F1556D3E333E784315E857A7C7F83FCA6_H
#ifndef VREVENT_DUALANALOG_T_T072CCA0F7E98A2BC185E3C647868E50BD62D5FF2_H
#define VREVENT_DUALANALOG_T_T072CCA0F7E98A2BC185E3C647868E50BD62D5FF2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_DualAnalog_t
struct  VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2 
{
public:
	// System.Single Valve.VR.VREvent_DualAnalog_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_DualAnalog_t::y
	float ___y_1;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedX
	float ___transformedX_2;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedY
	float ___transformedY_3;
	// Valve.VR.EDualAnalogWhich Valve.VR.VREvent_DualAnalog_t::which
	int32_t ___which_4;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_transformedX_2() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___transformedX_2)); }
	inline float get_transformedX_2() const { return ___transformedX_2; }
	inline float* get_address_of_transformedX_2() { return &___transformedX_2; }
	inline void set_transformedX_2(float value)
	{
		___transformedX_2 = value;
	}

	inline static int32_t get_offset_of_transformedY_3() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___transformedY_3)); }
	inline float get_transformedY_3() const { return ___transformedY_3; }
	inline float* get_address_of_transformedY_3() { return &___transformedY_3; }
	inline void set_transformedY_3(float value)
	{
		___transformedY_3 = value;
	}

	inline static int32_t get_offset_of_which_4() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___which_4)); }
	inline int32_t get_which_4() const { return ___which_4; }
	inline int32_t* get_address_of_which_4() { return &___which_4; }
	inline void set_which_4(int32_t value)
	{
		___which_4 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_DUALANALOG_T_T072CCA0F7E98A2BC185E3C647868E50BD62D5FF2_H
#ifndef VREVENT_PROPERTY_T_T8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD_H
#define VREVENT_PROPERTY_T_T8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Property_t
struct  VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD 
{
public:
	// System.UInt64 Valve.VR.VREvent_Property_t::container
	uint64_t ___container_0;
	// Valve.VR.ETrackedDeviceProperty Valve.VR.VREvent_Property_t::prop
	int32_t ___prop_1;

public:
	inline static int32_t get_offset_of_container_0() { return static_cast<int32_t>(offsetof(VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD, ___container_0)); }
	inline uint64_t get_container_0() const { return ___container_0; }
	inline uint64_t* get_address_of_container_0() { return &___container_0; }
	inline void set_container_0(uint64_t value)
	{
		___container_0 = value;
	}

	inline static int32_t get_offset_of_prop_1() { return static_cast<int32_t>(offsetof(VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD, ___prop_1)); }
	inline int32_t get_prop_1() const { return ___prop_1; }
	inline int32_t* get_address_of_prop_1() { return &___prop_1; }
	inline void set_prop_1(int32_t value)
	{
		___prop_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_PROPERTY_T_T8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD_H
#ifndef VROVERLAYINTERSECTIONMASKPRIMITIVE_T_T386711BC0E265B2991704FD98FFC953435B01A40_H
#define VROVERLAYINTERSECTIONMASKPRIMITIVE_T_T386711BC0E265B2991704FD98FFC953435B01A40_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayIntersectionMaskPrimitive_t
struct  VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 
{
public:
	// Valve.VR.EVROverlayIntersectionMaskPrimitiveType Valve.VR.VROverlayIntersectionMaskPrimitive_t::m_nPrimitiveType
	int32_t ___m_nPrimitiveType_0;
	// Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t Valve.VR.VROverlayIntersectionMaskPrimitive_t::m_Primitive
	VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2  ___m_Primitive_1;

public:
	inline static int32_t get_offset_of_m_nPrimitiveType_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40, ___m_nPrimitiveType_0)); }
	inline int32_t get_m_nPrimitiveType_0() const { return ___m_nPrimitiveType_0; }
	inline int32_t* get_address_of_m_nPrimitiveType_0() { return &___m_nPrimitiveType_0; }
	inline void set_m_nPrimitiveType_0(int32_t value)
	{
		___m_nPrimitiveType_0 = value;
	}

	inline static int32_t get_offset_of_m_Primitive_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40, ___m_Primitive_1)); }
	inline VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2  get_m_Primitive_1() const { return ___m_Primitive_1; }
	inline VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2 * get_address_of_m_Primitive_1() { return &___m_Primitive_1; }
	inline void set_m_Primitive_1(VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2  value)
	{
		___m_Primitive_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYINTERSECTIONMASKPRIMITIVE_T_T386711BC0E265B2991704FD98FFC953435B01A40_H
#ifndef VROVERLAYINTERSECTIONPARAMS_T_TE038830920B44860278C7D299044D6769FC66CBE_H
#define VROVERLAYINTERSECTIONPARAMS_T_TE038830920B44860278C7D299044D6769FC66CBE_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayIntersectionParams_t
struct  VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE 
{
public:
	// Valve.VR.HmdVector3_t Valve.VR.VROverlayIntersectionParams_t::vSource
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vSource_0;
	// Valve.VR.HmdVector3_t Valve.VR.VROverlayIntersectionParams_t::vDirection
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vDirection_1;
	// Valve.VR.ETrackingUniverseOrigin Valve.VR.VROverlayIntersectionParams_t::eOrigin
	int32_t ___eOrigin_2;

public:
	inline static int32_t get_offset_of_vSource_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE, ___vSource_0)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vSource_0() const { return ___vSource_0; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vSource_0() { return &___vSource_0; }
	inline void set_vSource_0(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vSource_0 = value;
	}

	inline static int32_t get_offset_of_vDirection_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE, ___vDirection_1)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vDirection_1() const { return ___vDirection_1; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vDirection_1() { return &___vDirection_1; }
	inline void set_vDirection_1(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vDirection_1 = value;
	}

	inline static int32_t get_offset_of_eOrigin_2() { return static_cast<int32_t>(offsetof(VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE, ___eOrigin_2)); }
	inline int32_t get_eOrigin_2() const { return ___eOrigin_2; }
	inline int32_t* get_address_of_eOrigin_2() { return &___eOrigin_2; }
	inline void set_eOrigin_2(int32_t value)
	{
		___eOrigin_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYINTERSECTIONPARAMS_T_TE038830920B44860278C7D299044D6769FC66CBE_H
#ifndef ASYNCCALLBACK_T3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4_H
#define ASYNCCALLBACK_T3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.AsyncCallback
struct  AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ASYNCCALLBACK_T3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4_H
#ifndef COMPOSITOR_FRAMETIMING_TA18BEF5CC65929D8D91685376559EB62BAEDF236_H
#define COMPOSITOR_FRAMETIMING_TA18BEF5CC65929D8D91685376559EB62BAEDF236_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.Compositor_FrameTiming
struct  Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 
{
public:
	// System.UInt32 Valve.VR.Compositor_FrameTiming::m_nSize
	uint32_t ___m_nSize_0;
	// System.UInt32 Valve.VR.Compositor_FrameTiming::m_nFrameIndex
	uint32_t ___m_nFrameIndex_1;
	// System.UInt32 Valve.VR.Compositor_FrameTiming::m_nNumFramePresents
	uint32_t ___m_nNumFramePresents_2;
	// System.UInt32 Valve.VR.Compositor_FrameTiming::m_nNumMisPresented
	uint32_t ___m_nNumMisPresented_3;
	// System.UInt32 Valve.VR.Compositor_FrameTiming::m_nNumDroppedFrames
	uint32_t ___m_nNumDroppedFrames_4;
	// System.UInt32 Valve.VR.Compositor_FrameTiming::m_nReprojectionFlags
	uint32_t ___m_nReprojectionFlags_5;
	// System.Double Valve.VR.Compositor_FrameTiming::m_flSystemTimeInSeconds
	double ___m_flSystemTimeInSeconds_6;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flPreSubmitGpuMs
	float ___m_flPreSubmitGpuMs_7;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flPostSubmitGpuMs
	float ___m_flPostSubmitGpuMs_8;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flTotalRenderGpuMs
	float ___m_flTotalRenderGpuMs_9;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flCompositorRenderGpuMs
	float ___m_flCompositorRenderGpuMs_10;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flCompositorRenderCpuMs
	float ___m_flCompositorRenderCpuMs_11;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flCompositorIdleCpuMs
	float ___m_flCompositorIdleCpuMs_12;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flClientFrameIntervalMs
	float ___m_flClientFrameIntervalMs_13;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flPresentCallCpuMs
	float ___m_flPresentCallCpuMs_14;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flWaitForPresentCpuMs
	float ___m_flWaitForPresentCpuMs_15;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flSubmitFrameMs
	float ___m_flSubmitFrameMs_16;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flWaitGetPosesCalledMs
	float ___m_flWaitGetPosesCalledMs_17;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flNewPosesReadyMs
	float ___m_flNewPosesReadyMs_18;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flNewFrameReadyMs
	float ___m_flNewFrameReadyMs_19;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flCompositorUpdateStartMs
	float ___m_flCompositorUpdateStartMs_20;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flCompositorUpdateEndMs
	float ___m_flCompositorUpdateEndMs_21;
	// System.Single Valve.VR.Compositor_FrameTiming::m_flCompositorRenderStartMs
	float ___m_flCompositorRenderStartMs_22;
	// Valve.VR.TrackedDevicePose_t Valve.VR.Compositor_FrameTiming::m_HmdPose
	TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6  ___m_HmdPose_23;

public:
	inline static int32_t get_offset_of_m_nSize_0() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_nSize_0)); }
	inline uint32_t get_m_nSize_0() const { return ___m_nSize_0; }
	inline uint32_t* get_address_of_m_nSize_0() { return &___m_nSize_0; }
	inline void set_m_nSize_0(uint32_t value)
	{
		___m_nSize_0 = value;
	}

	inline static int32_t get_offset_of_m_nFrameIndex_1() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_nFrameIndex_1)); }
	inline uint32_t get_m_nFrameIndex_1() const { return ___m_nFrameIndex_1; }
	inline uint32_t* get_address_of_m_nFrameIndex_1() { return &___m_nFrameIndex_1; }
	inline void set_m_nFrameIndex_1(uint32_t value)
	{
		___m_nFrameIndex_1 = value;
	}

	inline static int32_t get_offset_of_m_nNumFramePresents_2() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_nNumFramePresents_2)); }
	inline uint32_t get_m_nNumFramePresents_2() const { return ___m_nNumFramePresents_2; }
	inline uint32_t* get_address_of_m_nNumFramePresents_2() { return &___m_nNumFramePresents_2; }
	inline void set_m_nNumFramePresents_2(uint32_t value)
	{
		___m_nNumFramePresents_2 = value;
	}

	inline static int32_t get_offset_of_m_nNumMisPresented_3() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_nNumMisPresented_3)); }
	inline uint32_t get_m_nNumMisPresented_3() const { return ___m_nNumMisPresented_3; }
	inline uint32_t* get_address_of_m_nNumMisPresented_3() { return &___m_nNumMisPresented_3; }
	inline void set_m_nNumMisPresented_3(uint32_t value)
	{
		___m_nNumMisPresented_3 = value;
	}

	inline static int32_t get_offset_of_m_nNumDroppedFrames_4() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_nNumDroppedFrames_4)); }
	inline uint32_t get_m_nNumDroppedFrames_4() const { return ___m_nNumDroppedFrames_4; }
	inline uint32_t* get_address_of_m_nNumDroppedFrames_4() { return &___m_nNumDroppedFrames_4; }
	inline void set_m_nNumDroppedFrames_4(uint32_t value)
	{
		___m_nNumDroppedFrames_4 = value;
	}

	inline static int32_t get_offset_of_m_nReprojectionFlags_5() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_nReprojectionFlags_5)); }
	inline uint32_t get_m_nReprojectionFlags_5() const { return ___m_nReprojectionFlags_5; }
	inline uint32_t* get_address_of_m_nReprojectionFlags_5() { return &___m_nReprojectionFlags_5; }
	inline void set_m_nReprojectionFlags_5(uint32_t value)
	{
		___m_nReprojectionFlags_5 = value;
	}

	inline static int32_t get_offset_of_m_flSystemTimeInSeconds_6() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flSystemTimeInSeconds_6)); }
	inline double get_m_flSystemTimeInSeconds_6() const { return ___m_flSystemTimeInSeconds_6; }
	inline double* get_address_of_m_flSystemTimeInSeconds_6() { return &___m_flSystemTimeInSeconds_6; }
	inline void set_m_flSystemTimeInSeconds_6(double value)
	{
		___m_flSystemTimeInSeconds_6 = value;
	}

	inline static int32_t get_offset_of_m_flPreSubmitGpuMs_7() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flPreSubmitGpuMs_7)); }
	inline float get_m_flPreSubmitGpuMs_7() const { return ___m_flPreSubmitGpuMs_7; }
	inline float* get_address_of_m_flPreSubmitGpuMs_7() { return &___m_flPreSubmitGpuMs_7; }
	inline void set_m_flPreSubmitGpuMs_7(float value)
	{
		___m_flPreSubmitGpuMs_7 = value;
	}

	inline static int32_t get_offset_of_m_flPostSubmitGpuMs_8() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flPostSubmitGpuMs_8)); }
	inline float get_m_flPostSubmitGpuMs_8() const { return ___m_flPostSubmitGpuMs_8; }
	inline float* get_address_of_m_flPostSubmitGpuMs_8() { return &___m_flPostSubmitGpuMs_8; }
	inline void set_m_flPostSubmitGpuMs_8(float value)
	{
		___m_flPostSubmitGpuMs_8 = value;
	}

	inline static int32_t get_offset_of_m_flTotalRenderGpuMs_9() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flTotalRenderGpuMs_9)); }
	inline float get_m_flTotalRenderGpuMs_9() const { return ___m_flTotalRenderGpuMs_9; }
	inline float* get_address_of_m_flTotalRenderGpuMs_9() { return &___m_flTotalRenderGpuMs_9; }
	inline void set_m_flTotalRenderGpuMs_9(float value)
	{
		___m_flTotalRenderGpuMs_9 = value;
	}

	inline static int32_t get_offset_of_m_flCompositorRenderGpuMs_10() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flCompositorRenderGpuMs_10)); }
	inline float get_m_flCompositorRenderGpuMs_10() const { return ___m_flCompositorRenderGpuMs_10; }
	inline float* get_address_of_m_flCompositorRenderGpuMs_10() { return &___m_flCompositorRenderGpuMs_10; }
	inline void set_m_flCompositorRenderGpuMs_10(float value)
	{
		___m_flCompositorRenderGpuMs_10 = value;
	}

	inline static int32_t get_offset_of_m_flCompositorRenderCpuMs_11() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flCompositorRenderCpuMs_11)); }
	inline float get_m_flCompositorRenderCpuMs_11() const { return ___m_flCompositorRenderCpuMs_11; }
	inline float* get_address_of_m_flCompositorRenderCpuMs_11() { return &___m_flCompositorRenderCpuMs_11; }
	inline void set_m_flCompositorRenderCpuMs_11(float value)
	{
		___m_flCompositorRenderCpuMs_11 = value;
	}

	inline static int32_t get_offset_of_m_flCompositorIdleCpuMs_12() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flCompositorIdleCpuMs_12)); }
	inline float get_m_flCompositorIdleCpuMs_12() const { return ___m_flCompositorIdleCpuMs_12; }
	inline float* get_address_of_m_flCompositorIdleCpuMs_12() { return &___m_flCompositorIdleCpuMs_12; }
	inline void set_m_flCompositorIdleCpuMs_12(float value)
	{
		___m_flCompositorIdleCpuMs_12 = value;
	}

	inline static int32_t get_offset_of_m_flClientFrameIntervalMs_13() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flClientFrameIntervalMs_13)); }
	inline float get_m_flClientFrameIntervalMs_13() const { return ___m_flClientFrameIntervalMs_13; }
	inline float* get_address_of_m_flClientFrameIntervalMs_13() { return &___m_flClientFrameIntervalMs_13; }
	inline void set_m_flClientFrameIntervalMs_13(float value)
	{
		___m_flClientFrameIntervalMs_13 = value;
	}

	inline static int32_t get_offset_of_m_flPresentCallCpuMs_14() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flPresentCallCpuMs_14)); }
	inline float get_m_flPresentCallCpuMs_14() const { return ___m_flPresentCallCpuMs_14; }
	inline float* get_address_of_m_flPresentCallCpuMs_14() { return &___m_flPresentCallCpuMs_14; }
	inline void set_m_flPresentCallCpuMs_14(float value)
	{
		___m_flPresentCallCpuMs_14 = value;
	}

	inline static int32_t get_offset_of_m_flWaitForPresentCpuMs_15() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flWaitForPresentCpuMs_15)); }
	inline float get_m_flWaitForPresentCpuMs_15() const { return ___m_flWaitForPresentCpuMs_15; }
	inline float* get_address_of_m_flWaitForPresentCpuMs_15() { return &___m_flWaitForPresentCpuMs_15; }
	inline void set_m_flWaitForPresentCpuMs_15(float value)
	{
		___m_flWaitForPresentCpuMs_15 = value;
	}

	inline static int32_t get_offset_of_m_flSubmitFrameMs_16() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flSubmitFrameMs_16)); }
	inline float get_m_flSubmitFrameMs_16() const { return ___m_flSubmitFrameMs_16; }
	inline float* get_address_of_m_flSubmitFrameMs_16() { return &___m_flSubmitFrameMs_16; }
	inline void set_m_flSubmitFrameMs_16(float value)
	{
		___m_flSubmitFrameMs_16 = value;
	}

	inline static int32_t get_offset_of_m_flWaitGetPosesCalledMs_17() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flWaitGetPosesCalledMs_17)); }
	inline float get_m_flWaitGetPosesCalledMs_17() const { return ___m_flWaitGetPosesCalledMs_17; }
	inline float* get_address_of_m_flWaitGetPosesCalledMs_17() { return &___m_flWaitGetPosesCalledMs_17; }
	inline void set_m_flWaitGetPosesCalledMs_17(float value)
	{
		___m_flWaitGetPosesCalledMs_17 = value;
	}

	inline static int32_t get_offset_of_m_flNewPosesReadyMs_18() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flNewPosesReadyMs_18)); }
	inline float get_m_flNewPosesReadyMs_18() const { return ___m_flNewPosesReadyMs_18; }
	inline float* get_address_of_m_flNewPosesReadyMs_18() { return &___m_flNewPosesReadyMs_18; }
	inline void set_m_flNewPosesReadyMs_18(float value)
	{
		___m_flNewPosesReadyMs_18 = value;
	}

	inline static int32_t get_offset_of_m_flNewFrameReadyMs_19() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flNewFrameReadyMs_19)); }
	inline float get_m_flNewFrameReadyMs_19() const { return ___m_flNewFrameReadyMs_19; }
	inline float* get_address_of_m_flNewFrameReadyMs_19() { return &___m_flNewFrameReadyMs_19; }
	inline void set_m_flNewFrameReadyMs_19(float value)
	{
		___m_flNewFrameReadyMs_19 = value;
	}

	inline static int32_t get_offset_of_m_flCompositorUpdateStartMs_20() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flCompositorUpdateStartMs_20)); }
	inline float get_m_flCompositorUpdateStartMs_20() const { return ___m_flCompositorUpdateStartMs_20; }
	inline float* get_address_of_m_flCompositorUpdateStartMs_20() { return &___m_flCompositorUpdateStartMs_20; }
	inline void set_m_flCompositorUpdateStartMs_20(float value)
	{
		___m_flCompositorUpdateStartMs_20 = value;
	}

	inline static int32_t get_offset_of_m_flCompositorUpdateEndMs_21() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flCompositorUpdateEndMs_21)); }
	inline float get_m_flCompositorUpdateEndMs_21() const { return ___m_flCompositorUpdateEndMs_21; }
	inline float* get_address_of_m_flCompositorUpdateEndMs_21() { return &___m_flCompositorUpdateEndMs_21; }
	inline void set_m_flCompositorUpdateEndMs_21(float value)
	{
		___m_flCompositorUpdateEndMs_21 = value;
	}

	inline static int32_t get_offset_of_m_flCompositorRenderStartMs_22() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_flCompositorRenderStartMs_22)); }
	inline float get_m_flCompositorRenderStartMs_22() const { return ___m_flCompositorRenderStartMs_22; }
	inline float* get_address_of_m_flCompositorRenderStartMs_22() { return &___m_flCompositorRenderStartMs_22; }
	inline void set_m_flCompositorRenderStartMs_22(float value)
	{
		___m_flCompositorRenderStartMs_22 = value;
	}

	inline static int32_t get_offset_of_m_HmdPose_23() { return static_cast<int32_t>(offsetof(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236, ___m_HmdPose_23)); }
	inline TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6  get_m_HmdPose_23() const { return ___m_HmdPose_23; }
	inline TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * get_address_of_m_HmdPose_23() { return &___m_HmdPose_23; }
	inline void set_m_HmdPose_23(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6  value)
	{
		___m_HmdPose_23 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // COMPOSITOR_FRAMETIMING_TA18BEF5CC65929D8D91685376559EB62BAEDF236_H
#ifndef _SETWORKINGCOLLISIONBOUNDSTAGSINFO_T7F1BD889ADEEFFE699F064129C30D4F49F938273_H
#define _SETWORKINGCOLLISIONBOUNDSTAGSINFO_T7F1BD889ADEEFFE699F064129C30D4F49F938273_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRChaperoneSetup__SetWorkingCollisionBoundsTagsInfo
struct  _SetWorkingCollisionBoundsTagsInfo_t7F1BD889ADEEFFE699F064129C30D4F49F938273  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETWORKINGCOLLISIONBOUNDSTAGSINFO_T7F1BD889ADEEFFE699F064129C30D4F49F938273_H
#ifndef _SETWORKINGPHYSICALBOUNDSINFO_TAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3_H
#define _SETWORKINGPHYSICALBOUNDSINFO_TAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRChaperoneSetup__SetWorkingPhysicalBoundsInfo
struct  _SetWorkingPhysicalBoundsInfo_tAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETWORKINGPHYSICALBOUNDSINFO_TAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3_H
#ifndef _SETWORKINGPLAYAREASIZE_T73C6EE98131165C953CE9B4CCC3B15E61853B890_H
#define _SETWORKINGPLAYAREASIZE_T73C6EE98131165C953CE9B4CCC3B15E61853B890_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRChaperoneSetup__SetWorkingPlayAreaSize
struct  _SetWorkingPlayAreaSize_t73C6EE98131165C953CE9B4CCC3B15E61853B890  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETWORKINGPLAYAREASIZE_T73C6EE98131165C953CE9B4CCC3B15E61853B890_H
#ifndef _SETWORKINGSEATEDZEROPOSETORAWTRACKINGPOSE_T2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF_H
#define _SETWORKINGSEATEDZEROPOSETORAWTRACKINGPOSE_T2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRChaperoneSetup__SetWorkingSeatedZeroPoseToRawTrackingPose
struct  _SetWorkingSeatedZeroPoseToRawTrackingPose_t2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETWORKINGSEATEDZEROPOSETORAWTRACKINGPOSE_T2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF_H
#ifndef _SETWORKINGSTANDINGZEROPOSETORAWTRACKINGPOSE_TA17A471D49E986180E741026CEC7D57B597B636F_H
#define _SETWORKINGSTANDINGZEROPOSETORAWTRACKINGPOSE_TA17A471D49E986180E741026CEC7D57B597B636F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRChaperoneSetup__SetWorkingStandingZeroPoseToRawTrackingPose
struct  _SetWorkingStandingZeroPoseToRawTrackingPose_tA17A471D49E986180E741026CEC7D57B597B636F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETWORKINGSTANDINGZEROPOSETORAWTRACKINGPOSE_TA17A471D49E986180E741026CEC7D57B597B636F_H
#ifndef _CANRENDERSCENE_T4AD3E3624B2B1E98DDADD1A11D321D6200754A50_H
#define _CANRENDERSCENE_T4AD3E3624B2B1E98DDADD1A11D321D6200754A50_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__CanRenderScene
struct  _CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _CANRENDERSCENE_T4AD3E3624B2B1E98DDADD1A11D321D6200754A50_H
#ifndef _CLEARLASTSUBMITTEDFRAME_TF87784262A4806EB8D8B7FE291A65460ED498B17_H
#define _CLEARLASTSUBMITTEDFRAME_TF87784262A4806EB8D8B7FE291A65460ED498B17_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__ClearLastSubmittedFrame
struct  _ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _CLEARLASTSUBMITTEDFRAME_TF87784262A4806EB8D8B7FE291A65460ED498B17_H
#ifndef _CLEARSKYBOXOVERRIDE_T798229B1E8CD4DC3077DF337F8907B7F87707253_H
#define _CLEARSKYBOXOVERRIDE_T798229B1E8CD4DC3077DF337F8907B7F87707253_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__ClearSkyboxOverride
struct  _ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _CLEARSKYBOXOVERRIDE_T798229B1E8CD4DC3077DF337F8907B7F87707253_H
#ifndef _COMPOSITORBRINGTOFRONT_T7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD_H
#define _COMPOSITORBRINGTOFRONT_T7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__CompositorBringToFront
struct  _CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _COMPOSITORBRINGTOFRONT_T7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD_H
#ifndef _COMPOSITORDUMPIMAGES_TB402107FC21B869DF07D94E932CCC1C425ADD35E_H
#define _COMPOSITORDUMPIMAGES_TB402107FC21B869DF07D94E932CCC1C425ADD35E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__CompositorDumpImages
struct  _CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _COMPOSITORDUMPIMAGES_TB402107FC21B869DF07D94E932CCC1C425ADD35E_H
#ifndef _COMPOSITORGOTOBACK_T3D458833C89823D3A58E7B2955B286B2CAEABF84_H
#define _COMPOSITORGOTOBACK_T3D458833C89823D3A58E7B2955B286B2CAEABF84_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__CompositorGoToBack
struct  _CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _COMPOSITORGOTOBACK_T3D458833C89823D3A58E7B2955B286B2CAEABF84_H
#ifndef _COMPOSITORQUIT_TB47A02DB537B79B3C952A8D080F420EEC4839BD9_H
#define _COMPOSITORQUIT_TB47A02DB537B79B3C952A8D080F420EEC4839BD9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__CompositorQuit
struct  _CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _COMPOSITORQUIT_TB47A02DB537B79B3C952A8D080F420EEC4839BD9_H
#ifndef _FADEGRID_T592CCF8F0AD70D570FE4B808117A6CF41DA3E29F_H
#define _FADEGRID_T592CCF8F0AD70D570FE4B808117A6CF41DA3E29F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__FadeGrid
struct  _FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _FADEGRID_T592CCF8F0AD70D570FE4B808117A6CF41DA3E29F_H
#ifndef _FADETOCOLOR_TDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D_H
#define _FADETOCOLOR_TDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__FadeToColor
struct  _FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _FADETOCOLOR_TDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D_H
#ifndef _FORCEINTERLEAVEDREPROJECTIONON_T56291E564F2FFAF37BF30DB1D7A6968613EB993D_H
#define _FORCEINTERLEAVEDREPROJECTIONON_T56291E564F2FFAF37BF30DB1D7A6968613EB993D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__ForceInterleavedReprojectionOn
struct  _ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _FORCEINTERLEAVEDREPROJECTIONON_T56291E564F2FFAF37BF30DB1D7A6968613EB993D_H
#ifndef _FORCERECONNECTPROCESS_T74B5772BEA384B92E20EB08F3E865C17BA48BB22_H
#define _FORCERECONNECTPROCESS_T74B5772BEA384B92E20EB08F3E865C17BA48BB22_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__ForceReconnectProcess
struct  _ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _FORCERECONNECTPROCESS_T74B5772BEA384B92E20EB08F3E865C17BA48BB22_H
#ifndef _GETCUMULATIVESTATS_T4A2719788AFE48A661FCF771E49A2BF5D73C52E3_H
#define _GETCUMULATIVESTATS_T4A2719788AFE48A661FCF771E49A2BF5D73C52E3_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetCumulativeStats
struct  _GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCUMULATIVESTATS_T4A2719788AFE48A661FCF771E49A2BF5D73C52E3_H
#ifndef _GETCURRENTFADECOLOR_T0D7ED8F4B9A0810F461DC413EBE923FC13F629BF_H
#define _GETCURRENTFADECOLOR_T0D7ED8F4B9A0810F461DC413EBE923FC13F629BF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetCurrentFadeColor
struct  _GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCURRENTFADECOLOR_T0D7ED8F4B9A0810F461DC413EBE923FC13F629BF_H
#ifndef _GETCURRENTGRIDALPHA_T83FE87F63BFCAAEDB11D43FB4551762BB5F5D078_H
#define _GETCURRENTGRIDALPHA_T83FE87F63BFCAAEDB11D43FB4551762BB5F5D078_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetCurrentGridAlpha
struct  _GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCURRENTGRIDALPHA_T83FE87F63BFCAAEDB11D43FB4551762BB5F5D078_H
#ifndef _GETCURRENTSCENEFOCUSPROCESS_T87D7A955D7579B6FB926BE17DD720BB887DB26FF_H
#define _GETCURRENTSCENEFOCUSPROCESS_T87D7A955D7579B6FB926BE17DD720BB887DB26FF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetCurrentSceneFocusProcess
struct  _GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCURRENTSCENEFOCUSPROCESS_T87D7A955D7579B6FB926BE17DD720BB887DB26FF_H
#ifndef _GETFRAMETIMEREMAINING_T275425ABD252468EB2DC72C6E390C2C678750008_H
#define _GETFRAMETIMEREMAINING_T275425ABD252468EB2DC72C6E390C2C678750008_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetFrameTimeRemaining
struct  _GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETFRAMETIMEREMAINING_T275425ABD252468EB2DC72C6E390C2C678750008_H
#ifndef _GETLASTFRAMERENDERER_TC74B42E65FC6633086250B14EA21C0B38C917114_H
#define _GETLASTFRAMERENDERER_TC74B42E65FC6633086250B14EA21C0B38C917114_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetLastFrameRenderer
struct  _GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETLASTFRAMERENDERER_TC74B42E65FC6633086250B14EA21C0B38C917114_H
#ifndef _GETLASTPOSEFORTRACKEDDEVICEINDEX_TD82982CADCA7E92E703A2F28E661A923CBE4C0BA_H
#define _GETLASTPOSEFORTRACKEDDEVICEINDEX_TD82982CADCA7E92E703A2F28E661A923CBE4C0BA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetLastPoseForTrackedDeviceIndex
struct  _GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETLASTPOSEFORTRACKEDDEVICEINDEX_TD82982CADCA7E92E703A2F28E661A923CBE4C0BA_H
#ifndef _GETLASTPOSES_TEF4B98656C1416924E72E274A66EF675E212A952_H
#define _GETLASTPOSES_TEF4B98656C1416924E72E274A66EF675E212A952_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetLastPoses
struct  _GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETLASTPOSES_TEF4B98656C1416924E72E274A66EF675E212A952_H
#ifndef _GETMIRRORTEXTURED3D11_T34FC6648AA56D3FF3655506C3F87B1228512B12E_H
#define _GETMIRRORTEXTURED3D11_T34FC6648AA56D3FF3655506C3F87B1228512B12E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetMirrorTextureD3D11
struct  _GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETMIRRORTEXTURED3D11_T34FC6648AA56D3FF3655506C3F87B1228512B12E_H
#ifndef _GETMIRRORTEXTUREGL_T5CDB6081A29E68B453958F526EDD2261EEFF2E6B_H
#define _GETMIRRORTEXTUREGL_T5CDB6081A29E68B453958F526EDD2261EEFF2E6B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetMirrorTextureGL
struct  _GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETMIRRORTEXTUREGL_T5CDB6081A29E68B453958F526EDD2261EEFF2E6B_H
#ifndef _GETTRACKINGSPACE_TCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B_H
#define _GETTRACKINGSPACE_TCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetTrackingSpace
struct  _GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETTRACKINGSPACE_TCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B_H
#ifndef _GETVULKANDEVICEEXTENSIONSREQUIRED_T96256DC2669D7EADB30A1FFB7DD1DBDB64649D99_H
#define _GETVULKANDEVICEEXTENSIONSREQUIRED_T96256DC2669D7EADB30A1FFB7DD1DBDB64649D99_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetVulkanDeviceExtensionsRequired
struct  _GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETVULKANDEVICEEXTENSIONSREQUIRED_T96256DC2669D7EADB30A1FFB7DD1DBDB64649D99_H
#ifndef _GETVULKANINSTANCEEXTENSIONSREQUIRED_T447FB93781F4F7343AE6D2920325357DAE467036_H
#define _GETVULKANINSTANCEEXTENSIONSREQUIRED_T447FB93781F4F7343AE6D2920325357DAE467036_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetVulkanInstanceExtensionsRequired
struct  _GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETVULKANINSTANCEEXTENSIONSREQUIRED_T447FB93781F4F7343AE6D2920325357DAE467036_H
#ifndef _HIDEMIRRORWINDOW_T0D15A078C3C870E0A271CD6029AB225D42A80824_H
#define _HIDEMIRRORWINDOW_T0D15A078C3C870E0A271CD6029AB225D42A80824_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__HideMirrorWindow
struct  _HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _HIDEMIRRORWINDOW_T0D15A078C3C870E0A271CD6029AB225D42A80824_H
#ifndef _ISFULLSCREEN_T4934799E374C2D733EFA1765BBD561202E90B76C_H
#define _ISFULLSCREEN_T4934799E374C2D733EFA1765BBD561202E90B76C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__IsFullscreen
struct  _IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISFULLSCREEN_T4934799E374C2D733EFA1765BBD561202E90B76C_H
#ifndef _ISMIRRORWINDOWVISIBLE_T942836C893A14734CD04810E922BBC47FA07CA1C_H
#define _ISMIRRORWINDOWVISIBLE_T942836C893A14734CD04810E922BBC47FA07CA1C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__IsMirrorWindowVisible
struct  _IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISMIRRORWINDOWVISIBLE_T942836C893A14734CD04810E922BBC47FA07CA1C_H
#ifndef _LOCKGLSHAREDTEXTUREFORACCESS_T3905CC829BDE3974B6A5DE2E24BA627C3DA26C51_H
#define _LOCKGLSHAREDTEXTUREFORACCESS_T3905CC829BDE3974B6A5DE2E24BA627C3DA26C51_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__LockGLSharedTextureForAccess
struct  _LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _LOCKGLSHAREDTEXTUREFORACCESS_T3905CC829BDE3974B6A5DE2E24BA627C3DA26C51_H
#ifndef _POSTPRESENTHANDOFF_T02FC711D85433EA34EC212A7DE732EE14B127BF2_H
#define _POSTPRESENTHANDOFF_T02FC711D85433EA34EC212A7DE732EE14B127BF2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__PostPresentHandoff
struct  _PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _POSTPRESENTHANDOFF_T02FC711D85433EA34EC212A7DE732EE14B127BF2_H
#ifndef _RELEASEMIRRORTEXTURED3D11_T93D5660E100B4F1093C9F7D3400131E12295D66A_H
#define _RELEASEMIRRORTEXTURED3D11_T93D5660E100B4F1093C9F7D3400131E12295D66A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__ReleaseMirrorTextureD3D11
struct  _ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _RELEASEMIRRORTEXTURED3D11_T93D5660E100B4F1093C9F7D3400131E12295D66A_H
#ifndef _RELEASESHAREDGLTEXTURE_T890273BFB9F844C3BD452C7F624AE6E84A82BCCE_H
#define _RELEASESHAREDGLTEXTURE_T890273BFB9F844C3BD452C7F624AE6E84A82BCCE_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__ReleaseSharedGLTexture
struct  _ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _RELEASESHAREDGLTEXTURE_T890273BFB9F844C3BD452C7F624AE6E84A82BCCE_H
#ifndef _SETEXPLICITTIMINGMODE_T2D79EA10D45525DBDB731BC759577160A54A4105_H
#define _SETEXPLICITTIMINGMODE_T2D79EA10D45525DBDB731BC759577160A54A4105_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__SetExplicitTimingMode
struct  _SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETEXPLICITTIMINGMODE_T2D79EA10D45525DBDB731BC759577160A54A4105_H
#ifndef _SETSKYBOXOVERRIDE_T72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A_H
#define _SETSKYBOXOVERRIDE_T72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__SetSkyboxOverride
struct  _SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETSKYBOXOVERRIDE_T72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A_H
#ifndef _SETTRACKINGSPACE_TFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB_H
#define _SETTRACKINGSPACE_TFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__SetTrackingSpace
struct  _SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETTRACKINGSPACE_TFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB_H
#ifndef _SHOULDAPPRENDERWITHLOWRESOURCES_TC396EF3CD230BE6233828A1FD8849B6B645AF3DD_H
#define _SHOULDAPPRENDERWITHLOWRESOURCES_TC396EF3CD230BE6233828A1FD8849B6B645AF3DD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__ShouldAppRenderWithLowResources
struct  _ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOULDAPPRENDERWITHLOWRESOURCES_TC396EF3CD230BE6233828A1FD8849B6B645AF3DD_H
#ifndef _SHOWMIRRORWINDOW_T9DD48C66AF4DE1BD324E1F32AFF671720030C847_H
#define _SHOWMIRRORWINDOW_T9DD48C66AF4DE1BD324E1F32AFF671720030C847_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__ShowMirrorWindow
struct  _ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWMIRRORWINDOW_T9DD48C66AF4DE1BD324E1F32AFF671720030C847_H
#ifndef _SUBMIT_T9F5FF79B93102B2604698AFE7EEC0F478B05DFE5_H
#define _SUBMIT_T9F5FF79B93102B2604698AFE7EEC0F478B05DFE5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__Submit
struct  _Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SUBMIT_T9F5FF79B93102B2604698AFE7EEC0F478B05DFE5_H
#ifndef _SUBMITEXPLICITTIMINGDATA_T9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0_H
#define _SUBMITEXPLICITTIMINGDATA_T9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__SubmitExplicitTimingData
struct  _SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SUBMITEXPLICITTIMINGDATA_T9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0_H
#ifndef _SUSPENDRENDERING_T872BE4CA1DF1FE78864D88DBE26B3099A836BFA1_H
#define _SUSPENDRENDERING_T872BE4CA1DF1FE78864D88DBE26B3099A836BFA1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__SuspendRendering
struct  _SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SUSPENDRENDERING_T872BE4CA1DF1FE78864D88DBE26B3099A836BFA1_H
#ifndef _UNLOCKGLSHAREDTEXTUREFORACCESS_T09D9B28C3A5CE6C727B5E374D545A14FD260A7A8_H
#define _UNLOCKGLSHAREDTEXTUREFORACCESS_T09D9B28C3A5CE6C727B5E374D545A14FD260A7A8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__UnlockGLSharedTextureForAccess
struct  _UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _UNLOCKGLSHAREDTEXTUREFORACCESS_T09D9B28C3A5CE6C727B5E374D545A14FD260A7A8_H
#ifndef _WAITGETPOSES_TD09B587943F073B945E89AA35CE975B66B0B5DDD_H
#define _WAITGETPOSES_TD09B587943F073B945E89AA35CE975B66B0B5DDD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__WaitGetPoses
struct  _WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _WAITGETPOSES_TD09B587943F073B945E89AA35CE975B66B0B5DDD_H
#ifndef _GETDRIVERCOUNT_T7384AB3A3BEBA88DF81447BED896CB56A46FFB92_H
#define _GETDRIVERCOUNT_T7384AB3A3BEBA88DF81447BED896CB56A46FFB92_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRDriverManager__GetDriverCount
struct  _GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETDRIVERCOUNT_T7384AB3A3BEBA88DF81447BED896CB56A46FFB92_H
#ifndef _GETDRIVERNAME_TB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C_H
#define _GETDRIVERNAME_TB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRDriverManager__GetDriverName
struct  _GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETDRIVERNAME_TB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C_H
#ifndef _GETDXGIOUTPUTINFO_T17D5E50C764BC81271E6F1F8F1DF12A7505BBE12_H
#define _GETDXGIOUTPUTINFO_T17D5E50C764BC81271E6F1F8F1DF12A7505BBE12_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRExtendedDisplay__GetDXGIOutputInfo
struct  _GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETDXGIOUTPUTINFO_T17D5E50C764BC81271E6F1F8F1DF12A7505BBE12_H
#ifndef _GETEYEOUTPUTVIEWPORT_T55BF5B058AA1FD95364716EC5FE3FB303A15D28C_H
#define _GETEYEOUTPUTVIEWPORT_T55BF5B058AA1FD95364716EC5FE3FB303A15D28C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRExtendedDisplay__GetEyeOutputViewport
struct  _GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETEYEOUTPUTVIEWPORT_T55BF5B058AA1FD95364716EC5FE3FB303A15D28C_H
#ifndef _GETWINDOWBOUNDS_TC929FC67AF48057992CD66E7A03197B87DF3D620_H
#define _GETWINDOWBOUNDS_TC929FC67AF48057992CD66E7A03197B87DF3D620_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRExtendedDisplay__GetWindowBounds
struct  _GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETWINDOWBOUNDS_TC929FC67AF48057992CD66E7A03197B87DF3D620_H
#ifndef _CREATENOTIFICATION_T2E2976923857D9220C863F8EBF211534AF74A9F7_H
#define _CREATENOTIFICATION_T2E2976923857D9220C863F8EBF211534AF74A9F7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRNotifications__CreateNotification
struct  _CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _CREATENOTIFICATION_T2E2976923857D9220C863F8EBF211534AF74A9F7_H
#ifndef _REMOVENOTIFICATION_T5CAC1666978B4651C0865DEA252826AA93D7226E_H
#define _REMOVENOTIFICATION_T5CAC1666978B4651C0865DEA252826AA93D7226E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRNotifications__RemoveNotification
struct  _RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _REMOVENOTIFICATION_T5CAC1666978B4651C0865DEA252826AA93D7226E_H
#ifndef _CLEAROVERLAYTEXTURE_TB40DB95E62536EF511BA64254025880643A9A10E_H
#define _CLEAROVERLAYTEXTURE_TB40DB95E62536EF511BA64254025880643A9A10E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ClearOverlayTexture
struct  _ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _CLEAROVERLAYTEXTURE_TB40DB95E62536EF511BA64254025880643A9A10E_H
#ifndef _CLOSEMESSAGEOVERLAY_TD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9_H
#define _CLOSEMESSAGEOVERLAY_TD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__CloseMessageOverlay
struct  _CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _CLOSEMESSAGEOVERLAY_TD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9_H
#ifndef _COMPUTEOVERLAYINTERSECTION_T5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2_H
#define _COMPUTEOVERLAYINTERSECTION_T5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ComputeOverlayIntersection
struct  _ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _COMPUTEOVERLAYINTERSECTION_T5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2_H
#ifndef _CREATEDASHBOARDOVERLAY_T63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B_H
#define _CREATEDASHBOARDOVERLAY_T63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__CreateDashboardOverlay
struct  _CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _CREATEDASHBOARDOVERLAY_T63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B_H
#ifndef _CREATEOVERLAY_TC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9_H
#define _CREATEOVERLAY_TC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__CreateOverlay
struct  _CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _CREATEOVERLAY_TC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9_H
#ifndef _DESTROYOVERLAY_T0F997083A67539344F3D1E87C528587C9F62D313_H
#define _DESTROYOVERLAY_T0F997083A67539344F3D1E87C528587C9F62D313_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__DestroyOverlay
struct  _DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _DESTROYOVERLAY_T0F997083A67539344F3D1E87C528587C9F62D313_H
#ifndef _FINDOVERLAY_TB27BCDFE69D28B2D464774768ED8FC55B8A1120B_H
#define _FINDOVERLAY_TB27BCDFE69D28B2D464774768ED8FC55B8A1120B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__FindOverlay
struct  _FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _FINDOVERLAY_TB27BCDFE69D28B2D464774768ED8FC55B8A1120B_H
#ifndef _GETDASHBOARDOVERLAYSCENEPROCESS_T7BFAB8CBA9C199B08C19A89338F47D651D04C7D6_H
#define _GETDASHBOARDOVERLAYSCENEPROCESS_T7BFAB8CBA9C199B08C19A89338F47D651D04C7D6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess
struct  _GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETDASHBOARDOVERLAYSCENEPROCESS_T7BFAB8CBA9C199B08C19A89338F47D651D04C7D6_H
#ifndef _GETGAMEPADFOCUSOVERLAY_T08EFA6EED1891E1294913E6F6B2F0D1D644B190F_H
#define _GETGAMEPADFOCUSOVERLAY_T08EFA6EED1891E1294913E6F6B2F0D1D644B190F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetGamepadFocusOverlay
struct  _GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETGAMEPADFOCUSOVERLAY_T08EFA6EED1891E1294913E6F6B2F0D1D644B190F_H
#ifndef _GETHIGHQUALITYOVERLAY_T400F16801859083C584E0230D55F7233852185BF_H
#define _GETHIGHQUALITYOVERLAY_T400F16801859083C584E0230D55F7233852185BF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetHighQualityOverlay
struct  _GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETHIGHQUALITYOVERLAY_T400F16801859083C584E0230D55F7233852185BF_H
#ifndef _GETKEYBOARDTEXT_T16A19F9DE28F515312D2AE5AE5C572ABE875DAC7_H
#define _GETKEYBOARDTEXT_T16A19F9DE28F515312D2AE5AE5C572ABE875DAC7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetKeyboardText
struct  _GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETKEYBOARDTEXT_T16A19F9DE28F515312D2AE5AE5C572ABE875DAC7_H
#ifndef _GETOVERLAYALPHA_T520C35440BEC20280C86016E7CEF3AEFD08EDC99_H
#define _GETOVERLAYALPHA_T520C35440BEC20280C86016E7CEF3AEFD08EDC99_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayAlpha
struct  _GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYALPHA_T520C35440BEC20280C86016E7CEF3AEFD08EDC99_H
#ifndef _GETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T78689B1967F26521E3780521F4B2EF9B82AA6454_H
#define _GETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T78689B1967F26521E3780521F4B2EF9B82AA6454_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters
struct  _GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T78689B1967F26521E3780521F4B2EF9B82AA6454_H
#ifndef _GETOVERLAYCOLOR_T9B5297CCB535B490687DDD727D99B19B38424A38_H
#define _GETOVERLAYCOLOR_T9B5297CCB535B490687DDD727D99B19B38424A38_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayColor
struct  _GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYCOLOR_T9B5297CCB535B490687DDD727D99B19B38424A38_H
#ifndef _GETOVERLAYDUALANALOGTRANSFORM_T9A20BDDA4749E039E2C728C6FBAE2F8252239EE3_H
#define _GETOVERLAYDUALANALOGTRANSFORM_T9A20BDDA4749E039E2C728C6FBAE2F8252239EE3_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayDualAnalogTransform
struct  _GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYDUALANALOGTRANSFORM_T9A20BDDA4749E039E2C728C6FBAE2F8252239EE3_H
#ifndef _GETOVERLAYERRORNAMEFROMENUM_TC864F183D25F63B3BFB720E96E163E9A653C2B51_H
#define _GETOVERLAYERRORNAMEFROMENUM_TC864F183D25F63B3BFB720E96E163E9A653C2B51_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum
struct  _GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYERRORNAMEFROMENUM_TC864F183D25F63B3BFB720E96E163E9A653C2B51_H
#ifndef _GETOVERLAYFLAG_T0F95CECAC1844F38B1AD8E77208BA4E682D53D5B_H
#define _GETOVERLAYFLAG_T0F95CECAC1844F38B1AD8E77208BA4E682D53D5B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayFlag
struct  _GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYFLAG_T0F95CECAC1844F38B1AD8E77208BA4E682D53D5B_H
#ifndef _GETOVERLAYFLAGS_TA8CE7B7AD1D093943B2845C95662447F7F6C0BA8_H
#define _GETOVERLAYFLAGS_TA8CE7B7AD1D093943B2845C95662447F7F6C0BA8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayFlags
struct  _GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYFLAGS_TA8CE7B7AD1D093943B2845C95662447F7F6C0BA8_H
#ifndef _GETOVERLAYIMAGEDATA_T19E9C3D9BBB359C88D42CE528CFC7FCE6B772927_H
#define _GETOVERLAYIMAGEDATA_T19E9C3D9BBB359C88D42CE528CFC7FCE6B772927_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayImageData
struct  _GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYIMAGEDATA_T19E9C3D9BBB359C88D42CE528CFC7FCE6B772927_H
#ifndef _GETOVERLAYINPUTMETHOD_T1A02A08A698CC51A98AF82D1885CC3339EBCCB4E_H
#define _GETOVERLAYINPUTMETHOD_T1A02A08A698CC51A98AF82D1885CC3339EBCCB4E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayInputMethod
struct  _GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYINPUTMETHOD_T1A02A08A698CC51A98AF82D1885CC3339EBCCB4E_H
#ifndef _GETOVERLAYKEY_T03528EF4F02721CB22969FBDCC4EAF33F825AC42_H
#define _GETOVERLAYKEY_T03528EF4F02721CB22969FBDCC4EAF33F825AC42_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayKey
struct  _GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYKEY_T03528EF4F02721CB22969FBDCC4EAF33F825AC42_H
#ifndef _GETOVERLAYMOUSESCALE_TD53894B2F6D494097D96E4A0ECE6F706CEF87521_H
#define _GETOVERLAYMOUSESCALE_TD53894B2F6D494097D96E4A0ECE6F706CEF87521_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayMouseScale
struct  _GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYMOUSESCALE_TD53894B2F6D494097D96E4A0ECE6F706CEF87521_H
#ifndef _GETOVERLAYNAME_TC00F8BD9A139D194F18D872A4BAB1EA3473F4C98_H
#define _GETOVERLAYNAME_TC00F8BD9A139D194F18D872A4BAB1EA3473F4C98_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayName
struct  _GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYNAME_TC00F8BD9A139D194F18D872A4BAB1EA3473F4C98_H
#ifndef _GETOVERLAYRENDERMODEL_TC084B2898264DA38E65AC5FE00FF7E5875A62F09_H
#define _GETOVERLAYRENDERMODEL_TC084B2898264DA38E65AC5FE00FF7E5875A62F09_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayRenderModel
struct  _GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYRENDERMODEL_TC084B2898264DA38E65AC5FE00FF7E5875A62F09_H
#ifndef _GETOVERLAYRENDERINGPID_TCA85AE4092DB503324E1B890777B252774FF90A7_H
#define _GETOVERLAYRENDERINGPID_TCA85AE4092DB503324E1B890777B252774FF90A7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayRenderingPid
struct  _GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYRENDERINGPID_TCA85AE4092DB503324E1B890777B252774FF90A7_H
#ifndef _GETOVERLAYSORTORDER_T731C3645CFC52EC4637F953F486FE82D5C1EB408_H
#define _GETOVERLAYSORTORDER_T731C3645CFC52EC4637F953F486FE82D5C1EB408_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlaySortOrder
struct  _GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYSORTORDER_T731C3645CFC52EC4637F953F486FE82D5C1EB408_H
#ifndef _GETOVERLAYTEXELASPECT_T3DC4606D3290DF06BB380623CAA587F9CA62FCD7_H
#define _GETOVERLAYTEXELASPECT_T3DC4606D3290DF06BB380623CAA587F9CA62FCD7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTexelAspect
struct  _GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTEXELASPECT_T3DC4606D3290DF06BB380623CAA587F9CA62FCD7_H
#ifndef _GETOVERLAYTEXTURE_T4C9EC37444B69CC6D5EAD2142195809961468C73_H
#define _GETOVERLAYTEXTURE_T4C9EC37444B69CC6D5EAD2142195809961468C73_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTexture
struct  _GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTEXTURE_T4C9EC37444B69CC6D5EAD2142195809961468C73_H
#ifndef _GETOVERLAYTEXTUREBOUNDS_T0A69532917D9D15C91D02CD4F76ED855A883E467_H
#define _GETOVERLAYTEXTUREBOUNDS_T0A69532917D9D15C91D02CD4F76ED855A883E467_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTextureBounds
struct  _GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTEXTUREBOUNDS_T0A69532917D9D15C91D02CD4F76ED855A883E467_H
#ifndef _GETOVERLAYTEXTURECOLORSPACE_TED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D_H
#define _GETOVERLAYTEXTURECOLORSPACE_TED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTextureColorSpace
struct  _GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTEXTURECOLORSPACE_TED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D_H
#ifndef _GETOVERLAYTEXTURESIZE_TD4EB7BDC6ABF6B8801A66097F198C898A5E23A62_H
#define _GETOVERLAYTEXTURESIZE_TD4EB7BDC6ABF6B8801A66097F198C898A5E23A62_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTextureSize
struct  _GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTEXTURESIZE_TD4EB7BDC6ABF6B8801A66097F198C898A5E23A62_H
#ifndef _GETOVERLAYTRANSFORMABSOLUTE_T7A32B095880F7DCB84658F98E12DB37EA8DE7BF0_H
#define _GETOVERLAYTRANSFORMABSOLUTE_T7A32B095880F7DCB84658F98E12DB37EA8DE7BF0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTransformAbsolute
struct  _GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTRANSFORMABSOLUTE_T7A32B095880F7DCB84658F98E12DB37EA8DE7BF0_H
#ifndef _GETOVERLAYTRANSFORMOVERLAYRELATIVE_T7835DD76B92A937910886DA1C0A3540832010D38_H
#define _GETOVERLAYTRANSFORMOVERLAYRELATIVE_T7835DD76B92A937910886DA1C0A3540832010D38_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative
struct  _GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTRANSFORMOVERLAYRELATIVE_T7835DD76B92A937910886DA1C0A3540832010D38_H
#ifndef _GETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF75740881CC4A3F81A425A65A28F88455BFFF2CF_H
#define _GETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF75740881CC4A3F81A425A65A28F88455BFFF2CF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent
struct  _GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF75740881CC4A3F81A425A65A28F88455BFFF2CF_H
#ifndef _GETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_TCE832CC6BC598672C2288773A13B322D98E64C4B_H
#define _GETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_TCE832CC6BC598672C2288773A13B322D98E64C4B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative
struct  _GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_TCE832CC6BC598672C2288773A13B322D98E64C4B_H
#ifndef _GETOVERLAYTRANSFORMTYPE_TB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163_H
#define _GETOVERLAYTRANSFORMTYPE_TB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayTransformType
struct  _GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYTRANSFORMTYPE_TB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163_H
#ifndef _GETOVERLAYWIDTHINMETERS_TA8A02EE659E00E4CA046AC303678172BC73D6E36_H
#define _GETOVERLAYWIDTHINMETERS_TA8A02EE659E00E4CA046AC303678172BC73D6E36_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetOverlayWidthInMeters
struct  _GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOVERLAYWIDTHINMETERS_TA8A02EE659E00E4CA046AC303678172BC73D6E36_H
#ifndef _GETPRIMARYDASHBOARDDEVICE_T3051705DDFF3AD2197416E5C4565183F5742517C_H
#define _GETPRIMARYDASHBOARDDEVICE_T3051705DDFF3AD2197416E5C4565183F5742517C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetPrimaryDashboardDevice
struct  _GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETPRIMARYDASHBOARDDEVICE_T3051705DDFF3AD2197416E5C4565183F5742517C_H
#ifndef _GETTRANSFORMFOROVERLAYCOORDINATES_T8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_H
#define _GETTRANSFORMFOROVERLAYCOORDINATES_T8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetTransformForOverlayCoordinates
struct  _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETTRANSFORMFOROVERLAYCOORDINATES_T8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_H
#ifndef _HIDEKEYBOARD_T6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_H
#define _HIDEKEYBOARD_T6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__HideKeyboard
struct  _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _HIDEKEYBOARD_T6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_H
#ifndef _HIDEOVERLAY_T8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_H
#define _HIDEOVERLAY_T8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__HideOverlay
struct  _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _HIDEOVERLAY_T8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_H
#ifndef _ISACTIVEDASHBOARDOVERLAY_TC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_H
#define _ISACTIVEDASHBOARDOVERLAY_TC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__IsActiveDashboardOverlay
struct  _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISACTIVEDASHBOARDOVERLAY_TC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_H
#ifndef _ISDASHBOARDVISIBLE_T741766EC3150DD69074A428CD81C8CDBCAE44E7C_H
#define _ISDASHBOARDVISIBLE_T741766EC3150DD69074A428CD81C8CDBCAE44E7C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__IsDashboardVisible
struct  _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISDASHBOARDVISIBLE_T741766EC3150DD69074A428CD81C8CDBCAE44E7C_H
#ifndef _ISHOVERTARGETOVERLAY_TD55266AC207D082B50A7D838152C4C3EC1775692_H
#define _ISHOVERTARGETOVERLAY_TD55266AC207D082B50A7D838152C4C3EC1775692_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__IsHoverTargetOverlay
struct  _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISHOVERTARGETOVERLAY_TD55266AC207D082B50A7D838152C4C3EC1775692_H
#ifndef _ISOVERLAYVISIBLE_T6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_H
#define _ISOVERLAYVISIBLE_T6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__IsOverlayVisible
struct  _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISOVERLAYVISIBLE_T6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_H
#ifndef _MOVEGAMEPADFOCUSTONEIGHBOR_TE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_H
#define _MOVEGAMEPADFOCUSTONEIGHBOR_TE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__MoveGamepadFocusToNeighbor
struct  _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _MOVEGAMEPADFOCUSTONEIGHBOR_TE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_H
#ifndef _RELEASENATIVEOVERLAYHANDLE_T0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_H
#define _RELEASENATIVEOVERLAYHANDLE_T0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ReleaseNativeOverlayHandle
struct  _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _RELEASENATIVEOVERLAYHANDLE_T0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_H
#ifndef _SETDASHBOARDOVERLAYSCENEPROCESS_T73617E1AD33F7DB7867655E9B856EBF17D4D079C_H
#define _SETDASHBOARDOVERLAYSCENEPROCESS_T73617E1AD33F7DB7867655E9B856EBF17D4D079C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess
struct  _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETDASHBOARDOVERLAYSCENEPROCESS_T73617E1AD33F7DB7867655E9B856EBF17D4D079C_H
#ifndef _SETGAMEPADFOCUSOVERLAY_T862FF713656DB21533A29376D2E8B1C6DBB2D377_H
#define _SETGAMEPADFOCUSOVERLAY_T862FF713656DB21533A29376D2E8B1C6DBB2D377_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetGamepadFocusOverlay
struct  _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETGAMEPADFOCUSOVERLAY_T862FF713656DB21533A29376D2E8B1C6DBB2D377_H
#ifndef _SETHIGHQUALITYOVERLAY_TCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_H
#define _SETHIGHQUALITYOVERLAY_TCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetHighQualityOverlay
struct  _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETHIGHQUALITYOVERLAY_TCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_H
#ifndef _SETKEYBOARDPOSITIONFOROVERLAY_TE8F751444C6D3D63D22133C7B1098D5B0F785BEF_H
#define _SETKEYBOARDPOSITIONFOROVERLAY_TE8F751444C6D3D63D22133C7B1098D5B0F785BEF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetKeyboardPositionForOverlay
struct  _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETKEYBOARDPOSITIONFOROVERLAY_TE8F751444C6D3D63D22133C7B1098D5B0F785BEF_H
#ifndef _SETKEYBOARDTRANSFORMABSOLUTE_T68E6F1E376F670491B768122B8E3BA90E41910AA_H
#define _SETKEYBOARDTRANSFORMABSOLUTE_T68E6F1E376F670491B768122B8E3BA90E41910AA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetKeyboardTransformAbsolute
struct  _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETKEYBOARDTRANSFORMABSOLUTE_T68E6F1E376F670491B768122B8E3BA90E41910AA_H
#ifndef _SETOVERLAYALPHA_T485092656D099136AF21444C52E3779992BE64D2_H
#define _SETOVERLAYALPHA_T485092656D099136AF21444C52E3779992BE64D2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayAlpha
struct  _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYALPHA_T485092656D099136AF21444C52E3779992BE64D2_H
#ifndef _SETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T664208DE44E4EFDC426F4F4ECB21B15E113C3963_H
#define _SETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T664208DE44E4EFDC426F4F4ECB21B15E113C3963_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters
struct  _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T664208DE44E4EFDC426F4F4ECB21B15E113C3963_H
#ifndef _SETOVERLAYCOLOR_T90C788015A90396E9666A35A3981194651C06063_H
#define _SETOVERLAYCOLOR_T90C788015A90396E9666A35A3981194651C06063_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayColor
struct  _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYCOLOR_T90C788015A90396E9666A35A3981194651C06063_H
#ifndef _SETOVERLAYDUALANALOGTRANSFORM_TA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_H
#define _SETOVERLAYDUALANALOGTRANSFORM_TA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayDualAnalogTransform
struct  _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYDUALANALOGTRANSFORM_TA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_H
#ifndef _SETOVERLAYFLAG_T8340752FA12C60B8B3D81026326144433AB9F43E_H
#define _SETOVERLAYFLAG_T8340752FA12C60B8B3D81026326144433AB9F43E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayFlag
struct  _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYFLAG_T8340752FA12C60B8B3D81026326144433AB9F43E_H
#ifndef _SETOVERLAYFROMFILE_TA470386180ABEA823FD793D89CA113245128625F_H
#define _SETOVERLAYFROMFILE_TA470386180ABEA823FD793D89CA113245128625F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayFromFile
struct  _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYFROMFILE_TA470386180ABEA823FD793D89CA113245128625F_H
#ifndef _SETOVERLAYINPUTMETHOD_T03517D167879BABD5CBE89B900B0E5C32CEDDA12_H
#define _SETOVERLAYINPUTMETHOD_T03517D167879BABD5CBE89B900B0E5C32CEDDA12_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayInputMethod
struct  _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYINPUTMETHOD_T03517D167879BABD5CBE89B900B0E5C32CEDDA12_H
#ifndef _SETOVERLAYINTERSECTIONMASK_T0D69FC3AE16874D52B32C3E86924F8969457CA04_H
#define _SETOVERLAYINTERSECTIONMASK_T0D69FC3AE16874D52B32C3E86924F8969457CA04_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayIntersectionMask
struct  _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYINTERSECTIONMASK_T0D69FC3AE16874D52B32C3E86924F8969457CA04_H
#ifndef _SETOVERLAYMOUSESCALE_TF34E6D516BC82CA6EB05A343FE289C8681F2AE65_H
#define _SETOVERLAYMOUSESCALE_TF34E6D516BC82CA6EB05A343FE289C8681F2AE65_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayMouseScale
struct  _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYMOUSESCALE_TF34E6D516BC82CA6EB05A343FE289C8681F2AE65_H
#ifndef _SETOVERLAYNAME_TAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_H
#define _SETOVERLAYNAME_TAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayName
struct  _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYNAME_TAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_H
#ifndef _SETOVERLAYNEIGHBOR_T7F066F4586C0872919A9741765D453AFC507732D_H
#define _SETOVERLAYNEIGHBOR_T7F066F4586C0872919A9741765D453AFC507732D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayNeighbor
struct  _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYNEIGHBOR_T7F066F4586C0872919A9741765D453AFC507732D_H
#ifndef _SETOVERLAYRAW_TD973F0869128EFB0A62790AABF40382B2024A2D9_H
#define _SETOVERLAYRAW_TD973F0869128EFB0A62790AABF40382B2024A2D9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayRaw
struct  _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYRAW_TD973F0869128EFB0A62790AABF40382B2024A2D9_H
#ifndef _SETOVERLAYRENDERMODEL_TAA25B4B28E325453AF64C5A6E4321AB18A4AE050_H
#define _SETOVERLAYRENDERMODEL_TAA25B4B28E325453AF64C5A6E4321AB18A4AE050_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayRenderModel
struct  _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYRENDERMODEL_TAA25B4B28E325453AF64C5A6E4321AB18A4AE050_H
#ifndef _SETOVERLAYRENDERINGPID_T99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_H
#define _SETOVERLAYRENDERINGPID_T99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayRenderingPid
struct  _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYRENDERINGPID_T99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_H
#ifndef _SETOVERLAYSORTORDER_T8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_H
#define _SETOVERLAYSORTORDER_T8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlaySortOrder
struct  _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYSORTORDER_T8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_H
#ifndef _SETOVERLAYTEXELASPECT_TF826B2248194D16DB5CED1FC87D8901442627F8E_H
#define _SETOVERLAYTEXELASPECT_TF826B2248194D16DB5CED1FC87D8901442627F8E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTexelAspect
struct  _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTEXELASPECT_TF826B2248194D16DB5CED1FC87D8901442627F8E_H
#ifndef _SETOVERLAYTEXTURE_T86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_H
#define _SETOVERLAYTEXTURE_T86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTexture
struct  _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTEXTURE_T86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_H
#ifndef _SETOVERLAYTEXTUREBOUNDS_T16950882A226DFCCAA95E54A7A5254DE1EC13C0E_H
#define _SETOVERLAYTEXTUREBOUNDS_T16950882A226DFCCAA95E54A7A5254DE1EC13C0E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTextureBounds
struct  _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTEXTUREBOUNDS_T16950882A226DFCCAA95E54A7A5254DE1EC13C0E_H
#ifndef _SETOVERLAYTEXTURECOLORSPACE_T93BBC2DC0669C640680D180010362DA29418A61F_H
#define _SETOVERLAYTEXTURECOLORSPACE_T93BBC2DC0669C640680D180010362DA29418A61F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTextureColorSpace
struct  _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTEXTURECOLORSPACE_T93BBC2DC0669C640680D180010362DA29418A61F_H
#ifndef _SETOVERLAYTRANSFORMABSOLUTE_T31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_H
#define _SETOVERLAYTRANSFORMABSOLUTE_T31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTransformAbsolute
struct  _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTRANSFORMABSOLUTE_T31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_H
#ifndef _SETOVERLAYTRANSFORMOVERLAYRELATIVE_TBE2D34EC83522675BF338A661C8BF8F2AD0B1171_H
#define _SETOVERLAYTRANSFORMOVERLAYRELATIVE_TBE2D34EC83522675BF338A661C8BF8F2AD0B1171_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative
struct  _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTRANSFORMOVERLAYRELATIVE_TBE2D34EC83522675BF338A661C8BF8F2AD0B1171_H
#ifndef _SETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF9FD4F36D296D043ABC5DE202269E6EF46D305B8_H
#define _SETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF9FD4F36D296D043ABC5DE202269E6EF46D305B8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent
struct  _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF9FD4F36D296D043ABC5DE202269E6EF46D305B8_H
#ifndef _SETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_T113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_H
#define _SETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_T113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative
struct  _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_T113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_H
#ifndef _SETOVERLAYWIDTHINMETERS_T590B196060154801B6899FCCABFC5E2E7891E184_H
#define _SETOVERLAYWIDTHINMETERS_T590B196060154801B6899FCCABFC5E2E7891E184_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayWidthInMeters
struct  _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYWIDTHINMETERS_T590B196060154801B6899FCCABFC5E2E7891E184_H
#ifndef _SHOWDASHBOARD_TBEED079CB61043D20B473B16CC4A983D38180911_H
#define _SHOWDASHBOARD_TBEED079CB61043D20B473B16CC4A983D38180911_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowDashboard
struct  _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWDASHBOARD_TBEED079CB61043D20B473B16CC4A983D38180911_H
#ifndef _SHOWKEYBOARD_T98D2EB25B0D614804A982C0620341AD5B9ED17A1_H
#define _SHOWKEYBOARD_T98D2EB25B0D614804A982C0620341AD5B9ED17A1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowKeyboard
struct  _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWKEYBOARD_T98D2EB25B0D614804A982C0620341AD5B9ED17A1_H
#ifndef _SHOWKEYBOARDFOROVERLAY_TCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_H
#define _SHOWKEYBOARDFOROVERLAY_TCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowKeyboardForOverlay
struct  _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWKEYBOARDFOROVERLAY_TCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_H
#ifndef _SHOWMESSAGEOVERLAY_T897BD5AA22E792AE7F7BB67EE7932C772034F94F_H
#define _SHOWMESSAGEOVERLAY_T897BD5AA22E792AE7F7BB67EE7932C772034F94F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowMessageOverlay
struct  _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWMESSAGEOVERLAY_T897BD5AA22E792AE7F7BB67EE7932C772034F94F_H
#ifndef _SHOWOVERLAY_TC32FAC5415BB980F11111857B4CC787DB5F5AE61_H
#define _SHOWOVERLAY_TC32FAC5415BB980F11111857B4CC787DB5F5AE61_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowOverlay
struct  _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWOVERLAY_TC32FAC5415BB980F11111857B4CC787DB5F5AE61_H
#ifndef VREVENT_DATA_T_T710EFDC2A0B6CE3CA661E952D5052E6F85E852AC_H
#define VREVENT_DATA_T_T710EFDC2A0B6CE3CA661E952D5052E6F85E852AC_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Data_t
struct  VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Reserved_t Valve.VR.VREvent_Data_t::reserved
			VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F  ___reserved_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F  ___reserved_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Controller_t Valve.VR.VREvent_Data_t::controller
			VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8  ___controller_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8  ___controller_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Mouse_t Valve.VR.VREvent_Data_t::mouse
			VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267  ___mouse_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267  ___mouse_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Scroll_t Valve.VR.VREvent_Data_t::scroll
			VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5  ___scroll_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5  ___scroll_3_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Process_t Valve.VR.VREvent_Data_t::process
			VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10  ___process_4;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10  ___process_4_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Notification_t Valve.VR.VREvent_Data_t::notification
			VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9  ___notification_5;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9  ___notification_5_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Overlay_t Valve.VR.VREvent_Data_t::overlay
			VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900  ___overlay_6;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900  ___overlay_6_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Status_t Valve.VR.VREvent_Data_t::status
			VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392  ___status_7;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392  ___status_7_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Ipd_t Valve.VR.VREvent_Data_t::ipd
			VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22  ___ipd_8;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22  ___ipd_8_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Chaperone_t Valve.VR.VREvent_Data_t::chaperone
			VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A  ___chaperone_9;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A  ___chaperone_9_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_PerformanceTest_t Valve.VR.VREvent_Data_t::performanceTest
			VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F  ___performanceTest_10;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F  ___performanceTest_10_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_TouchPadMove_t Valve.VR.VREvent_Data_t::touchPadMove
			VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18  ___touchPadMove_11;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18  ___touchPadMove_11_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SeatedZeroPoseReset_t Valve.VR.VREvent_Data_t::seatedZeroPoseReset
			VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4  ___seatedZeroPoseReset_12;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4  ___seatedZeroPoseReset_12_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Screenshot_t Valve.VR.VREvent_Data_t::screenshot
			VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11  ___screenshot_13;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11  ___screenshot_13_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ScreenshotProgress_t Valve.VR.VREvent_Data_t::screenshotProgress
			VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D  ___screenshotProgress_14;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D  ___screenshotProgress_14_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ApplicationLaunch_t Valve.VR.VREvent_Data_t::applicationLaunch
			VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8  ___applicationLaunch_15;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8  ___applicationLaunch_15_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_EditingCameraSurface_t Valve.VR.VREvent_Data_t::cameraSurface
			VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6  ___cameraSurface_16;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6  ___cameraSurface_16_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_MessageOverlay_t Valve.VR.VREvent_Data_t::messageOverlay
			VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF  ___messageOverlay_17;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF  ___messageOverlay_17_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Property_t Valve.VR.VREvent_Data_t::property
			VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD  ___property_18;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD  ___property_18_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_DualAnalog_t Valve.VR.VREvent_Data_t::dualAnalog
			VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2  ___dualAnalog_19;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2  ___dualAnalog_19_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HapticVibration_t Valve.VR.VREvent_Data_t::hapticVibration
			VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF  ___hapticVibration_20;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF  ___hapticVibration_20_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Keyboard_t Valve.VR.VREvent_Data_t::keyboard
			VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE  ___keyboard_21;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE  ___keyboard_21_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_reserved_0() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___reserved_0)); }
	inline VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F  get_reserved_0() const { return ___reserved_0; }
	inline VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F * get_address_of_reserved_0() { return &___reserved_0; }
	inline void set_reserved_0(VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F  value)
	{
		___reserved_0 = value;
	}

	inline static int32_t get_offset_of_controller_1() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___controller_1)); }
	inline VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8  get_controller_1() const { return ___controller_1; }
	inline VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8 * get_address_of_controller_1() { return &___controller_1; }
	inline void set_controller_1(VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8  value)
	{
		___controller_1 = value;
	}

	inline static int32_t get_offset_of_mouse_2() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___mouse_2)); }
	inline VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267  get_mouse_2() const { return ___mouse_2; }
	inline VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267 * get_address_of_mouse_2() { return &___mouse_2; }
	inline void set_mouse_2(VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267  value)
	{
		___mouse_2 = value;
	}

	inline static int32_t get_offset_of_scroll_3() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___scroll_3)); }
	inline VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5  get_scroll_3() const { return ___scroll_3; }
	inline VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5 * get_address_of_scroll_3() { return &___scroll_3; }
	inline void set_scroll_3(VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5  value)
	{
		___scroll_3 = value;
	}

	inline static int32_t get_offset_of_process_4() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___process_4)); }
	inline VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10  get_process_4() const { return ___process_4; }
	inline VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10 * get_address_of_process_4() { return &___process_4; }
	inline void set_process_4(VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10  value)
	{
		___process_4 = value;
	}

	inline static int32_t get_offset_of_notification_5() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___notification_5)); }
	inline VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9  get_notification_5() const { return ___notification_5; }
	inline VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9 * get_address_of_notification_5() { return &___notification_5; }
	inline void set_notification_5(VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9  value)
	{
		___notification_5 = value;
	}

	inline static int32_t get_offset_of_overlay_6() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___overlay_6)); }
	inline VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900  get_overlay_6() const { return ___overlay_6; }
	inline VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900 * get_address_of_overlay_6() { return &___overlay_6; }
	inline void set_overlay_6(VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900  value)
	{
		___overlay_6 = value;
	}

	inline static int32_t get_offset_of_status_7() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___status_7)); }
	inline VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392  get_status_7() const { return ___status_7; }
	inline VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392 * get_address_of_status_7() { return &___status_7; }
	inline void set_status_7(VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392  value)
	{
		___status_7 = value;
	}

	inline static int32_t get_offset_of_ipd_8() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___ipd_8)); }
	inline VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22  get_ipd_8() const { return ___ipd_8; }
	inline VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22 * get_address_of_ipd_8() { return &___ipd_8; }
	inline void set_ipd_8(VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22  value)
	{
		___ipd_8 = value;
	}

	inline static int32_t get_offset_of_chaperone_9() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___chaperone_9)); }
	inline VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A  get_chaperone_9() const { return ___chaperone_9; }
	inline VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A * get_address_of_chaperone_9() { return &___chaperone_9; }
	inline void set_chaperone_9(VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A  value)
	{
		___chaperone_9 = value;
	}

	inline static int32_t get_offset_of_performanceTest_10() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___performanceTest_10)); }
	inline VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F  get_performanceTest_10() const { return ___performanceTest_10; }
	inline VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F * get_address_of_performanceTest_10() { return &___performanceTest_10; }
	inline void set_performanceTest_10(VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F  value)
	{
		___performanceTest_10 = value;
	}

	inline static int32_t get_offset_of_touchPadMove_11() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___touchPadMove_11)); }
	inline VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18  get_touchPadMove_11() const { return ___touchPadMove_11; }
	inline VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18 * get_address_of_touchPadMove_11() { return &___touchPadMove_11; }
	inline void set_touchPadMove_11(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18  value)
	{
		___touchPadMove_11 = value;
	}

	inline static int32_t get_offset_of_seatedZeroPoseReset_12() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___seatedZeroPoseReset_12)); }
	inline VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4  get_seatedZeroPoseReset_12() const { return ___seatedZeroPoseReset_12; }
	inline VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4 * get_address_of_seatedZeroPoseReset_12() { return &___seatedZeroPoseReset_12; }
	inline void set_seatedZeroPoseReset_12(VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4  value)
	{
		___seatedZeroPoseReset_12 = value;
	}

	inline static int32_t get_offset_of_screenshot_13() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___screenshot_13)); }
	inline VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11  get_screenshot_13() const { return ___screenshot_13; }
	inline VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11 * get_address_of_screenshot_13() { return &___screenshot_13; }
	inline void set_screenshot_13(VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11  value)
	{
		___screenshot_13 = value;
	}

	inline static int32_t get_offset_of_screenshotProgress_14() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___screenshotProgress_14)); }
	inline VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D  get_screenshotProgress_14() const { return ___screenshotProgress_14; }
	inline VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D * get_address_of_screenshotProgress_14() { return &___screenshotProgress_14; }
	inline void set_screenshotProgress_14(VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D  value)
	{
		___screenshotProgress_14 = value;
	}

	inline static int32_t get_offset_of_applicationLaunch_15() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___applicationLaunch_15)); }
	inline VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8  get_applicationLaunch_15() const { return ___applicationLaunch_15; }
	inline VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8 * get_address_of_applicationLaunch_15() { return &___applicationLaunch_15; }
	inline void set_applicationLaunch_15(VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8  value)
	{
		___applicationLaunch_15 = value;
	}

	inline static int32_t get_offset_of_cameraSurface_16() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___cameraSurface_16)); }
	inline VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6  get_cameraSurface_16() const { return ___cameraSurface_16; }
	inline VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6 * get_address_of_cameraSurface_16() { return &___cameraSurface_16; }
	inline void set_cameraSurface_16(VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6  value)
	{
		___cameraSurface_16 = value;
	}

	inline static int32_t get_offset_of_messageOverlay_17() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___messageOverlay_17)); }
	inline VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF  get_messageOverlay_17() const { return ___messageOverlay_17; }
	inline VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF * get_address_of_messageOverlay_17() { return &___messageOverlay_17; }
	inline void set_messageOverlay_17(VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF  value)
	{
		___messageOverlay_17 = value;
	}

	inline static int32_t get_offset_of_property_18() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___property_18)); }
	inline VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD  get_property_18() const { return ___property_18; }
	inline VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD * get_address_of_property_18() { return &___property_18; }
	inline void set_property_18(VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD  value)
	{
		___property_18 = value;
	}

	inline static int32_t get_offset_of_dualAnalog_19() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___dualAnalog_19)); }
	inline VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2  get_dualAnalog_19() const { return ___dualAnalog_19; }
	inline VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2 * get_address_of_dualAnalog_19() { return &___dualAnalog_19; }
	inline void set_dualAnalog_19(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2  value)
	{
		___dualAnalog_19 = value;
	}

	inline static int32_t get_offset_of_hapticVibration_20() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___hapticVibration_20)); }
	inline VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF  get_hapticVibration_20() const { return ___hapticVibration_20; }
	inline VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF * get_address_of_hapticVibration_20() { return &___hapticVibration_20; }
	inline void set_hapticVibration_20(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF  value)
	{
		___hapticVibration_20 = value;
	}

	inline static int32_t get_offset_of_keyboard_21() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___keyboard_21)); }
	inline VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE  get_keyboard_21() const { return ___keyboard_21; }
	inline VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE * get_address_of_keyboard_21() { return &___keyboard_21; }
	inline void set_keyboard_21(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE  value)
	{
		___keyboard_21 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_DATA_T_T710EFDC2A0B6CE3CA661E952D5052E6F85E852AC_H
#ifndef _GETFRAMETIMING_TF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3_H
#define _GETFRAMETIMING_TF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetFrameTiming
struct  _GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETFRAMETIMING_TF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3_H
#ifndef _GETFRAMETIMINGS_TE92F3C78FA118B60DF49538ABA68EFB7FE278921_H
#define _GETFRAMETIMINGS_TE92F3C78FA118B60DF49538ABA68EFB7FE278921_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRCompositor__GetFrameTimings
struct  _GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETFRAMETIMINGS_TE92F3C78FA118B60DF49538ABA68EFB7FE278921_H
#ifndef VREVENT_T_T464E913D25D159DF914A71C00CB0097700E4F63F_H
#define VREVENT_T_T464E913D25D159DF914A71C00CB0097700E4F63F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_t
struct  VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F 
{
public:
	// System.UInt32 Valve.VR.VREvent_t::eventType
	uint32_t ___eventType_0;
	// System.UInt32 Valve.VR.VREvent_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Single Valve.VR.VREvent_t::eventAgeSeconds
	float ___eventAgeSeconds_2;
	// Valve.VR.VREvent_Data_t Valve.VR.VREvent_t::data
	VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC  ___data_3;

public:
	inline static int32_t get_offset_of_eventType_0() { return static_cast<int32_t>(offsetof(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F, ___eventType_0)); }
	inline uint32_t get_eventType_0() const { return ___eventType_0; }
	inline uint32_t* get_address_of_eventType_0() { return &___eventType_0; }
	inline void set_eventType_0(uint32_t value)
	{
		___eventType_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_eventAgeSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F, ___eventAgeSeconds_2)); }
	inline float get_eventAgeSeconds_2() const { return ___eventAgeSeconds_2; }
	inline float* get_address_of_eventAgeSeconds_2() { return &___eventAgeSeconds_2; }
	inline void set_eventAgeSeconds_2(float value)
	{
		___eventAgeSeconds_2 = value;
	}

	inline static int32_t get_offset_of_data_3() { return static_cast<int32_t>(offsetof(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F, ___data_3)); }
	inline VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC  get_data_3() const { return ___data_3; }
	inline VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC * get_address_of_data_3() { return &___data_3; }
	inline void set_data_3(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC  value)
	{
		___data_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_T_T464E913D25D159DF914A71C00CB0097700E4F63F_H
#ifndef _POLLNEXTOVERLAYEVENT_TE221884826791F6104F82275F46F4CCDA01D6399_H
#define _POLLNEXTOVERLAYEVENT_TE221884826791F6104F82275F46F4CCDA01D6399_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__PollNextOverlayEvent
struct  _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _POLLNEXTOVERLAYEVENT_TE221884826791F6104F82275F46F4CCDA01D6399_H
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) uint8_t m_Items[1];

public:
	inline uint8_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline uint8_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, uint8_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline uint8_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline uint8_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, uint8_t value)
	{
		m_Items[index] = value;
	}
};
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier(m_Items + index, value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier(m_Items + index, value);
	}
};
// Valve.VR.HmdQuad_t[]
struct HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE  m_Items[1];

public:
	inline HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.TrackedDevicePose_t[]
struct TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6  m_Items[1];

public:
	inline TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6  value)
	{
		m_Items[index] = value;
	}
};
// Valve.VR.Texture_t[]
struct Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D  m_Items[1];

public:
	inline Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D  GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D  value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D  GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D  value)
	{
		m_Items[index] = value;
	}
};



#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetWorkingCollisionBoundsTagsInfo_t7F1BD889ADEEFFE699F064129C30D4F49F938273 (_SetWorkingCollisionBoundsTagsInfo_t7F1BD889ADEEFFE699F064129C30D4F49F938273 * __this, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___pTagsBuffer0, uint32_t ___unTagCount1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(uint8_t*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pTagsBuffer0U27 to native representation
	uint8_t* ____pTagsBuffer0_marshaled = NULL;
	if (___pTagsBuffer0 != NULL)
	{
		____pTagsBuffer0_marshaled = reinterpret_cast<uint8_t*>((___pTagsBuffer0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	il2cppPInvokeFunc(____pTagsBuffer0_marshaled, ___unTagCount1);

}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingCollisionBoundsTagsInfo::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingCollisionBoundsTagsInfo__ctor_mE1BB4C2EF629421F46AFD1272780D9F4B6BB9538 (_SetWorkingCollisionBoundsTagsInfo_t7F1BD889ADEEFFE699F064129C30D4F49F938273 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingCollisionBoundsTagsInfo::Invoke(System.Byte[],System.UInt32)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingCollisionBoundsTagsInfo_Invoke_mAE7040C3A2C628E767ACEDB56EF2866C8AD7457E (_SetWorkingCollisionBoundsTagsInfo_t7F1BD889ADEEFFE699F064129C30D4F49F938273 * __this, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___pTagsBuffer0, uint32_t ___unTagCount1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef void (*FunctionPointerType) (ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pTagsBuffer0, ___unTagCount1, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pTagsBuffer0, ___unTagCount1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pTagsBuffer0, ___unTagCount1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t >::Invoke(targetMethod, targetThis, ___pTagsBuffer0, ___unTagCount1);
							else
								GenericVirtActionInvoker2< ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t >::Invoke(targetMethod, targetThis, ___pTagsBuffer0, ___unTagCount1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTagsBuffer0, ___unTagCount1);
							else
								VirtActionInvoker2< ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTagsBuffer0, ___unTagCount1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pTagsBuffer0, ___unTagCount1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pTagsBuffer0, ___unTagCount1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pTagsBuffer0, ___unTagCount1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pTagsBuffer0, ___unTagCount1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t >::Invoke(targetMethod, targetThis, ___pTagsBuffer0, ___unTagCount1);
						else
							GenericVirtActionInvoker2< ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t >::Invoke(targetMethod, targetThis, ___pTagsBuffer0, ___unTagCount1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTagsBuffer0, ___unTagCount1);
						else
							VirtActionInvoker2< ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTagsBuffer0, ___unTagCount1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821*, uint32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pTagsBuffer0, ___unTagCount1, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRChaperoneSetup__SetWorkingCollisionBoundsTagsInfo::BeginInvoke(System.Byte[],System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetWorkingCollisionBoundsTagsInfo_BeginInvoke_mDFFE343C65C960EB44885ACEF9D917FB8BF4A884 (_SetWorkingCollisionBoundsTagsInfo_t7F1BD889ADEEFFE699F064129C30D4F49F938273 * __this, ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___pTagsBuffer0, uint32_t ___unTagCount1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetWorkingCollisionBoundsTagsInfo_BeginInvoke_mDFFE343C65C960EB44885ACEF9D917FB8BF4A884_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pTagsBuffer0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unTagCount1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingCollisionBoundsTagsInfo::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingCollisionBoundsTagsInfo_EndInvoke_m3C29850FC275276C9541E6BBE6E16D6944EE864F (_SetWorkingCollisionBoundsTagsInfo_t7F1BD889ADEEFFE699F064129C30D4F49F938273 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__SetWorkingPhysicalBoundsInfo_tAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3 (_SetWorkingPhysicalBoundsInfo_tAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3 * __this, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5* ___pQuadsBuffer0, uint32_t ___unQuadsCount1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pQuadsBuffer0U27 to native representation
	HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE * ____pQuadsBuffer0_marshaled = NULL;
	if (___pQuadsBuffer0 != NULL)
	{
		____pQuadsBuffer0_marshaled = reinterpret_cast<HmdQuad_t_tC99408E542DBDB164A98BB7130748461C03869CE *>((___pQuadsBuffer0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pQuadsBuffer0_marshaled, ___unQuadsCount1);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingPhysicalBoundsInfo::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingPhysicalBoundsInfo__ctor_mC13198032EC0C048B1FA293136C17E94B3138BE5 (_SetWorkingPhysicalBoundsInfo_tAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRChaperoneSetup__SetWorkingPhysicalBoundsInfo::Invoke(Valve.VR.HmdQuad_t[],System.UInt32)
extern "C" IL2CPP_METHOD_ATTR bool _SetWorkingPhysicalBoundsInfo_Invoke_m2ED1BC33721835245C9C90DE074FD100A5E2CF4A (_SetWorkingPhysicalBoundsInfo_tAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3 * __this, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5* ___pQuadsBuffer0, uint32_t ___unQuadsCount1, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef bool (*FunctionPointerType) (HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pQuadsBuffer0, ___unQuadsCount1, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pQuadsBuffer0, ___unQuadsCount1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pQuadsBuffer0, ___unQuadsCount1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< bool, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t >::Invoke(targetMethod, targetThis, ___pQuadsBuffer0, ___unQuadsCount1);
							else
								result = GenericVirtFuncInvoker2< bool, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t >::Invoke(targetMethod, targetThis, ___pQuadsBuffer0, ___unQuadsCount1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< bool, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pQuadsBuffer0, ___unQuadsCount1);
							else
								result = VirtFuncInvoker2< bool, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pQuadsBuffer0, ___unQuadsCount1);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pQuadsBuffer0, ___unQuadsCount1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef bool (*FunctionPointerType) (HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pQuadsBuffer0, ___unQuadsCount1, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pQuadsBuffer0, ___unQuadsCount1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pQuadsBuffer0, ___unQuadsCount1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< bool, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t >::Invoke(targetMethod, targetThis, ___pQuadsBuffer0, ___unQuadsCount1);
						else
							result = GenericVirtFuncInvoker2< bool, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t >::Invoke(targetMethod, targetThis, ___pQuadsBuffer0, ___unQuadsCount1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< bool, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pQuadsBuffer0, ___unQuadsCount1);
						else
							result = VirtFuncInvoker2< bool, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pQuadsBuffer0, ___unQuadsCount1);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pQuadsBuffer0, ___unQuadsCount1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRChaperoneSetup__SetWorkingPhysicalBoundsInfo::BeginInvoke(Valve.VR.HmdQuad_t[],System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetWorkingPhysicalBoundsInfo_BeginInvoke_m6EE6627B972A71906C106DA4F2D73119094943F9 (_SetWorkingPhysicalBoundsInfo_tAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3 * __this, HmdQuad_tU5BU5D_t8F92E9A263EAD0E4893058B02FAEF7F9CF1ABBD5* ___pQuadsBuffer0, uint32_t ___unQuadsCount1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetWorkingPhysicalBoundsInfo_BeginInvoke_m6EE6627B972A71906C106DA4F2D73119094943F9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pQuadsBuffer0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unQuadsCount1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Boolean Valve.VR.IVRChaperoneSetup__SetWorkingPhysicalBoundsInfo::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _SetWorkingPhysicalBoundsInfo_EndInvoke_mEAF5DAF718B03795C98FCF0B25E393ADA124ACC3 (_SetWorkingPhysicalBoundsInfo_tAC8B3B6D4D2D71252F2A527C5E9559F47F64E4F3 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetWorkingPlayAreaSize_t73C6EE98131165C953CE9B4CCC3B15E61853B890 (_SetWorkingPlayAreaSize_t73C6EE98131165C953CE9B4CCC3B15E61853B890 * __this, float ___sizeX0, float ___sizeZ1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(float, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___sizeX0, ___sizeZ1);

}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingPlayAreaSize::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingPlayAreaSize__ctor_mB177CAA33135D694E1C5FBBB098C76017D07F448 (_SetWorkingPlayAreaSize_t73C6EE98131165C953CE9B4CCC3B15E61853B890 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingPlayAreaSize::Invoke(System.Single,System.Single)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingPlayAreaSize_Invoke_m5D1EC0B7F617F00EE1BAFF6D8E0724194B9F239C (_SetWorkingPlayAreaSize_t73C6EE98131165C953CE9B4CCC3B15E61853B890 * __this, float ___sizeX0, float ___sizeZ1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef void (*FunctionPointerType) (float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___sizeX0, ___sizeZ1, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___sizeX0, ___sizeZ1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (float, float, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___sizeX0, ___sizeZ1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< float, float >::Invoke(targetMethod, targetThis, ___sizeX0, ___sizeZ1);
							else
								GenericVirtActionInvoker2< float, float >::Invoke(targetMethod, targetThis, ___sizeX0, ___sizeZ1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___sizeX0, ___sizeZ1);
							else
								VirtActionInvoker2< float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___sizeX0, ___sizeZ1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, float, float, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___sizeX0, ___sizeZ1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___sizeX0, ___sizeZ1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___sizeX0, ___sizeZ1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (float, float, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___sizeX0, ___sizeZ1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< float, float >::Invoke(targetMethod, targetThis, ___sizeX0, ___sizeZ1);
						else
							GenericVirtActionInvoker2< float, float >::Invoke(targetMethod, targetThis, ___sizeX0, ___sizeZ1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___sizeX0, ___sizeZ1);
						else
							VirtActionInvoker2< float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___sizeX0, ___sizeZ1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, float, float, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___sizeX0, ___sizeZ1, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRChaperoneSetup__SetWorkingPlayAreaSize::BeginInvoke(System.Single,System.Single,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetWorkingPlayAreaSize_BeginInvoke_m99E7A6237BC7015FFBB75F5FD01FE8C29D768D44 (_SetWorkingPlayAreaSize_t73C6EE98131165C953CE9B4CCC3B15E61853B890 * __this, float ___sizeX0, float ___sizeZ1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetWorkingPlayAreaSize_BeginInvoke_m99E7A6237BC7015FFBB75F5FD01FE8C29D768D44_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___sizeX0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___sizeZ1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingPlayAreaSize::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingPlayAreaSize_EndInvoke_m3D4F17335D4DCB883CBBC937EECA24555E078A23 (_SetWorkingPlayAreaSize_t73C6EE98131165C953CE9B4CCC3B15E61853B890 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetWorkingSeatedZeroPoseToRawTrackingPose_t2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF (_SetWorkingSeatedZeroPoseToRawTrackingPose_t2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pMatSeatedZeroPoseToRawTrackingPose0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pMatSeatedZeroPoseToRawTrackingPose0);

}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingSeatedZeroPoseToRawTrackingPose::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingSeatedZeroPoseToRawTrackingPose__ctor_m2CF080ADADE34DE3214C03588681256512B2FA02 (_SetWorkingSeatedZeroPoseToRawTrackingPose_t2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingSeatedZeroPoseToRawTrackingPose::Invoke(Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingSeatedZeroPoseToRawTrackingPose_Invoke_m65FE8EDC4D59536A6276155FBED19C2141ED8136 (_SetWorkingSeatedZeroPoseToRawTrackingPose_t2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pMatSeatedZeroPoseToRawTrackingPose0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pMatSeatedZeroPoseToRawTrackingPose0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pMatSeatedZeroPoseToRawTrackingPose0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0);
							else
								GenericVirtActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0);
							else
								VirtActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pMatSeatedZeroPoseToRawTrackingPose0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pMatSeatedZeroPoseToRawTrackingPose0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0);
						else
							GenericVirtActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0);
						else
							VirtActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pMatSeatedZeroPoseToRawTrackingPose0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRChaperoneSetup__SetWorkingSeatedZeroPoseToRawTrackingPose::BeginInvoke(Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetWorkingSeatedZeroPoseToRawTrackingPose_BeginInvoke_m09AD37C2BE46C68BD9A095FD4869EA2FE3294545 (_SetWorkingSeatedZeroPoseToRawTrackingPose_t2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pMatSeatedZeroPoseToRawTrackingPose0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetWorkingSeatedZeroPoseToRawTrackingPose_BeginInvoke_m09AD37C2BE46C68BD9A095FD4869EA2FE3294545_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pMatSeatedZeroPoseToRawTrackingPose0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingSeatedZeroPoseToRawTrackingPose::EndInvoke(Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingSeatedZeroPoseToRawTrackingPose_EndInvoke_m0EAFE3D40EA1BCF8E0AF55D54CA2F9229FADDC19 (_SetWorkingSeatedZeroPoseToRawTrackingPose_t2A47E17D7C4C9761FDA0EB3D288AF3C4D00340DF * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pMatSeatedZeroPoseToRawTrackingPose0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pMatSeatedZeroPoseToRawTrackingPose0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetWorkingStandingZeroPoseToRawTrackingPose_tA17A471D49E986180E741026CEC7D57B597B636F (_SetWorkingStandingZeroPoseToRawTrackingPose_tA17A471D49E986180E741026CEC7D57B597B636F * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pMatStandingZeroPoseToRawTrackingPose0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pMatStandingZeroPoseToRawTrackingPose0);

}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingStandingZeroPoseToRawTrackingPose::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingStandingZeroPoseToRawTrackingPose__ctor_m86902B4EFF7D052B5216C840317F66AC8C64E166 (_SetWorkingStandingZeroPoseToRawTrackingPose_tA17A471D49E986180E741026CEC7D57B597B636F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingStandingZeroPoseToRawTrackingPose::Invoke(Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingStandingZeroPoseToRawTrackingPose_Invoke_mE2D26FC23D5F9A01D23921849E29C94E42C5487B (_SetWorkingStandingZeroPoseToRawTrackingPose_tA17A471D49E986180E741026CEC7D57B597B636F * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pMatStandingZeroPoseToRawTrackingPose0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pMatStandingZeroPoseToRawTrackingPose0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pMatStandingZeroPoseToRawTrackingPose0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pMatStandingZeroPoseToRawTrackingPose0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___pMatStandingZeroPoseToRawTrackingPose0);
							else
								GenericVirtActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___pMatStandingZeroPoseToRawTrackingPose0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pMatStandingZeroPoseToRawTrackingPose0);
							else
								VirtActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pMatStandingZeroPoseToRawTrackingPose0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pMatStandingZeroPoseToRawTrackingPose0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pMatStandingZeroPoseToRawTrackingPose0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pMatStandingZeroPoseToRawTrackingPose0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pMatStandingZeroPoseToRawTrackingPose0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___pMatStandingZeroPoseToRawTrackingPose0);
						else
							GenericVirtActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___pMatStandingZeroPoseToRawTrackingPose0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pMatStandingZeroPoseToRawTrackingPose0);
						else
							VirtActionInvoker1< HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pMatStandingZeroPoseToRawTrackingPose0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pMatStandingZeroPoseToRawTrackingPose0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRChaperoneSetup__SetWorkingStandingZeroPoseToRawTrackingPose::BeginInvoke(Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetWorkingStandingZeroPoseToRawTrackingPose_BeginInvoke_mA333E0C2ED441DD0CB27141521B04D719F62647F (_SetWorkingStandingZeroPoseToRawTrackingPose_tA17A471D49E986180E741026CEC7D57B597B636F * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pMatStandingZeroPoseToRawTrackingPose0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetWorkingStandingZeroPoseToRawTrackingPose_BeginInvoke_mA333E0C2ED441DD0CB27141521B04D719F62647F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pMatStandingZeroPoseToRawTrackingPose0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRChaperoneSetup__SetWorkingStandingZeroPoseToRawTrackingPose::EndInvoke(Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetWorkingStandingZeroPoseToRawTrackingPose_EndInvoke_m368B9EC1D03879F26B631C2EF2D7DBEB3FCE672E (_SetWorkingStandingZeroPoseToRawTrackingPose_tA17A471D49E986180E741026CEC7D57B597B636F * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pMatStandingZeroPoseToRawTrackingPose0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pMatStandingZeroPoseToRawTrackingPose0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRCompositor
extern "C" void IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshal_pinvoke(const IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A& unmarshaled, IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshaled_pinvoke& marshaled)
{
	marshaled.___SetTrackingSpace_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetTrackingSpace_0()));
	marshaled.___GetTrackingSpace_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTrackingSpace_1()));
	marshaled.___WaitGetPoses_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_WaitGetPoses_2()));
	marshaled.___GetLastPoses_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetLastPoses_3()));
	marshaled.___GetLastPoseForTrackedDeviceIndex_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetLastPoseForTrackedDeviceIndex_4()));
	marshaled.___Submit_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_Submit_5()));
	marshaled.___ClearLastSubmittedFrame_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ClearLastSubmittedFrame_6()));
	marshaled.___PostPresentHandoff_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PostPresentHandoff_7()));
	marshaled.___GetFrameTiming_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFrameTiming_8()));
	marshaled.___GetFrameTimings_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFrameTimings_9()));
	marshaled.___GetFrameTimeRemaining_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFrameTimeRemaining_10()));
	marshaled.___GetCumulativeStats_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetCumulativeStats_11()));
	marshaled.___FadeToColor_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FadeToColor_12()));
	marshaled.___GetCurrentFadeColor_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetCurrentFadeColor_13()));
	marshaled.___FadeGrid_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FadeGrid_14()));
	marshaled.___GetCurrentGridAlpha_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetCurrentGridAlpha_15()));
	marshaled.___SetSkyboxOverride_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetSkyboxOverride_16()));
	marshaled.___ClearSkyboxOverride_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ClearSkyboxOverride_17()));
	marshaled.___CompositorBringToFront_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CompositorBringToFront_18()));
	marshaled.___CompositorGoToBack_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CompositorGoToBack_19()));
	marshaled.___CompositorQuit_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CompositorQuit_20()));
	marshaled.___IsFullscreen_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsFullscreen_21()));
	marshaled.___GetCurrentSceneFocusProcess_22 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetCurrentSceneFocusProcess_22()));
	marshaled.___GetLastFrameRenderer_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetLastFrameRenderer_23()));
	marshaled.___CanRenderScene_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CanRenderScene_24()));
	marshaled.___ShowMirrorWindow_25 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowMirrorWindow_25()));
	marshaled.___HideMirrorWindow_26 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HideMirrorWindow_26()));
	marshaled.___IsMirrorWindowVisible_27 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsMirrorWindowVisible_27()));
	marshaled.___CompositorDumpImages_28 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CompositorDumpImages_28()));
	marshaled.___ShouldAppRenderWithLowResources_29 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShouldAppRenderWithLowResources_29()));
	marshaled.___ForceInterleavedReprojectionOn_30 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ForceInterleavedReprojectionOn_30()));
	marshaled.___ForceReconnectProcess_31 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ForceReconnectProcess_31()));
	marshaled.___SuspendRendering_32 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SuspendRendering_32()));
	marshaled.___GetMirrorTextureD3D11_33 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetMirrorTextureD3D11_33()));
	marshaled.___ReleaseMirrorTextureD3D11_34 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ReleaseMirrorTextureD3D11_34()));
	marshaled.___GetMirrorTextureGL_35 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetMirrorTextureGL_35()));
	marshaled.___ReleaseSharedGLTexture_36 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ReleaseSharedGLTexture_36()));
	marshaled.___LockGLSharedTextureForAccess_37 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LockGLSharedTextureForAccess_37()));
	marshaled.___UnlockGLSharedTextureForAccess_38 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_UnlockGLSharedTextureForAccess_38()));
	marshaled.___GetVulkanInstanceExtensionsRequired_39 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetVulkanInstanceExtensionsRequired_39()));
	marshaled.___GetVulkanDeviceExtensionsRequired_40 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetVulkanDeviceExtensionsRequired_40()));
	marshaled.___SetExplicitTimingMode_41 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetExplicitTimingMode_41()));
	marshaled.___SubmitExplicitTimingData_42 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SubmitExplicitTimingData_42()));
}
extern "C" void IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshal_pinvoke_back(const IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshaled_pinvoke& marshaled, IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_SetTrackingSpace_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB>(marshaled.___SetTrackingSpace_0, _SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTrackingSpace_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B>(marshaled.___GetTrackingSpace_1, _GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B_il2cpp_TypeInfo_var));
	unmarshaled.set_WaitGetPoses_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD>(marshaled.___WaitGetPoses_2, _WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD_il2cpp_TypeInfo_var));
	unmarshaled.set_GetLastPoses_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952>(marshaled.___GetLastPoses_3, _GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952_il2cpp_TypeInfo_var));
	unmarshaled.set_GetLastPoseForTrackedDeviceIndex_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA>(marshaled.___GetLastPoseForTrackedDeviceIndex_4, _GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA_il2cpp_TypeInfo_var));
	unmarshaled.set_Submit_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5>(marshaled.___Submit_5, _Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5_il2cpp_TypeInfo_var));
	unmarshaled.set_ClearLastSubmittedFrame_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17>(marshaled.___ClearLastSubmittedFrame_6, _ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17_il2cpp_TypeInfo_var));
	unmarshaled.set_PostPresentHandoff_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2>(marshaled.___PostPresentHandoff_7, _PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFrameTiming_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3>(marshaled.___GetFrameTiming_8, _GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFrameTimings_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921>(marshaled.___GetFrameTimings_9, _GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFrameTimeRemaining_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008>(marshaled.___GetFrameTimeRemaining_10, _GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008_il2cpp_TypeInfo_var));
	unmarshaled.set_GetCumulativeStats_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3>(marshaled.___GetCumulativeStats_11, _GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3_il2cpp_TypeInfo_var));
	unmarshaled.set_FadeToColor_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D>(marshaled.___FadeToColor_12, _FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D_il2cpp_TypeInfo_var));
	unmarshaled.set_GetCurrentFadeColor_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF>(marshaled.___GetCurrentFadeColor_13, _GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF_il2cpp_TypeInfo_var));
	unmarshaled.set_FadeGrid_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F>(marshaled.___FadeGrid_14, _FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetCurrentGridAlpha_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078>(marshaled.___GetCurrentGridAlpha_15, _GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078_il2cpp_TypeInfo_var));
	unmarshaled.set_SetSkyboxOverride_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A>(marshaled.___SetSkyboxOverride_16, _SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A_il2cpp_TypeInfo_var));
	unmarshaled.set_ClearSkyboxOverride_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253>(marshaled.___ClearSkyboxOverride_17, _ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253_il2cpp_TypeInfo_var));
	unmarshaled.set_CompositorBringToFront_18(il2cpp_codegen_marshal_function_ptr_to_delegate<_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD>(marshaled.___CompositorBringToFront_18, _CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD_il2cpp_TypeInfo_var));
	unmarshaled.set_CompositorGoToBack_19(il2cpp_codegen_marshal_function_ptr_to_delegate<_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84>(marshaled.___CompositorGoToBack_19, _CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84_il2cpp_TypeInfo_var));
	unmarshaled.set_CompositorQuit_20(il2cpp_codegen_marshal_function_ptr_to_delegate<_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9>(marshaled.___CompositorQuit_20, _CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9_il2cpp_TypeInfo_var));
	unmarshaled.set_IsFullscreen_21(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C>(marshaled.___IsFullscreen_21, _IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetCurrentSceneFocusProcess_22(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF>(marshaled.___GetCurrentSceneFocusProcess_22, _GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetLastFrameRenderer_23(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114>(marshaled.___GetLastFrameRenderer_23, _GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114_il2cpp_TypeInfo_var));
	unmarshaled.set_CanRenderScene_24(il2cpp_codegen_marshal_function_ptr_to_delegate<_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50>(marshaled.___CanRenderScene_24, _CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowMirrorWindow_25(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847>(marshaled.___ShowMirrorWindow_25, _ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847_il2cpp_TypeInfo_var));
	unmarshaled.set_HideMirrorWindow_26(il2cpp_codegen_marshal_function_ptr_to_delegate<_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824>(marshaled.___HideMirrorWindow_26, _HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824_il2cpp_TypeInfo_var));
	unmarshaled.set_IsMirrorWindowVisible_27(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C>(marshaled.___IsMirrorWindowVisible_27, _IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C_il2cpp_TypeInfo_var));
	unmarshaled.set_CompositorDumpImages_28(il2cpp_codegen_marshal_function_ptr_to_delegate<_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E>(marshaled.___CompositorDumpImages_28, _CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E_il2cpp_TypeInfo_var));
	unmarshaled.set_ShouldAppRenderWithLowResources_29(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD>(marshaled.___ShouldAppRenderWithLowResources_29, _ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD_il2cpp_TypeInfo_var));
	unmarshaled.set_ForceInterleavedReprojectionOn_30(il2cpp_codegen_marshal_function_ptr_to_delegate<_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D>(marshaled.___ForceInterleavedReprojectionOn_30, _ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D_il2cpp_TypeInfo_var));
	unmarshaled.set_ForceReconnectProcess_31(il2cpp_codegen_marshal_function_ptr_to_delegate<_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22>(marshaled.___ForceReconnectProcess_31, _ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22_il2cpp_TypeInfo_var));
	unmarshaled.set_SuspendRendering_32(il2cpp_codegen_marshal_function_ptr_to_delegate<_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1>(marshaled.___SuspendRendering_32, _SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1_il2cpp_TypeInfo_var));
	unmarshaled.set_GetMirrorTextureD3D11_33(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E>(marshaled.___GetMirrorTextureD3D11_33, _GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E_il2cpp_TypeInfo_var));
	unmarshaled.set_ReleaseMirrorTextureD3D11_34(il2cpp_codegen_marshal_function_ptr_to_delegate<_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A>(marshaled.___ReleaseMirrorTextureD3D11_34, _ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A_il2cpp_TypeInfo_var));
	unmarshaled.set_GetMirrorTextureGL_35(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B>(marshaled.___GetMirrorTextureGL_35, _GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B_il2cpp_TypeInfo_var));
	unmarshaled.set_ReleaseSharedGLTexture_36(il2cpp_codegen_marshal_function_ptr_to_delegate<_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE>(marshaled.___ReleaseSharedGLTexture_36, _ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE_il2cpp_TypeInfo_var));
	unmarshaled.set_LockGLSharedTextureForAccess_37(il2cpp_codegen_marshal_function_ptr_to_delegate<_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51>(marshaled.___LockGLSharedTextureForAccess_37, _LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51_il2cpp_TypeInfo_var));
	unmarshaled.set_UnlockGLSharedTextureForAccess_38(il2cpp_codegen_marshal_function_ptr_to_delegate<_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8>(marshaled.___UnlockGLSharedTextureForAccess_38, _UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetVulkanInstanceExtensionsRequired_39(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036>(marshaled.___GetVulkanInstanceExtensionsRequired_39, _GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036_il2cpp_TypeInfo_var));
	unmarshaled.set_GetVulkanDeviceExtensionsRequired_40(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99>(marshaled.___GetVulkanDeviceExtensionsRequired_40, _GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99_il2cpp_TypeInfo_var));
	unmarshaled.set_SetExplicitTimingMode_41(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105>(marshaled.___SetExplicitTimingMode_41, _SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105_il2cpp_TypeInfo_var));
	unmarshaled.set_SubmitExplicitTimingData_42(il2cpp_codegen_marshal_function_ptr_to_delegate<_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0>(marshaled.___SubmitExplicitTimingData_42, _SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRCompositor
extern "C" void IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshal_pinvoke_cleanup(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRCompositor
extern "C" void IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshal_com(const IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A& unmarshaled, IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshaled_com& marshaled)
{
	marshaled.___SetTrackingSpace_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetTrackingSpace_0()));
	marshaled.___GetTrackingSpace_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTrackingSpace_1()));
	marshaled.___WaitGetPoses_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_WaitGetPoses_2()));
	marshaled.___GetLastPoses_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetLastPoses_3()));
	marshaled.___GetLastPoseForTrackedDeviceIndex_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetLastPoseForTrackedDeviceIndex_4()));
	marshaled.___Submit_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_Submit_5()));
	marshaled.___ClearLastSubmittedFrame_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ClearLastSubmittedFrame_6()));
	marshaled.___PostPresentHandoff_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PostPresentHandoff_7()));
	marshaled.___GetFrameTiming_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFrameTiming_8()));
	marshaled.___GetFrameTimings_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFrameTimings_9()));
	marshaled.___GetFrameTimeRemaining_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFrameTimeRemaining_10()));
	marshaled.___GetCumulativeStats_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetCumulativeStats_11()));
	marshaled.___FadeToColor_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FadeToColor_12()));
	marshaled.___GetCurrentFadeColor_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetCurrentFadeColor_13()));
	marshaled.___FadeGrid_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FadeGrid_14()));
	marshaled.___GetCurrentGridAlpha_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetCurrentGridAlpha_15()));
	marshaled.___SetSkyboxOverride_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetSkyboxOverride_16()));
	marshaled.___ClearSkyboxOverride_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ClearSkyboxOverride_17()));
	marshaled.___CompositorBringToFront_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CompositorBringToFront_18()));
	marshaled.___CompositorGoToBack_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CompositorGoToBack_19()));
	marshaled.___CompositorQuit_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CompositorQuit_20()));
	marshaled.___IsFullscreen_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsFullscreen_21()));
	marshaled.___GetCurrentSceneFocusProcess_22 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetCurrentSceneFocusProcess_22()));
	marshaled.___GetLastFrameRenderer_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetLastFrameRenderer_23()));
	marshaled.___CanRenderScene_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CanRenderScene_24()));
	marshaled.___ShowMirrorWindow_25 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowMirrorWindow_25()));
	marshaled.___HideMirrorWindow_26 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HideMirrorWindow_26()));
	marshaled.___IsMirrorWindowVisible_27 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsMirrorWindowVisible_27()));
	marshaled.___CompositorDumpImages_28 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CompositorDumpImages_28()));
	marshaled.___ShouldAppRenderWithLowResources_29 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShouldAppRenderWithLowResources_29()));
	marshaled.___ForceInterleavedReprojectionOn_30 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ForceInterleavedReprojectionOn_30()));
	marshaled.___ForceReconnectProcess_31 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ForceReconnectProcess_31()));
	marshaled.___SuspendRendering_32 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SuspendRendering_32()));
	marshaled.___GetMirrorTextureD3D11_33 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetMirrorTextureD3D11_33()));
	marshaled.___ReleaseMirrorTextureD3D11_34 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ReleaseMirrorTextureD3D11_34()));
	marshaled.___GetMirrorTextureGL_35 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetMirrorTextureGL_35()));
	marshaled.___ReleaseSharedGLTexture_36 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ReleaseSharedGLTexture_36()));
	marshaled.___LockGLSharedTextureForAccess_37 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LockGLSharedTextureForAccess_37()));
	marshaled.___UnlockGLSharedTextureForAccess_38 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_UnlockGLSharedTextureForAccess_38()));
	marshaled.___GetVulkanInstanceExtensionsRequired_39 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetVulkanInstanceExtensionsRequired_39()));
	marshaled.___GetVulkanDeviceExtensionsRequired_40 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetVulkanDeviceExtensionsRequired_40()));
	marshaled.___SetExplicitTimingMode_41 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetExplicitTimingMode_41()));
	marshaled.___SubmitExplicitTimingData_42 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SubmitExplicitTimingData_42()));
}
extern "C" void IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshal_com_back(const IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshaled_com& marshaled, IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_SetTrackingSpace_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB>(marshaled.___SetTrackingSpace_0, _SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTrackingSpace_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B>(marshaled.___GetTrackingSpace_1, _GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B_il2cpp_TypeInfo_var));
	unmarshaled.set_WaitGetPoses_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD>(marshaled.___WaitGetPoses_2, _WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD_il2cpp_TypeInfo_var));
	unmarshaled.set_GetLastPoses_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952>(marshaled.___GetLastPoses_3, _GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952_il2cpp_TypeInfo_var));
	unmarshaled.set_GetLastPoseForTrackedDeviceIndex_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA>(marshaled.___GetLastPoseForTrackedDeviceIndex_4, _GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA_il2cpp_TypeInfo_var));
	unmarshaled.set_Submit_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5>(marshaled.___Submit_5, _Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5_il2cpp_TypeInfo_var));
	unmarshaled.set_ClearLastSubmittedFrame_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17>(marshaled.___ClearLastSubmittedFrame_6, _ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17_il2cpp_TypeInfo_var));
	unmarshaled.set_PostPresentHandoff_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2>(marshaled.___PostPresentHandoff_7, _PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFrameTiming_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3>(marshaled.___GetFrameTiming_8, _GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFrameTimings_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921>(marshaled.___GetFrameTimings_9, _GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFrameTimeRemaining_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008>(marshaled.___GetFrameTimeRemaining_10, _GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008_il2cpp_TypeInfo_var));
	unmarshaled.set_GetCumulativeStats_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3>(marshaled.___GetCumulativeStats_11, _GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3_il2cpp_TypeInfo_var));
	unmarshaled.set_FadeToColor_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D>(marshaled.___FadeToColor_12, _FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D_il2cpp_TypeInfo_var));
	unmarshaled.set_GetCurrentFadeColor_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF>(marshaled.___GetCurrentFadeColor_13, _GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF_il2cpp_TypeInfo_var));
	unmarshaled.set_FadeGrid_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F>(marshaled.___FadeGrid_14, _FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetCurrentGridAlpha_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078>(marshaled.___GetCurrentGridAlpha_15, _GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078_il2cpp_TypeInfo_var));
	unmarshaled.set_SetSkyboxOverride_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A>(marshaled.___SetSkyboxOverride_16, _SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A_il2cpp_TypeInfo_var));
	unmarshaled.set_ClearSkyboxOverride_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253>(marshaled.___ClearSkyboxOverride_17, _ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253_il2cpp_TypeInfo_var));
	unmarshaled.set_CompositorBringToFront_18(il2cpp_codegen_marshal_function_ptr_to_delegate<_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD>(marshaled.___CompositorBringToFront_18, _CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD_il2cpp_TypeInfo_var));
	unmarshaled.set_CompositorGoToBack_19(il2cpp_codegen_marshal_function_ptr_to_delegate<_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84>(marshaled.___CompositorGoToBack_19, _CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84_il2cpp_TypeInfo_var));
	unmarshaled.set_CompositorQuit_20(il2cpp_codegen_marshal_function_ptr_to_delegate<_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9>(marshaled.___CompositorQuit_20, _CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9_il2cpp_TypeInfo_var));
	unmarshaled.set_IsFullscreen_21(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C>(marshaled.___IsFullscreen_21, _IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetCurrentSceneFocusProcess_22(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF>(marshaled.___GetCurrentSceneFocusProcess_22, _GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetLastFrameRenderer_23(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114>(marshaled.___GetLastFrameRenderer_23, _GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114_il2cpp_TypeInfo_var));
	unmarshaled.set_CanRenderScene_24(il2cpp_codegen_marshal_function_ptr_to_delegate<_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50>(marshaled.___CanRenderScene_24, _CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowMirrorWindow_25(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847>(marshaled.___ShowMirrorWindow_25, _ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847_il2cpp_TypeInfo_var));
	unmarshaled.set_HideMirrorWindow_26(il2cpp_codegen_marshal_function_ptr_to_delegate<_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824>(marshaled.___HideMirrorWindow_26, _HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824_il2cpp_TypeInfo_var));
	unmarshaled.set_IsMirrorWindowVisible_27(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C>(marshaled.___IsMirrorWindowVisible_27, _IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C_il2cpp_TypeInfo_var));
	unmarshaled.set_CompositorDumpImages_28(il2cpp_codegen_marshal_function_ptr_to_delegate<_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E>(marshaled.___CompositorDumpImages_28, _CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E_il2cpp_TypeInfo_var));
	unmarshaled.set_ShouldAppRenderWithLowResources_29(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD>(marshaled.___ShouldAppRenderWithLowResources_29, _ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD_il2cpp_TypeInfo_var));
	unmarshaled.set_ForceInterleavedReprojectionOn_30(il2cpp_codegen_marshal_function_ptr_to_delegate<_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D>(marshaled.___ForceInterleavedReprojectionOn_30, _ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D_il2cpp_TypeInfo_var));
	unmarshaled.set_ForceReconnectProcess_31(il2cpp_codegen_marshal_function_ptr_to_delegate<_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22>(marshaled.___ForceReconnectProcess_31, _ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22_il2cpp_TypeInfo_var));
	unmarshaled.set_SuspendRendering_32(il2cpp_codegen_marshal_function_ptr_to_delegate<_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1>(marshaled.___SuspendRendering_32, _SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1_il2cpp_TypeInfo_var));
	unmarshaled.set_GetMirrorTextureD3D11_33(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E>(marshaled.___GetMirrorTextureD3D11_33, _GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E_il2cpp_TypeInfo_var));
	unmarshaled.set_ReleaseMirrorTextureD3D11_34(il2cpp_codegen_marshal_function_ptr_to_delegate<_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A>(marshaled.___ReleaseMirrorTextureD3D11_34, _ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A_il2cpp_TypeInfo_var));
	unmarshaled.set_GetMirrorTextureGL_35(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B>(marshaled.___GetMirrorTextureGL_35, _GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B_il2cpp_TypeInfo_var));
	unmarshaled.set_ReleaseSharedGLTexture_36(il2cpp_codegen_marshal_function_ptr_to_delegate<_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE>(marshaled.___ReleaseSharedGLTexture_36, _ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE_il2cpp_TypeInfo_var));
	unmarshaled.set_LockGLSharedTextureForAccess_37(il2cpp_codegen_marshal_function_ptr_to_delegate<_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51>(marshaled.___LockGLSharedTextureForAccess_37, _LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51_il2cpp_TypeInfo_var));
	unmarshaled.set_UnlockGLSharedTextureForAccess_38(il2cpp_codegen_marshal_function_ptr_to_delegate<_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8>(marshaled.___UnlockGLSharedTextureForAccess_38, _UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetVulkanInstanceExtensionsRequired_39(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036>(marshaled.___GetVulkanInstanceExtensionsRequired_39, _GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036_il2cpp_TypeInfo_var));
	unmarshaled.set_GetVulkanDeviceExtensionsRequired_40(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99>(marshaled.___GetVulkanDeviceExtensionsRequired_40, _GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99_il2cpp_TypeInfo_var));
	unmarshaled.set_SetExplicitTimingMode_41(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105>(marshaled.___SetExplicitTimingMode_41, _SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105_il2cpp_TypeInfo_var));
	unmarshaled.set_SubmitExplicitTimingData_42(il2cpp_codegen_marshal_function_ptr_to_delegate<_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0>(marshaled.___SubmitExplicitTimingData_42, _SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRCompositor
extern "C" void IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshal_com_cleanup(IVRCompositor_t1954959A018DB1A5104950705A9179827F19F50A_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 (_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 * __this, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc();

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRCompositor__CanRenderScene::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CanRenderScene__ctor_m4031B9682B890622E8D89C1356775BE0C66EE8DC (_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRCompositor__CanRenderScene::Invoke()
extern "C" IL2CPP_METHOD_ATTR bool _CanRenderScene_Invoke_m9AB35C2D91D8C53630A8E85F0065CC09CCF9BC47 (_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 * __this, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef bool (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef bool (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__CanRenderScene::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CanRenderScene_BeginInvoke_m1CA401E1EE8815D9A1A4B10D210B72EF5438AE4F (_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Boolean Valve.VR.IVRCompositor__CanRenderScene::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _CanRenderScene_EndInvoke_m9624AF54A105A883510AB313C1E5BC332A902B38 (_CanRenderScene_t4AD3E3624B2B1E98DDADD1A11D321D6200754A50 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 (_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__ClearLastSubmittedFrame::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ClearLastSubmittedFrame__ctor_mF447CAF2E3F07D77D5333E0F209D37571DFD6721 (_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__ClearLastSubmittedFrame::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _ClearLastSubmittedFrame_Invoke_mD73FD0896BE278BD2E1C2D9983D659C6DE85982E (_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__ClearLastSubmittedFrame::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ClearLastSubmittedFrame_BeginInvoke_mFDEF773E335592ABCE91C2AA226262931D601B97 (_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__ClearLastSubmittedFrame::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _ClearLastSubmittedFrame_EndInvoke_mB4EC9CFE90836094022D9D32D2B51466D0452B98 (_ClearLastSubmittedFrame_tF87784262A4806EB8D8B7FE291A65460ED498B17 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 (_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__ClearSkyboxOverride::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ClearSkyboxOverride__ctor_mA0C9503090236EA6FF276D12C5813BC4073F5B98 (_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__ClearSkyboxOverride::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _ClearSkyboxOverride_Invoke_mD0A77CDA2D94241B5AFC623B8FF99987420831A3 (_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__ClearSkyboxOverride::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ClearSkyboxOverride_BeginInvoke_mA9C80A6A7E6E742C58F2BA37B4E77944739E5DC7 (_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__ClearSkyboxOverride::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _ClearSkyboxOverride_EndInvoke_m342CD90F9F7F08F1D5B3FC88E40B5511DB3CF245 (_ClearSkyboxOverride_t798229B1E8CD4DC3077DF337F8907B7F87707253 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD (_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__CompositorBringToFront::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CompositorBringToFront__ctor_m87CD117AB277967D5A45966E607420E6317C002D (_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__CompositorBringToFront::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _CompositorBringToFront_Invoke_m673F2B98C95CBDB46F51FF094FE1710A797AECD0 (_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__CompositorBringToFront::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CompositorBringToFront_BeginInvoke_m5A0C59F233BC0F8519468744191895652E8E747B (_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__CompositorBringToFront::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _CompositorBringToFront_EndInvoke_m11AC545C6844652D85FDB89577ADFDE2AFCEAA54 (_CompositorBringToFront_t7B9D47C2E1577ED9CC1EE19F323913A2BDB2B6AD * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E (_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__CompositorDumpImages::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CompositorDumpImages__ctor_m0B1CA3ED1D07515991FD8F3D6B4B88FCEEEF3202 (_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__CompositorDumpImages::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _CompositorDumpImages_Invoke_m7E98E639936B11F8809EA657F4A59CF930363862 (_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__CompositorDumpImages::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CompositorDumpImages_BeginInvoke_mED457C364F95241AD26749D4826DD3EF48153A35 (_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__CompositorDumpImages::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _CompositorDumpImages_EndInvoke_m184CEE3A604CDEAD1AFD6A4ACDA69AA86C86F114 (_CompositorDumpImages_tB402107FC21B869DF07D94E932CCC1C425ADD35E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 (_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__CompositorGoToBack::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CompositorGoToBack__ctor_m8FD2C7576A71EE052C76A8E9ADBA3C7D0D5A0346 (_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__CompositorGoToBack::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _CompositorGoToBack_Invoke_m8C5D02885FC32A36034EAECC414AF8B841F65964 (_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__CompositorGoToBack::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CompositorGoToBack_BeginInvoke_m280F68FC0EE8223F75B8A1419CBC225A39769D13 (_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__CompositorGoToBack::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _CompositorGoToBack_EndInvoke_mBF6FB88FBD330EB37B6368109CA752883F8A92CF (_CompositorGoToBack_t3D458833C89823D3A58E7B2955B286B2CAEABF84 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 (_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__CompositorQuit::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CompositorQuit__ctor_m998251D64F8EA961837BFD2E69588D5FA736A42C (_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__CompositorQuit::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _CompositorQuit_Invoke_m9285E47FB883770DE4438E49C33AB18956B0A594 (_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__CompositorQuit::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CompositorQuit_BeginInvoke_m965C0108DF1C1919DCF5CAEBFE553EA8E974409A (_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__CompositorQuit::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _CompositorQuit_EndInvoke_m81CE3F34DD769DEC8D09569F4D907BBB1226A9F8 (_CompositorQuit_tB47A02DB537B79B3C952A8D080F420EEC4839BD9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F (_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F * __this, float ___fSeconds0, bool ___bFadeIn1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(float, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___fSeconds0, static_cast<int32_t>(___bFadeIn1));

}
// System.Void Valve.VR.IVRCompositor__FadeGrid::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FadeGrid__ctor_m10302191EEAD68E2216B4A8BB0E3D7CB9FB3149D (_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__FadeGrid::Invoke(System.Single,System.Boolean)
extern "C" IL2CPP_METHOD_ATTR void _FadeGrid_Invoke_m2A836FA604A5F0178CFFD62B85A66ABF1B6428A1 (_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F * __this, float ___fSeconds0, bool ___bFadeIn1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef void (*FunctionPointerType) (float, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fSeconds0, ___bFadeIn1, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, float, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fSeconds0, ___bFadeIn1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (float, bool, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___fSeconds0, ___bFadeIn1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< float, bool >::Invoke(targetMethod, targetThis, ___fSeconds0, ___bFadeIn1);
							else
								GenericVirtActionInvoker2< float, bool >::Invoke(targetMethod, targetThis, ___fSeconds0, ___bFadeIn1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< float, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fSeconds0, ___bFadeIn1);
							else
								VirtActionInvoker2< float, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fSeconds0, ___bFadeIn1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, float, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fSeconds0, ___bFadeIn1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (float, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fSeconds0, ___bFadeIn1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, float, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fSeconds0, ___bFadeIn1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (float, bool, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___fSeconds0, ___bFadeIn1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< float, bool >::Invoke(targetMethod, targetThis, ___fSeconds0, ___bFadeIn1);
						else
							GenericVirtActionInvoker2< float, bool >::Invoke(targetMethod, targetThis, ___fSeconds0, ___bFadeIn1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< float, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fSeconds0, ___bFadeIn1);
						else
							VirtActionInvoker2< float, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fSeconds0, ___bFadeIn1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, float, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fSeconds0, ___bFadeIn1, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__FadeGrid::BeginInvoke(System.Single,System.Boolean,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _FadeGrid_BeginInvoke_m11CB69F61BF5155423B773BAD5DB326E1B989B7E (_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F * __this, float ___fSeconds0, bool ___bFadeIn1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FadeGrid_BeginInvoke_m11CB69F61BF5155423B773BAD5DB326E1B989B7E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fSeconds0);
	__d_args[1] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bFadeIn1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVRCompositor__FadeGrid::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _FadeGrid_EndInvoke_m46EDD23E67FC2A436221EC98AE5D619C4FDA7085 (_FadeGrid_t592CCF8F0AD70D570FE4B808117A6CF41DA3E29F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D (_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D * __this, float ___fSeconds0, float ___fRed1, float ___fGreen2, float ___fBlue3, float ___fAlpha4, bool ___bBackground5, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(float, float, float, float, float, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, static_cast<int32_t>(___bBackground5));

}
// System.Void Valve.VR.IVRCompositor__FadeToColor::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FadeToColor__ctor_m3624B1902687BAB75397A18B8E8FEC5CA1822F6F (_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__FadeToColor::Invoke(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)
extern "C" IL2CPP_METHOD_ATTR void _FadeToColor_Invoke_mDCF75DDE4259171AC23FA0740088486A2709F90D (_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D * __this, float ___fSeconds0, float ___fRed1, float ___fGreen2, float ___fBlue3, float ___fAlpha4, bool ___bBackground5, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 6)
				{
					// open
					typedef void (*FunctionPointerType) (float, float, float, float, float, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, float, float, float, float, float, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (float, float, float, float, float, bool, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker6< float, float, float, float, float, bool >::Invoke(targetMethod, targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5);
							else
								GenericVirtActionInvoker6< float, float, float, float, float, bool >::Invoke(targetMethod, targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker6< float, float, float, float, float, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5);
							else
								VirtActionInvoker6< float, float, float, float, float, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, float, float, float, float, float, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef void (*FunctionPointerType) (float, float, float, float, float, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, float, float, float, float, float, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (float, float, float, float, float, bool, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker6< float, float, float, float, float, bool >::Invoke(targetMethod, targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5);
						else
							GenericVirtActionInvoker6< float, float, float, float, float, bool >::Invoke(targetMethod, targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker6< float, float, float, float, float, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5);
						else
							VirtActionInvoker6< float, float, float, float, float, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, float, float, float, float, float, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___fSeconds0, ___fRed1, ___fGreen2, ___fBlue3, ___fAlpha4, ___bBackground5, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__FadeToColor::BeginInvoke(System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _FadeToColor_BeginInvoke_m324D8B0FEF135F5032DADF4A0A8D53E1F1B4F352 (_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D * __this, float ___fSeconds0, float ___fRed1, float ___fGreen2, float ___fBlue3, float ___fAlpha4, bool ___bBackground5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FadeToColor_BeginInvoke_m324D8B0FEF135F5032DADF4A0A8D53E1F1B4F352_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[7] = {0};
	__d_args[0] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fSeconds0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fRed1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fGreen2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fBlue3);
	__d_args[4] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fAlpha4);
	__d_args[5] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bBackground5);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// System.Void Valve.VR.IVRCompositor__FadeToColor::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _FadeToColor_EndInvoke_mBE9790E1A46A8A76E0B5F9A937EE5BCE60636B01 (_FadeToColor_tDD35E2B2B4FC292F4FEFD6AC0C44162A5B75A13D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D (_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D * __this, bool ___bOverride0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(static_cast<int32_t>(___bOverride0));

}
// System.Void Valve.VR.IVRCompositor__ForceInterleavedReprojectionOn::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ForceInterleavedReprojectionOn__ctor_m2EFADA891398F7E8A4D7C39B56DD6F1DD5E83DE8 (_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__ForceInterleavedReprojectionOn::Invoke(System.Boolean)
extern "C" IL2CPP_METHOD_ATTR void _ForceInterleavedReprojectionOn_Invoke_m337F5D12B4BF18BDCB8035CD3964255E9EEF7224 (_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D * __this, bool ___bOverride0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___bOverride0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___bOverride0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (bool, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___bOverride0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, targetThis, ___bOverride0);
							else
								GenericVirtActionInvoker1< bool >::Invoke(targetMethod, targetThis, ___bOverride0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bOverride0);
							else
								VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bOverride0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___bOverride0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___bOverride0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___bOverride0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (bool, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___bOverride0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, targetThis, ___bOverride0);
						else
							GenericVirtActionInvoker1< bool >::Invoke(targetMethod, targetThis, ___bOverride0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bOverride0);
						else
							VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bOverride0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___bOverride0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__ForceInterleavedReprojectionOn::BeginInvoke(System.Boolean,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ForceInterleavedReprojectionOn_BeginInvoke_m42A36CC5B939C99B580063CFFA47D5E5D451D93B (_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D * __this, bool ___bOverride0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ForceInterleavedReprojectionOn_BeginInvoke_m42A36CC5B939C99B580063CFFA47D5E5D451D93B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bOverride0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRCompositor__ForceInterleavedReprojectionOn::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _ForceInterleavedReprojectionOn_EndInvoke_m6093454C8C085C5578EAF7917D7D97D294C89CFE (_ForceInterleavedReprojectionOn_t56291E564F2FFAF37BF30DB1D7A6968613EB993D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 (_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__ForceReconnectProcess::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ForceReconnectProcess__ctor_m654547ACDFCB34554371A8F33B73606DAA438AE6 (_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__ForceReconnectProcess::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _ForceReconnectProcess_Invoke_mD91E2BDB1D67AEBFA18B1F7687FA020EE04FAADB (_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__ForceReconnectProcess::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ForceReconnectProcess_BeginInvoke_m6004268C0008B547F878296EE707C5FCD85B4A4F (_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__ForceReconnectProcess::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _ForceReconnectProcess_EndInvoke_m3C77BB2E19D6D57E2F792DFB45BA7E6D8F934D05 (_ForceReconnectProcess_t74B5772BEA384B92E20EB08F3E865C17BA48BB22 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 (_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 * __this, Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 * ___pStats0, uint32_t ___nStatsSizeInBytes1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pStats0, ___nStatsSizeInBytes1);

}
// System.Void Valve.VR.IVRCompositor__GetCumulativeStats::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetCumulativeStats__ctor_m0BF1583BFFFC6ED68B6835D3BCAD5793360112B3 (_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__GetCumulativeStats::Invoke(Valve.VR.Compositor_CumulativeStatsU26,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR void _GetCumulativeStats_Invoke_mA44EBC667083E6066B79FBB94284B549E7CCDCD2 (_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 * __this, Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 * ___pStats0, uint32_t ___nStatsSizeInBytes1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef void (*FunctionPointerType) (Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pStats0, ___nStatsSizeInBytes1, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pStats0, ___nStatsSizeInBytes1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pStats0, ___nStatsSizeInBytes1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t >::Invoke(targetMethod, targetThis, ___pStats0, ___nStatsSizeInBytes1);
							else
								GenericVirtActionInvoker2< Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t >::Invoke(targetMethod, targetThis, ___pStats0, ___nStatsSizeInBytes1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pStats0, ___nStatsSizeInBytes1);
							else
								VirtActionInvoker2< Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pStats0, ___nStatsSizeInBytes1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pStats0, ___nStatsSizeInBytes1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pStats0, ___nStatsSizeInBytes1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pStats0, ___nStatsSizeInBytes1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pStats0, ___nStatsSizeInBytes1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t >::Invoke(targetMethod, targetThis, ___pStats0, ___nStatsSizeInBytes1);
						else
							GenericVirtActionInvoker2< Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t >::Invoke(targetMethod, targetThis, ___pStats0, ___nStatsSizeInBytes1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pStats0, ___nStatsSizeInBytes1);
						else
							VirtActionInvoker2< Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pStats0, ___nStatsSizeInBytes1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 *, uint32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pStats0, ___nStatsSizeInBytes1, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetCumulativeStats::BeginInvoke(Valve.VR.Compositor_CumulativeStatsU26,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetCumulativeStats_BeginInvoke_m30D259679A7834DAEA69672C8B6382AF077A652E (_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 * __this, Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 * ___pStats0, uint32_t ___nStatsSizeInBytes1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetCumulativeStats_BeginInvoke_m30D259679A7834DAEA69672C8B6382AF077A652E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4_il2cpp_TypeInfo_var, &*___pStats0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___nStatsSizeInBytes1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVRCompositor__GetCumulativeStats::EndInvoke(Valve.VR.Compositor_CumulativeStatsU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _GetCumulativeStats_EndInvoke_mB8AE2ADFA7BCE58A0E0DD601EFB4992FB103F624 (_GetCumulativeStats_t4A2719788AFE48A661FCF771E49A2BF5D73C52E3 * __this, Compositor_CumulativeStats_t41A337C26B150FB6064D9961160C755B427016E4 * ___pStats0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pStats0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  DelegatePInvokeWrapper__GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF (_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF * __this, bool ___bBackground0, const RuntimeMethod* method)
{
	typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  returnValue = il2cppPInvokeFunc(static_cast<int32_t>(___bBackground0));

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetCurrentFadeColor::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetCurrentFadeColor__ctor_mB00249B9AF79AEB75651FA05FDE45F68A98554D8 (_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.HmdColor_t Valve.VR.IVRCompositor__GetCurrentFadeColor::Invoke(System.Boolean)
extern "C" IL2CPP_METHOD_ATTR HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  _GetCurrentFadeColor_Invoke_m8D37AF847264C2AA2ACBDDBFBE929D2D38AC6CF4 (_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF * __this, bool ___bBackground0, const RuntimeMethod* method)
{
	HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  result;
	memset(&result, 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (*FunctionPointerType) (bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___bBackground0, targetMethod);
				}
				else
				{
					// closed
					typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bBackground0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (*FunctionPointerType) (bool, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___bBackground0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 , bool >::Invoke(targetMethod, targetThis, ___bBackground0);
							else
								result = GenericVirtFuncInvoker1< HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 , bool >::Invoke(targetMethod, targetThis, ___bBackground0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 , bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bBackground0);
							else
								result = VirtFuncInvoker1< HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 , bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bBackground0);
						}
					}
				}
				else
				{
					typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bBackground0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (*FunctionPointerType) (bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___bBackground0, targetMethod);
			}
			else
			{
				// closed
				typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bBackground0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (*FunctionPointerType) (bool, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___bBackground0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 , bool >::Invoke(targetMethod, targetThis, ___bBackground0);
						else
							result = GenericVirtFuncInvoker1< HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 , bool >::Invoke(targetMethod, targetThis, ___bBackground0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 , bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bBackground0);
						else
							result = VirtFuncInvoker1< HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 , bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bBackground0);
					}
				}
			}
			else
			{
				typedef HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bBackground0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetCurrentFadeColor::BeginInvoke(System.Boolean,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetCurrentFadeColor_BeginInvoke_mB68AD166F5C96805297761DC985619DFDE4168E4 (_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF * __this, bool ___bBackground0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetCurrentFadeColor_BeginInvoke_mB68AD166F5C96805297761DC985619DFDE4168E4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bBackground0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.HmdColor_t Valve.VR.IVRCompositor__GetCurrentFadeColor::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5  _GetCurrentFadeColor_EndInvoke_mCD7A6BBAA132CFB7717DC04DEF39A0FE22ADFF56 (_GetCurrentFadeColor_t0D7ED8F4B9A0810F461DC413EBE923FC13F629BF * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  float DelegatePInvokeWrapper__GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 (_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 * __this, const RuntimeMethod* method)
{
	typedef float (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	float returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetCurrentGridAlpha::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetCurrentGridAlpha__ctor_m9CF4A917D808181C8B31A11027FA6135A5347321 (_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Single Valve.VR.IVRCompositor__GetCurrentGridAlpha::Invoke()
extern "C" IL2CPP_METHOD_ATTR float _GetCurrentGridAlpha_Invoke_m2BBB9971C38D1664C64F4A0DE5956E3D396ACA9A (_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 * __this, const RuntimeMethod* method)
{
	float result = 0.0f;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef float (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef float (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< float >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< float >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef float (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef float (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef float (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< float >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< float >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef float (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetCurrentGridAlpha::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetCurrentGridAlpha_BeginInvoke_mEF28CC2D96F9A516F736FF4E167CD708FB0EEC93 (_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Single Valve.VR.IVRCompositor__GetCurrentGridAlpha::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR float _GetCurrentGridAlpha_EndInvoke_m8F0DA321AB0B4FA18E76997E34694A33695870DE (_GetCurrentGridAlpha_t83FE87F63BFCAAEDB11D43FB4551762BB5F5D078 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(float*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF (_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF * __this, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetCurrentSceneFocusProcess::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetCurrentSceneFocusProcess__ctor_m1C0E87A364FA94248405AFA8A195E76FA24731AD (_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRCompositor__GetCurrentSceneFocusProcess::Invoke()
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetCurrentSceneFocusProcess_Invoke_m9DB90D6FC34F6E1C1470F6ED1A0AA06128BFE766 (_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF * __this, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetCurrentSceneFocusProcess::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetCurrentSceneFocusProcess_BeginInvoke_mB4385A3B2B02A6BCB028FF092906FE9D8EB6DDCA (_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt32 Valve.VR.IVRCompositor__GetCurrentSceneFocusProcess::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetCurrentSceneFocusProcess_EndInvoke_m0FC8599A13A753C77D338123EBB3BEBCE75B5F9E (_GetCurrentSceneFocusProcess_t87D7A955D7579B6FB926BE17DD720BB887DB26FF * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  float DelegatePInvokeWrapper__GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 (_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 * __this, const RuntimeMethod* method)
{
	typedef float (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	float returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetFrameTimeRemaining::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetFrameTimeRemaining__ctor_m6D4F480BCAED6D313026D81FF88D155CB3B18907 (_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Single Valve.VR.IVRCompositor__GetFrameTimeRemaining::Invoke()
extern "C" IL2CPP_METHOD_ATTR float _GetFrameTimeRemaining_Invoke_mA08271CC9DACF5BDF6E0C4EF9CF5B253D3B64619 (_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 * __this, const RuntimeMethod* method)
{
	float result = 0.0f;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef float (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef float (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< float >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< float >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef float (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef float (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef float (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< float >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< float >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef float (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetFrameTimeRemaining::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetFrameTimeRemaining_BeginInvoke_m2697EEA4FA600EC98DEE5B1DBE939C671EA17C50 (_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Single Valve.VR.IVRCompositor__GetFrameTimeRemaining::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR float _GetFrameTimeRemaining_EndInvoke_m235CA04BFBE3509FC34BBF83A058EE4F1D75F6E0 (_GetFrameTimeRemaining_t275425ABD252468EB2DC72C6E390C2C678750008 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(float*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 (_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 * __this, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 * ___pTiming0, uint32_t ___unFramesAgo1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___pTiming0, ___unFramesAgo1);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRCompositor__GetFrameTiming::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetFrameTiming__ctor_m716175CF7CC7BE8F955CCC60B5A1210983E7C0EC (_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRCompositor__GetFrameTiming::Invoke(Valve.VR.Compositor_FrameTimingU26,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR bool _GetFrameTiming_Invoke_mA5BF72569BB2F31144BF994551D4F2E6C6D6E218 (_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 * __this, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 * ___pTiming0, uint32_t ___unFramesAgo1, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef bool (*FunctionPointerType) (Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pTiming0, ___unFramesAgo1, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTiming0, ___unFramesAgo1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pTiming0, ___unFramesAgo1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< bool, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(targetMethod, targetThis, ___pTiming0, ___unFramesAgo1);
							else
								result = GenericVirtFuncInvoker2< bool, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(targetMethod, targetThis, ___pTiming0, ___unFramesAgo1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< bool, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTiming0, ___unFramesAgo1);
							else
								result = VirtFuncInvoker2< bool, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTiming0, ___unFramesAgo1);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTiming0, ___unFramesAgo1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef bool (*FunctionPointerType) (Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pTiming0, ___unFramesAgo1, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTiming0, ___unFramesAgo1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pTiming0, ___unFramesAgo1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< bool, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(targetMethod, targetThis, ___pTiming0, ___unFramesAgo1);
						else
							result = GenericVirtFuncInvoker2< bool, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(targetMethod, targetThis, ___pTiming0, ___unFramesAgo1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< bool, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTiming0, ___unFramesAgo1);
						else
							result = VirtFuncInvoker2< bool, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTiming0, ___unFramesAgo1);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTiming0, ___unFramesAgo1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetFrameTiming::BeginInvoke(Valve.VR.Compositor_FrameTimingU26,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetFrameTiming_BeginInvoke_mC622BE60AFBB1874D53E09AB5391FD24845193E1 (_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 * __this, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 * ___pTiming0, uint32_t ___unFramesAgo1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetFrameTiming_BeginInvoke_mC622BE60AFBB1874D53E09AB5391FD24845193E1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236_il2cpp_TypeInfo_var, &*___pTiming0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unFramesAgo1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Boolean Valve.VR.IVRCompositor__GetFrameTiming::EndInvoke(Valve.VR.Compositor_FrameTimingU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _GetFrameTiming_EndInvoke_m146DC21214D10FDD789FA8E962BDBB4FD0BE14C6 (_GetFrameTiming_tF6E94FCFBB71F7BC156B2770EC2D0EA298765AE3 * __this, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 * ___pTiming0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pTiming0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 (_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 * __this, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 * ___pTiming0, uint32_t ___nFrames1, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___pTiming0, ___nFrames1);

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetFrameTimings::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetFrameTimings__ctor_mF0FBCDE970891DE12C5F9C29CF9DA7FB5EDBA807 (_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRCompositor__GetFrameTimings::Invoke(Valve.VR.Compositor_FrameTimingU26,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetFrameTimings_Invoke_m994629AF7892FB711358DB480CA5C850A0FC8E76 (_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 * __this, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 * ___pTiming0, uint32_t ___nFrames1, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pTiming0, ___nFrames1, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTiming0, ___nFrames1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pTiming0, ___nFrames1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< uint32_t, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(targetMethod, targetThis, ___pTiming0, ___nFrames1);
							else
								result = GenericVirtFuncInvoker2< uint32_t, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(targetMethod, targetThis, ___pTiming0, ___nFrames1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< uint32_t, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTiming0, ___nFrames1);
							else
								result = VirtFuncInvoker2< uint32_t, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTiming0, ___nFrames1);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTiming0, ___nFrames1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pTiming0, ___nFrames1, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTiming0, ___nFrames1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pTiming0, ___nFrames1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< uint32_t, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(targetMethod, targetThis, ___pTiming0, ___nFrames1);
						else
							result = GenericVirtFuncInvoker2< uint32_t, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(targetMethod, targetThis, ___pTiming0, ___nFrames1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< uint32_t, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTiming0, ___nFrames1);
						else
							result = VirtFuncInvoker2< uint32_t, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTiming0, ___nFrames1);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTiming0, ___nFrames1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetFrameTimings::BeginInvoke(Valve.VR.Compositor_FrameTimingU26,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetFrameTimings_BeginInvoke_mCB5237158FFAFDBE228F896328F66EA7F857EB0F (_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 * __this, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 * ___pTiming0, uint32_t ___nFrames1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetFrameTimings_BeginInvoke_mCB5237158FFAFDBE228F896328F66EA7F857EB0F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236_il2cpp_TypeInfo_var, &*___pTiming0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___nFrames1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.UInt32 Valve.VR.IVRCompositor__GetFrameTimings::EndInvoke(Valve.VR.Compositor_FrameTimingU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetFrameTimings_EndInvoke_m10246DB6D97FE533C5AB17957C76B63E3C870FB5 (_GetFrameTimings_tE92F3C78FA118B60DF49538ABA68EFB7FE278921 * __this, Compositor_FrameTiming_tA18BEF5CC65929D8D91685376559EB62BAEDF236 * ___pTiming0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pTiming0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 (_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 * __this, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetLastFrameRenderer::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetLastFrameRenderer__ctor_mE6C4E18565858382BF06FD48CA82F70E585C8102 (_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRCompositor__GetLastFrameRenderer::Invoke()
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetLastFrameRenderer_Invoke_mC8DC88EEEB880B08349EBEED3E01795A167A2D1D (_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 * __this, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetLastFrameRenderer::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetLastFrameRenderer_BeginInvoke_m0BB8F07C52FDF441B0333449527E0704D17ED2E1 (_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt32 Valve.VR.IVRCompositor__GetLastFrameRenderer::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetLastFrameRenderer_EndInvoke_m4F4ECA62914AA6397BF23BFAA52DC4944D2D1F03 (_GetLastFrameRenderer_tC74B42E65FC6633086250B14EA21C0B38C917114 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA (_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA * __this, uint32_t ___unDeviceIndex0, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ___pOutputPose1, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ___pOutputGamePose2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetLastPoseForTrackedDeviceIndex::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetLastPoseForTrackedDeviceIndex__ctor_mD29B1FD1AD054E7F20F10596B8A775B2F7E974B3 (_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__GetLastPoseForTrackedDeviceIndex::Invoke(System.UInt32,Valve.VR.TrackedDevicePose_tU26,Valve.VR.TrackedDevicePose_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetLastPoseForTrackedDeviceIndex_Invoke_m9A80CE8B6A6849B0065A28F01881449F5D110BEE (_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA * __this, uint32_t ___unDeviceIndex0, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ___pOutputPose1, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ___pOutputGamePose2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * >::Invoke(targetMethod, targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * >::Invoke(targetMethod, targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);
							else
								result = VirtFuncInvoker3< int32_t, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * >::Invoke(targetMethod, targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * >::Invoke(targetMethod, targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);
						else
							result = VirtFuncInvoker3< int32_t, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unDeviceIndex0, ___pOutputPose1, ___pOutputGamePose2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetLastPoseForTrackedDeviceIndex::BeginInvoke(System.UInt32,Valve.VR.TrackedDevicePose_tU26,Valve.VR.TrackedDevicePose_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetLastPoseForTrackedDeviceIndex_BeginInvoke_m1BDB80A09CD3B8E53A895D2EF8C16605A7FAF944 (_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA * __this, uint32_t ___unDeviceIndex0, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ___pOutputPose1, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ___pOutputGamePose2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetLastPoseForTrackedDeviceIndex_BeginInvoke_m1BDB80A09CD3B8E53A895D2EF8C16605A7FAF944_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unDeviceIndex0);
	__d_args[1] = Box(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6_il2cpp_TypeInfo_var, &*___pOutputPose1);
	__d_args[2] = Box(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6_il2cpp_TypeInfo_var, &*___pOutputGamePose2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__GetLastPoseForTrackedDeviceIndex::EndInvoke(Valve.VR.TrackedDevicePose_tU26,Valve.VR.TrackedDevicePose_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetLastPoseForTrackedDeviceIndex_EndInvoke_m0198CD61341D5ECD83D5E023EB539117FF4ECEB9 (_GetLastPoseForTrackedDeviceIndex_tD82982CADCA7E92E703A2F28E661A923CBE4C0BA * __this, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ___pOutputPose0, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ___pOutputGamePose1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOutputPose0,
	___pOutputGamePose1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 (_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 * __this, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pRenderPoseArray0, uint32_t ___unRenderPoseArrayCount1, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pGamePoseArray2, uint32_t ___unGamePoseArrayCount3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pRenderPoseArray0U27 to native representation
	TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ____pRenderPoseArray0_marshaled = NULL;
	if (___pRenderPoseArray0 != NULL)
	{
		____pRenderPoseArray0_marshaled = reinterpret_cast<TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *>((___pRenderPoseArray0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter U27___pGamePoseArray2U27 to native representation
	TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ____pGamePoseArray2_marshaled = NULL;
	if (___pGamePoseArray2 != NULL)
	{
		____pGamePoseArray2_marshaled = reinterpret_cast<TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *>((___pGamePoseArray2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pRenderPoseArray0_marshaled, ___unRenderPoseArrayCount1, ____pGamePoseArray2_marshaled, ___unGamePoseArrayCount3);

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetLastPoses::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetLastPoses__ctor_m6C6855CEB5B7EDFC7234B3BD1840038F3513AF00 (_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__GetLastPoses::Invoke(Valve.VR.TrackedDevicePose_t[],System.UInt32,Valve.VR.TrackedDevicePose_t[],System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetLastPoses_Invoke_mF578B54995EE1EA8C3232512DB40E8D05F1E64D1 (_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 * __this, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pRenderPoseArray0, uint32_t ___unRenderPoseArrayCount1, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pGamePoseArray2, uint32_t ___unGamePoseArrayCount3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(targetMethod, targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
							else
								result = GenericVirtFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(targetMethod, targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
							else
								result = VirtFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(targetMethod, targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
						else
							result = GenericVirtFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(targetMethod, targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
						else
							result = VirtFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetLastPoses::BeginInvoke(Valve.VR.TrackedDevicePose_t[],System.UInt32,Valve.VR.TrackedDevicePose_t[],System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetLastPoses_BeginInvoke_m819BE9A57EF7E3793E3408C9AB20FE6566C4A2D3 (_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 * __this, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pRenderPoseArray0, uint32_t ___unRenderPoseArrayCount1, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pGamePoseArray2, uint32_t ___unGamePoseArrayCount3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetLastPoses_BeginInvoke_m819BE9A57EF7E3793E3408C9AB20FE6566C4A2D3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pRenderPoseArray0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unRenderPoseArrayCount1);
	__d_args[2] = ___pGamePoseArray2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unGamePoseArrayCount3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__GetLastPoses::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetLastPoses_EndInvoke_m37BA34E9D883AA3E4FC6D1AD704D8E24E5B23B4C (_GetLastPoses_tEF4B98656C1416924E72E274A66EF675E212A952 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E (_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E * __this, int32_t ___eEye0, intptr_t ___pD3D11DeviceOrResource1, intptr_t* ___ppD3D11ShaderResourceView2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, intptr_t, intptr_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetMirrorTextureD3D11::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetMirrorTextureD3D11__ctor_mA9F376CF4A3A994AB8C4433B6416AD8A64BFAF47 (_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__GetMirrorTextureD3D11::Invoke(Valve.VR.EVREye,System.IntPtr,System.IntPtrU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetMirrorTextureD3D11_Invoke_m971292F69292E7CD306B9AECAF3161E5E5D47268 (_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E * __this, int32_t ___eEye0, intptr_t ___pD3D11DeviceOrResource1, intptr_t* ___ppD3D11ShaderResourceView2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);
							else
								result = GenericVirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);
							else
								result = VirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);
						else
							result = GenericVirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);
						else
							result = VirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pD3D11DeviceOrResource1, ___ppD3D11ShaderResourceView2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetMirrorTextureD3D11::BeginInvoke(Valve.VR.EVREye,System.IntPtr,System.IntPtrU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetMirrorTextureD3D11_BeginInvoke_m83FBB7DD0F00AB1B7FF88F6AAE0C8C8DCC4BD2E7 (_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E * __this, int32_t ___eEye0, intptr_t ___pD3D11DeviceOrResource1, intptr_t* ___ppD3D11ShaderResourceView2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetMirrorTextureD3D11_BeginInvoke_m83FBB7DD0F00AB1B7FF88F6AAE0C8C8DCC4BD2E7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(EVREye_t4097B73599986F5B774296C51091EF53A629C2FD_il2cpp_TypeInfo_var, &___eEye0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pD3D11DeviceOrResource1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___ppD3D11ShaderResourceView2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__GetMirrorTextureD3D11::EndInvoke(System.IntPtrU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetMirrorTextureD3D11_EndInvoke_m3C8039D2219ED8C9E59EF1E903C65F4401F4909C (_GetMirrorTextureD3D11_t34FC6648AA56D3FF3655506C3F87B1228512B12E * __this, intptr_t* ___ppD3D11ShaderResourceView0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ppD3D11ShaderResourceView0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B (_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B * __this, int32_t ___eEye0, uint32_t* ___pglTextureId1, intptr_t ___pglSharedTextureHandle2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, uint32_t*, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetMirrorTextureGL::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetMirrorTextureGL__ctor_mF55216F93FC546390FDABEE3B993D182CB9009C5 (_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__GetMirrorTextureGL::Invoke(Valve.VR.EVREye,System.UInt32U26,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetMirrorTextureGL_Invoke_m02964DA43040DFA039F1B3340B7786D2E0B30C08 (_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B * __this, int32_t ___eEye0, uint32_t* ___pglTextureId1, intptr_t ___pglSharedTextureHandle2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, uint32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, uint32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, uint32_t*, intptr_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, int32_t, uint32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);
							else
								result = GenericVirtFuncInvoker3< int32_t, int32_t, uint32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, int32_t, uint32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);
							else
								result = VirtFuncInvoker3< int32_t, int32_t, uint32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, uint32_t*, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, uint32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, uint32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, uint32_t*, intptr_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, int32_t, uint32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);
						else
							result = GenericVirtFuncInvoker3< int32_t, int32_t, uint32_t*, intptr_t >::Invoke(targetMethod, targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, int32_t, uint32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);
						else
							result = VirtFuncInvoker3< int32_t, int32_t, uint32_t*, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, uint32_t*, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pglTextureId1, ___pglSharedTextureHandle2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetMirrorTextureGL::BeginInvoke(Valve.VR.EVREye,System.UInt32U26,System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetMirrorTextureGL_BeginInvoke_m4661CDB6AA9222D2A9FBD29CCE52C08FF009A69D (_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B * __this, int32_t ___eEye0, uint32_t* ___pglTextureId1, intptr_t ___pglSharedTextureHandle2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetMirrorTextureGL_BeginInvoke_m4661CDB6AA9222D2A9FBD29CCE52C08FF009A69D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(EVREye_t4097B73599986F5B774296C51091EF53A629C2FD_il2cpp_TypeInfo_var, &___eEye0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pglTextureId1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pglSharedTextureHandle2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__GetMirrorTextureGL::EndInvoke(System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetMirrorTextureGL_EndInvoke_m7227F234F287AF28D174B1D6A3A7DB37C0945058 (_GetMirrorTextureGL_t5CDB6081A29E68B453958F526EDD2261EEFF2E6B * __this, uint32_t* ___pglTextureId0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pglTextureId0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B (_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B * __this, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetTrackingSpace::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetTrackingSpace__ctor_m35B03C35216084008931E96704A9110A10FA6271 (_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.ETrackingUniverseOrigin Valve.VR.IVRCompositor__GetTrackingSpace::Invoke()
extern "C" IL2CPP_METHOD_ATTR int32_t _GetTrackingSpace_Invoke_mF189BF1011C57408510B97656E4E3CB08CC4CEEC (_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B * __this, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef int32_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< int32_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< int32_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef int32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< int32_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< int32_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetTrackingSpace::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetTrackingSpace_BeginInvoke_m312376417E6B07046023B146BAB37BCE29542DA4 (_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// Valve.VR.ETrackingUniverseOrigin Valve.VR.IVRCompositor__GetTrackingSpace::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetTrackingSpace_EndInvoke_m42DC0072EE31137547C96D7E19B440FE70BA9EB7 (_GetTrackingSpace_tCB423A7DB8DE7DFF521DE98E723D768DC3E0E86B * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 (_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 * __this, intptr_t ___pPhysicalDevice0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(intptr_t, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchValue1U27 to native representation
	char* ____pchValue1_marshaled = NULL;
	____pchValue1_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___pPhysicalDevice0, ____pchValue1_marshaled, ___unBufferSize2);

	// Marshaling of parameter U27___pchValue1U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue1, ____pchValue1_marshaled);

	// Marshaling cleanup of parameter U27___pchValue1U27 native representation
	il2cpp_codegen_marshal_free(____pchValue1_marshaled);
	____pchValue1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetVulkanDeviceExtensionsRequired::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetVulkanDeviceExtensionsRequired__ctor_m71939B25FE58924DEB842614B4F221E1F8014AA8 (_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRCompositor__GetVulkanDeviceExtensionsRequired::Invoke(System.IntPtr,System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetVulkanDeviceExtensionsRequired_Invoke_m4ECD6CBFD8A95F3CCE257A9B331791BB49F7B722 (_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 * __this, intptr_t ___pPhysicalDevice0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (intptr_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pPhysicalDevice0, ___pchValue1, ___unBufferSize2, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, intptr_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (intptr_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pPhysicalDevice0, ___pchValue1, ___unBufferSize2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, intptr_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2);
							else
								result = GenericVirtFuncInvoker3< uint32_t, intptr_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, intptr_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2);
							else
								result = VirtFuncInvoker3< uint32_t, intptr_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, intptr_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (intptr_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pPhysicalDevice0, ___pchValue1, ___unBufferSize2, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, intptr_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (intptr_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pPhysicalDevice0, ___pchValue1, ___unBufferSize2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, intptr_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2);
						else
							result = GenericVirtFuncInvoker3< uint32_t, intptr_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, intptr_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2);
						else
							result = VirtFuncInvoker3< uint32_t, intptr_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, intptr_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pPhysicalDevice0, ___pchValue1, ___unBufferSize2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetVulkanDeviceExtensionsRequired::BeginInvoke(System.IntPtr,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetVulkanDeviceExtensionsRequired_BeginInvoke_m8DA3F5D290360C36D9A831EC9D6CF0464E23AAA5 (_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 * __this, intptr_t ___pPhysicalDevice0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetVulkanDeviceExtensionsRequired_BeginInvoke_m8DA3F5D290360C36D9A831EC9D6CF0464E23AAA5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pPhysicalDevice0);
	__d_args[1] = ___pchValue1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.UInt32 Valve.VR.IVRCompositor__GetVulkanDeviceExtensionsRequired::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetVulkanDeviceExtensionsRequired_EndInvoke_m29B47AF513ED646909F93FBBFFF02D3F9F0C05E9 (_GetVulkanDeviceExtensionsRequired_t96256DC2669D7EADB30A1FFB7DD1DBDB64649D99 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 (_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 * __this, StringBuilder_t * ___pchValue0, uint32_t ___unBufferSize1, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchValue0U27 to native representation
	char* ____pchValue0_marshaled = NULL;
	____pchValue0_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue0);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchValue0_marshaled, ___unBufferSize1);

	// Marshaling of parameter U27___pchValue0U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue0, ____pchValue0_marshaled);

	// Marshaling cleanup of parameter U27___pchValue0U27 native representation
	il2cpp_codegen_marshal_free(____pchValue0_marshaled);
	____pchValue0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__GetVulkanInstanceExtensionsRequired::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetVulkanInstanceExtensionsRequired__ctor_m23D377DC3E58A516A68D1D42FE2C7AF9BB8BC6D8 (_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRCompositor__GetVulkanInstanceExtensionsRequired::Invoke(System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetVulkanInstanceExtensionsRequired_Invoke_m707A35C6DF2404CDF589EC11C3D30FF88EA4E74E (_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 * __this, StringBuilder_t * ___pchValue0, uint32_t ___unBufferSize1, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchValue0, ___unBufferSize1, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchValue0, ___unBufferSize1, targetMethod);
				}
			}
			else if (___parameterCount != 2)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchValue0, ___unBufferSize1);
							else
								result = GenericVirtFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchValue0, ___unBufferSize1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchValue0, ___unBufferSize1);
							else
								result = VirtFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchValue0, ___unBufferSize1);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchValue0, ___unBufferSize1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchValue0, ___unBufferSize1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchValue0, ___unBufferSize1);
							else
								result = GenericVirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchValue0, ___unBufferSize1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchValue0, ___unBufferSize1);
							else
								result = VirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchValue0, ___unBufferSize1);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchValue0, ___unBufferSize1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchValue0, ___unBufferSize1, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchValue0, ___unBufferSize1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchValue0, ___unBufferSize1);
						else
							result = GenericVirtFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchValue0, ___unBufferSize1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchValue0, ___unBufferSize1);
						else
							result = VirtFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchValue0, ___unBufferSize1);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchValue0, ___unBufferSize1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchValue0, ___unBufferSize1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchValue0, ___unBufferSize1);
						else
							result = GenericVirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchValue0, ___unBufferSize1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchValue0, ___unBufferSize1);
						else
							result = VirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchValue0, ___unBufferSize1);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchValue0, ___unBufferSize1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__GetVulkanInstanceExtensionsRequired::BeginInvoke(System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetVulkanInstanceExtensionsRequired_BeginInvoke_m9F47F6543FE7EDA2D94CA849ACC12E69AB7A5239 (_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 * __this, StringBuilder_t * ___pchValue0, uint32_t ___unBufferSize1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetVulkanInstanceExtensionsRequired_BeginInvoke_m9F47F6543FE7EDA2D94CA849ACC12E69AB7A5239_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchValue0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.UInt32 Valve.VR.IVRCompositor__GetVulkanInstanceExtensionsRequired::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetVulkanInstanceExtensionsRequired_EndInvoke_mA324EC4B780336F948A3D916C8AF3DA0B73F352F (_GetVulkanInstanceExtensionsRequired_t447FB93781F4F7343AE6D2920325357DAE467036 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 (_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__HideMirrorWindow::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _HideMirrorWindow__ctor_m05CE8CCC3C7BE28D2DFF6B6D0BBD875E4CC1AB59 (_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__HideMirrorWindow::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _HideMirrorWindow_Invoke_m8DFA04497ECFBE7F15A7558778EB35EAFA3F6879 (_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__HideMirrorWindow::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _HideMirrorWindow_BeginInvoke_mA849D73B5EE69B9F272FA1B6051C4EAE567DD388 (_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__HideMirrorWindow::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _HideMirrorWindow_EndInvoke_m413A16D786A4C2ACA033EB1C10ABC41C6C915CF5 (_HideMirrorWindow_t0D15A078C3C870E0A271CD6029AB225D42A80824 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C (_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C * __this, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc();

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRCompositor__IsFullscreen::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _IsFullscreen__ctor_m54785189CF04850D98183FBC13077EFA22846F6C (_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRCompositor__IsFullscreen::Invoke()
extern "C" IL2CPP_METHOD_ATTR bool _IsFullscreen_Invoke_mC4D79C71A9F098C19F27D51361F595BD4DAE8C1B (_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C * __this, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef bool (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef bool (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__IsFullscreen::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _IsFullscreen_BeginInvoke_mF8015AC9C60E2DB4893F546C40F3313AC56F054F (_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Boolean Valve.VR.IVRCompositor__IsFullscreen::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _IsFullscreen_EndInvoke_mBA5630DBFD4EDA0AFFCB0BB54D6C8E1CF1C08C6E (_IsFullscreen_t4934799E374C2D733EFA1765BBD561202E90B76C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C (_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C * __this, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc();

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRCompositor__IsMirrorWindowVisible::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _IsMirrorWindowVisible__ctor_mBF8DF1CFB40E20393FAEB2C40C5B1953B95DE16B (_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRCompositor__IsMirrorWindowVisible::Invoke()
extern "C" IL2CPP_METHOD_ATTR bool _IsMirrorWindowVisible_Invoke_mDE0AE2816649EC74036671FCE96B20C69DDF5C04 (_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C * __this, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef bool (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef bool (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__IsMirrorWindowVisible::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _IsMirrorWindowVisible_BeginInvoke_m763F21190B3C0D7DB6B7F10EB5736C0CB1CF6D5A (_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Boolean Valve.VR.IVRCompositor__IsMirrorWindowVisible::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _IsMirrorWindowVisible_EndInvoke_m40195393E9F15CB8D6DE5995278CB4208A33C224 (_IsMirrorWindowVisible_t942836C893A14734CD04810E922BBC47FA07CA1C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 (_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 * __this, intptr_t ___glSharedTextureHandle0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___glSharedTextureHandle0);

}
// System.Void Valve.VR.IVRCompositor__LockGLSharedTextureForAccess::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _LockGLSharedTextureForAccess__ctor_m58E9611BB1B0C308F52D9C94F81B5004D9671EAE (_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__LockGLSharedTextureForAccess::Invoke(System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _LockGLSharedTextureForAccess_Invoke_m3B7E9677901D8FA6C58D438437B95AFA85F3262F (_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 * __this, intptr_t ___glSharedTextureHandle0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___glSharedTextureHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___glSharedTextureHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___glSharedTextureHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___glSharedTextureHandle0);
							else
								GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___glSharedTextureHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___glSharedTextureHandle0);
							else
								VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___glSharedTextureHandle0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___glSharedTextureHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___glSharedTextureHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___glSharedTextureHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___glSharedTextureHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___glSharedTextureHandle0);
						else
							GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___glSharedTextureHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___glSharedTextureHandle0);
						else
							VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___glSharedTextureHandle0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___glSharedTextureHandle0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__LockGLSharedTextureForAccess::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _LockGLSharedTextureForAccess_BeginInvoke_m704B70D081FEAB93183E1C49EBAD608F009196B9 (_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 * __this, intptr_t ___glSharedTextureHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LockGLSharedTextureForAccess_BeginInvoke_m704B70D081FEAB93183E1C49EBAD608F009196B9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___glSharedTextureHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRCompositor__LockGLSharedTextureForAccess::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _LockGLSharedTextureForAccess_EndInvoke_mFE3CC52AF0FE3C4AFA8A820E456FAADED0D1F930 (_LockGLSharedTextureForAccess_t3905CC829BDE3974B6A5DE2E24BA627C3DA26C51 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 (_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__PostPresentHandoff::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _PostPresentHandoff__ctor_m958F1A6027BF645E7580A87FCDD608B416411AB8 (_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__PostPresentHandoff::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _PostPresentHandoff_Invoke_mD9F53F03AFE49CB4105394109AEAEDDEDD4B9B75 (_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__PostPresentHandoff::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _PostPresentHandoff_BeginInvoke_m3869D7FAE230DDD675227250062A9243F186D181 (_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__PostPresentHandoff::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _PostPresentHandoff_EndInvoke_mB775B7E7E952F91EE9A96ADB1FBEFB354088060E (_PostPresentHandoff_t02FC711D85433EA34EC212A7DE732EE14B127BF2 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A (_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A * __this, intptr_t ___pD3D11ShaderResourceView0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pD3D11ShaderResourceView0);

}
// System.Void Valve.VR.IVRCompositor__ReleaseMirrorTextureD3D11::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ReleaseMirrorTextureD3D11__ctor_mF2E18DDBAB28D66FC9AB3C23FB98589850160AB4 (_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__ReleaseMirrorTextureD3D11::Invoke(System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ReleaseMirrorTextureD3D11_Invoke_m47579F112B5D713A069A261526D82114B7C65485 (_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A * __this, intptr_t ___pD3D11ShaderResourceView0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pD3D11ShaderResourceView0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11ShaderResourceView0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pD3D11ShaderResourceView0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11ShaderResourceView0);
							else
								GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11ShaderResourceView0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pD3D11ShaderResourceView0);
							else
								VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pD3D11ShaderResourceView0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11ShaderResourceView0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pD3D11ShaderResourceView0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11ShaderResourceView0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pD3D11ShaderResourceView0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11ShaderResourceView0);
						else
							GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11ShaderResourceView0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pD3D11ShaderResourceView0);
						else
							VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pD3D11ShaderResourceView0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11ShaderResourceView0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__ReleaseMirrorTextureD3D11::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ReleaseMirrorTextureD3D11_BeginInvoke_m255539AADE845A16499A67D98571C2667423844C (_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A * __this, intptr_t ___pD3D11ShaderResourceView0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ReleaseMirrorTextureD3D11_BeginInvoke_m255539AADE845A16499A67D98571C2667423844C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pD3D11ShaderResourceView0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRCompositor__ReleaseMirrorTextureD3D11::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _ReleaseMirrorTextureD3D11_EndInvoke_m55FD52DA439BB31647FDEF9AFC804A8EAE93AC9D (_ReleaseMirrorTextureD3D11_t93D5660E100B4F1093C9F7D3400131E12295D66A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE (_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE * __this, uint32_t ___glTextureId0, intptr_t ___glSharedTextureHandle1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___glTextureId0, ___glSharedTextureHandle1);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRCompositor__ReleaseSharedGLTexture::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ReleaseSharedGLTexture__ctor_m6ADB19B71DFA3E83DDC87178015D9789A1F50A89 (_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRCompositor__ReleaseSharedGLTexture::Invoke(System.UInt32,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR bool _ReleaseSharedGLTexture_Invoke_m0463A7DB759D73675A1D424B2409EB203926B124 (_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE * __this, uint32_t ___glTextureId0, intptr_t ___glSharedTextureHandle1, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef bool (*FunctionPointerType) (uint32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___glTextureId0, ___glSharedTextureHandle1, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, uint32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___glTextureId0, ___glSharedTextureHandle1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (uint32_t, intptr_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___glTextureId0, ___glSharedTextureHandle1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< bool, uint32_t, intptr_t >::Invoke(targetMethod, targetThis, ___glTextureId0, ___glSharedTextureHandle1);
							else
								result = GenericVirtFuncInvoker2< bool, uint32_t, intptr_t >::Invoke(targetMethod, targetThis, ___glTextureId0, ___glSharedTextureHandle1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< bool, uint32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___glTextureId0, ___glSharedTextureHandle1);
							else
								result = VirtFuncInvoker2< bool, uint32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___glTextureId0, ___glSharedTextureHandle1);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___glTextureId0, ___glSharedTextureHandle1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef bool (*FunctionPointerType) (uint32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___glTextureId0, ___glSharedTextureHandle1, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___glTextureId0, ___glSharedTextureHandle1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (uint32_t, intptr_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___glTextureId0, ___glSharedTextureHandle1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< bool, uint32_t, intptr_t >::Invoke(targetMethod, targetThis, ___glTextureId0, ___glSharedTextureHandle1);
						else
							result = GenericVirtFuncInvoker2< bool, uint32_t, intptr_t >::Invoke(targetMethod, targetThis, ___glTextureId0, ___glSharedTextureHandle1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< bool, uint32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___glTextureId0, ___glSharedTextureHandle1);
						else
							result = VirtFuncInvoker2< bool, uint32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___glTextureId0, ___glSharedTextureHandle1);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, uint32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___glTextureId0, ___glSharedTextureHandle1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__ReleaseSharedGLTexture::BeginInvoke(System.UInt32,System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ReleaseSharedGLTexture_BeginInvoke_m30DBF07ECDA7DE2F20AA85B62D6A66A946E5E8D7 (_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE * __this, uint32_t ___glTextureId0, intptr_t ___glSharedTextureHandle1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ReleaseSharedGLTexture_BeginInvoke_m30DBF07ECDA7DE2F20AA85B62D6A66A946E5E8D7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___glTextureId0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___glSharedTextureHandle1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Boolean Valve.VR.IVRCompositor__ReleaseSharedGLTexture::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _ReleaseSharedGLTexture_EndInvoke_m340D0D6C804DF6301EE83F7E4D043DEBF31A75B1 (_ReleaseSharedGLTexture_t890273BFB9F844C3BD452C7F624AE6E84A82BCCE * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 (_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 * __this, int32_t ___eTimingMode0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___eTimingMode0);

}
// System.Void Valve.VR.IVRCompositor__SetExplicitTimingMode::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetExplicitTimingMode__ctor_m653384603AEBF90B9B580C44D6E5CC4C874D728A (_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__SetExplicitTimingMode::Invoke(Valve.VR.EVRCompositorTimingMode)
extern "C" IL2CPP_METHOD_ATTR void _SetExplicitTimingMode_Invoke_m5E57297FFC7BC82AA4C91279148A3E01F3487121 (_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 * __this, int32_t ___eTimingMode0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___eTimingMode0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eTimingMode0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___eTimingMode0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, targetThis, ___eTimingMode0);
							else
								GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, targetThis, ___eTimingMode0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eTimingMode0);
							else
								VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eTimingMode0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eTimingMode0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___eTimingMode0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eTimingMode0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___eTimingMode0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, targetThis, ___eTimingMode0);
						else
							GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, targetThis, ___eTimingMode0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eTimingMode0);
						else
							VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eTimingMode0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eTimingMode0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__SetExplicitTimingMode::BeginInvoke(Valve.VR.EVRCompositorTimingMode,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetExplicitTimingMode_BeginInvoke_mABB0028FC5457B81CA673893D714C43C474DC38E (_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 * __this, int32_t ___eTimingMode0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetExplicitTimingMode_BeginInvoke_mABB0028FC5457B81CA673893D714C43C474DC38E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(EVRCompositorTimingMode_t62616F6C9A8D91140EF20E4E8A36122EA8CD3695_il2cpp_TypeInfo_var, &___eTimingMode0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRCompositor__SetExplicitTimingMode::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetExplicitTimingMode_EndInvoke_m61A5C252540D31E9ABFDA114A572059E42BE6A86 (_SetExplicitTimingMode_t2D79EA10D45525DBDB731BC759577160A54A4105 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A (_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A * __this, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E* ___pTextures0, uint32_t ___unTextureCount1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pTextures0U27 to native representation
	Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ____pTextures0_marshaled = NULL;
	if (___pTextures0 != NULL)
	{
		____pTextures0_marshaled = reinterpret_cast<Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *>((___pTextures0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pTextures0_marshaled, ___unTextureCount1);

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__SetSkyboxOverride::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetSkyboxOverride__ctor_m993404700450D9F3D2E499B01475EAC427D745C7 (_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__SetSkyboxOverride::Invoke(Valve.VR.Texture_t[],System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetSkyboxOverride_Invoke_m22FF9FE6D4A133F689B632AF3D5687D12F3FB330 (_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A * __this, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E* ___pTextures0, uint32_t ___unTextureCount1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pTextures0, ___unTextureCount1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTextures0, ___unTextureCount1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pTextures0, ___unTextureCount1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t >::Invoke(targetMethod, targetThis, ___pTextures0, ___unTextureCount1);
							else
								result = GenericVirtFuncInvoker2< int32_t, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t >::Invoke(targetMethod, targetThis, ___pTextures0, ___unTextureCount1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTextures0, ___unTextureCount1);
							else
								result = VirtFuncInvoker2< int32_t, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTextures0, ___unTextureCount1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTextures0, ___unTextureCount1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pTextures0, ___unTextureCount1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTextures0, ___unTextureCount1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pTextures0, ___unTextureCount1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t >::Invoke(targetMethod, targetThis, ___pTextures0, ___unTextureCount1);
						else
							result = GenericVirtFuncInvoker2< int32_t, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t >::Invoke(targetMethod, targetThis, ___pTextures0, ___unTextureCount1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTextures0, ___unTextureCount1);
						else
							result = VirtFuncInvoker2< int32_t, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTextures0, ___unTextureCount1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pTextures0, ___unTextureCount1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__SetSkyboxOverride::BeginInvoke(Valve.VR.Texture_t[],System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetSkyboxOverride_BeginInvoke_m052DC57F2AFE4E7DCB88371EEA88CA1396E218A5 (_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A * __this, Texture_tU5BU5D_t4F4CCA67F79D9D5902AA4B0A36E4B61351E6DC4E* ___pTextures0, uint32_t ___unTextureCount1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetSkyboxOverride_BeginInvoke_m052DC57F2AFE4E7DCB88371EEA88CA1396E218A5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pTextures0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unTextureCount1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__SetSkyboxOverride::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetSkyboxOverride_EndInvoke_mB2067A2C8C6EAD78A38B1AAF1B75640111793201 (_SetSkyboxOverride_t72E6CADFAF2D7A08B38CB85F5316A9E64159EE4A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB (_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB * __this, int32_t ___eOrigin0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___eOrigin0);

}
// System.Void Valve.VR.IVRCompositor__SetTrackingSpace::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetTrackingSpace__ctor_mEABC4E3389099EDA8B1D859BE1DAF6807D74C300 (_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__SetTrackingSpace::Invoke(Valve.VR.ETrackingUniverseOrigin)
extern "C" IL2CPP_METHOD_ATTR void _SetTrackingSpace_Invoke_m769940563CACD844EBE4A246625387489897F58A (_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB * __this, int32_t ___eOrigin0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___eOrigin0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eOrigin0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___eOrigin0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, targetThis, ___eOrigin0);
							else
								GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, targetThis, ___eOrigin0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eOrigin0);
							else
								VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eOrigin0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eOrigin0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___eOrigin0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eOrigin0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (int32_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___eOrigin0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< int32_t >::Invoke(targetMethod, targetThis, ___eOrigin0);
						else
							GenericVirtActionInvoker1< int32_t >::Invoke(targetMethod, targetThis, ___eOrigin0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eOrigin0);
						else
							VirtActionInvoker1< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eOrigin0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eOrigin0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__SetTrackingSpace::BeginInvoke(Valve.VR.ETrackingUniverseOrigin,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetTrackingSpace_BeginInvoke_m61AB989DB6E0EF89950AC1AE9C7FB39B4F7E5BF0 (_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB * __this, int32_t ___eOrigin0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetTrackingSpace_BeginInvoke_m61AB989DB6E0EF89950AC1AE9C7FB39B4F7E5BF0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_il2cpp_TypeInfo_var, &___eOrigin0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRCompositor__SetTrackingSpace::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetTrackingSpace_EndInvoke_m2A1F121E5116A319066D8FA0BFDE49F381944411 (_SetTrackingSpace_tFC41C2ED218CE639E8C76E20AFCC3900A5AABDBB * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD (_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD * __this, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc();

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRCompositor__ShouldAppRenderWithLowResources::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ShouldAppRenderWithLowResources__ctor_mE7D4A45E30991C35DFFD11832DD9BFF0295088F1 (_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRCompositor__ShouldAppRenderWithLowResources::Invoke()
extern "C" IL2CPP_METHOD_ATTR bool _ShouldAppRenderWithLowResources_Invoke_m553516C7A3606505C1662AF819407D8E4574EB90 (_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD * __this, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef bool (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef bool (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__ShouldAppRenderWithLowResources::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ShouldAppRenderWithLowResources_BeginInvoke_m625D0280D7A532B35A601A74BFCACB75EF36C0A2 (_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Boolean Valve.VR.IVRCompositor__ShouldAppRenderWithLowResources::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _ShouldAppRenderWithLowResources_EndInvoke_m5B273283B8060A43A2F6B92EDA6475AE792C4BBE (_ShouldAppRenderWithLowResources_tC396EF3CD230BE6233828A1FD8849B6B645AF3DD * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 (_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRCompositor__ShowMirrorWindow::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ShowMirrorWindow__ctor_m27C7FF415EC3434BB7914DDFB683EC8536AD87CA (_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__ShowMirrorWindow::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _ShowMirrorWindow_Invoke_mAF736B19FA5ADAB9974B796BE49089F270F3501D (_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__ShowMirrorWindow::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ShowMirrorWindow_BeginInvoke_m610CE8BA814083301D8EA2F45625DDFB98991F51 (_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRCompositor__ShowMirrorWindow::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _ShowMirrorWindow_EndInvoke_m022A776EB698A693948049C5A892F7E9DE4B108B (_ShowMirrorWindow_t9DD48C66AF4DE1BD324E1F32AFF671720030C847 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 (_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 * __this, int32_t ___eEye0, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ___pTexture1, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pBounds2, int32_t ___nSubmitFlags3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__Submit::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _Submit__ctor_mF67DC2610FAD595C1D2A9CA40D6368853C528205 (_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__Submit::Invoke(Valve.VR.EVREye,Valve.VR.Texture_tU26,Valve.VR.VRTextureBounds_tU26,Valve.VR.EVRSubmitFlags)
extern "C" IL2CPP_METHOD_ATTR int32_t _Submit_Invoke_m69ED4AE4AEBF8D2F3E58E40866F00F8D378062B4 (_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 * __this, int32_t ___eEye0, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ___pTexture1, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pBounds2, int32_t ___nSubmitFlags3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t >::Invoke(targetMethod, targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);
							else
								result = GenericVirtFuncInvoker4< int32_t, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t >::Invoke(targetMethod, targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);
							else
								result = VirtFuncInvoker4< int32_t, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t >::Invoke(targetMethod, targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);
						else
							result = GenericVirtFuncInvoker4< int32_t, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t >::Invoke(targetMethod, targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);
						else
							result = VirtFuncInvoker4< int32_t, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pTexture1, ___pBounds2, ___nSubmitFlags3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__Submit::BeginInvoke(Valve.VR.EVREye,Valve.VR.Texture_tU26,Valve.VR.VRTextureBounds_tU26,Valve.VR.EVRSubmitFlags,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _Submit_BeginInvoke_m515D5FE4D4E826439B42B4ACDC2A23744B72E8E3 (_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 * __this, int32_t ___eEye0, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ___pTexture1, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pBounds2, int32_t ___nSubmitFlags3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_Submit_BeginInvoke_m515D5FE4D4E826439B42B4ACDC2A23744B72E8E3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(EVREye_t4097B73599986F5B774296C51091EF53A629C2FD_il2cpp_TypeInfo_var, &___eEye0);
	__d_args[1] = Box(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D_il2cpp_TypeInfo_var, &*___pTexture1);
	__d_args[2] = Box(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813_il2cpp_TypeInfo_var, &*___pBounds2);
	__d_args[3] = Box(EVRSubmitFlags_t9629FE63CBD4B11E035117494981D038C16B301B_il2cpp_TypeInfo_var, &___nSubmitFlags3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__Submit::EndInvoke(Valve.VR.Texture_tU26,Valve.VR.VRTextureBounds_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _Submit_EndInvoke_mD319C6C478F0D44EB3D8296FED26A9613D634CBC (_Submit_t9F5FF79B93102B2604698AFE7EEC0F478B05DFE5 * __this, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ___pTexture0, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pBounds1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pTexture0,
	___pBounds1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 (_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 * __this, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__SubmitExplicitTimingData::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SubmitExplicitTimingData__ctor_m4F7C7FFF46178BA51C67854D005237CD8B23CBC6 (_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__SubmitExplicitTimingData::Invoke()
extern "C" IL2CPP_METHOD_ATTR int32_t _SubmitExplicitTimingData_Invoke_m678B09CECAAE6B62BC9A8CE9A9641F3FD257B766 (_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 * __this, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef int32_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< int32_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< int32_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef int32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< int32_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< int32_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__SubmitExplicitTimingData::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SubmitExplicitTimingData_BeginInvoke_m060D2515F8DFCB6F705F05A10D4DA2FA9146BAD4 (_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__SubmitExplicitTimingData::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SubmitExplicitTimingData_EndInvoke_m863D607C9329395A3DE33C2816BB24D1F3E25996 (_SubmitExplicitTimingData_t9EA7F2C8AE8B3700A0C6669BFE1570678ACB37E0 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 (_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 * __this, bool ___bSuspend0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(static_cast<int32_t>(___bSuspend0));

}
// System.Void Valve.VR.IVRCompositor__SuspendRendering::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SuspendRendering__ctor_mED2F855C4D4EE74A8A5D6B68EB45847023331B81 (_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__SuspendRendering::Invoke(System.Boolean)
extern "C" IL2CPP_METHOD_ATTR void _SuspendRendering_Invoke_mE47B06FC36420554FE90576E68DDAA1C9BB75628 (_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 * __this, bool ___bSuspend0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___bSuspend0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___bSuspend0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (bool, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___bSuspend0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, targetThis, ___bSuspend0);
							else
								GenericVirtActionInvoker1< bool >::Invoke(targetMethod, targetThis, ___bSuspend0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bSuspend0);
							else
								VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bSuspend0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___bSuspend0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___bSuspend0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___bSuspend0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (bool, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___bSuspend0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< bool >::Invoke(targetMethod, targetThis, ___bSuspend0);
						else
							GenericVirtActionInvoker1< bool >::Invoke(targetMethod, targetThis, ___bSuspend0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bSuspend0);
						else
							VirtActionInvoker1< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bSuspend0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, bool, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___bSuspend0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__SuspendRendering::BeginInvoke(System.Boolean,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SuspendRendering_BeginInvoke_m7B555DDD0CCEB60363F69712B42FCC64E510AEE8 (_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 * __this, bool ___bSuspend0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SuspendRendering_BeginInvoke_m7B555DDD0CCEB60363F69712B42FCC64E510AEE8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bSuspend0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRCompositor__SuspendRendering::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SuspendRendering_EndInvoke_m1DE2B779F36474A812E7EBC2182A29A340EF60BA (_SuspendRendering_t872BE4CA1DF1FE78864D88DBE26B3099A836BFA1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 (_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 * __this, intptr_t ___glSharedTextureHandle0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___glSharedTextureHandle0);

}
// System.Void Valve.VR.IVRCompositor__UnlockGLSharedTextureForAccess::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _UnlockGLSharedTextureForAccess__ctor_mF3A5DEB61BACCFA706E5AFE96F55943ABE3AD71A (_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRCompositor__UnlockGLSharedTextureForAccess::Invoke(System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _UnlockGLSharedTextureForAccess_Invoke_m551B4FD77187730B0588099F70AA295BAA8CBA96 (_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 * __this, intptr_t ___glSharedTextureHandle0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___glSharedTextureHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___glSharedTextureHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___glSharedTextureHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___glSharedTextureHandle0);
							else
								GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___glSharedTextureHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___glSharedTextureHandle0);
							else
								VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___glSharedTextureHandle0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___glSharedTextureHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___glSharedTextureHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___glSharedTextureHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___glSharedTextureHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___glSharedTextureHandle0);
						else
							GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___glSharedTextureHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___glSharedTextureHandle0);
						else
							VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___glSharedTextureHandle0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___glSharedTextureHandle0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRCompositor__UnlockGLSharedTextureForAccess::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _UnlockGLSharedTextureForAccess_BeginInvoke_m2C44EA43EBB341E6A3F2EAE448B57F7248B510A0 (_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 * __this, intptr_t ___glSharedTextureHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_UnlockGLSharedTextureForAccess_BeginInvoke_m2C44EA43EBB341E6A3F2EAE448B57F7248B510A0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___glSharedTextureHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRCompositor__UnlockGLSharedTextureForAccess::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _UnlockGLSharedTextureForAccess_EndInvoke_mBF269B1BE48DAC4EF1900328CB50D7A80EB920B2 (_UnlockGLSharedTextureForAccess_t09D9B28C3A5CE6C727B5E374D545A14FD260A7A8 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD (_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD * __this, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pRenderPoseArray0, uint32_t ___unRenderPoseArrayCount1, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pGamePoseArray2, uint32_t ___unGamePoseArrayCount3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, uint32_t, TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pRenderPoseArray0U27 to native representation
	TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ____pRenderPoseArray0_marshaled = NULL;
	if (___pRenderPoseArray0 != NULL)
	{
		____pRenderPoseArray0_marshaled = reinterpret_cast<TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *>((___pRenderPoseArray0)->GetAddressAtUnchecked(0));
	}

	// Marshaling of parameter U27___pGamePoseArray2U27 to native representation
	TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 * ____pGamePoseArray2_marshaled = NULL;
	if (___pGamePoseArray2 != NULL)
	{
		____pGamePoseArray2_marshaled = reinterpret_cast<TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 *>((___pGamePoseArray2)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pRenderPoseArray0_marshaled, ___unRenderPoseArrayCount1, ____pGamePoseArray2_marshaled, ___unGamePoseArrayCount3);

	return returnValue;
}
// System.Void Valve.VR.IVRCompositor__WaitGetPoses::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _WaitGetPoses__ctor_mA32DBC573C60F5A4D34ED57D74955424F5192EBD (_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__WaitGetPoses::Invoke(Valve.VR.TrackedDevicePose_t[],System.UInt32,Valve.VR.TrackedDevicePose_t[],System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _WaitGetPoses_Invoke_mE9DD9530BA8190D823B06408B45F12DC7330F476 (_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD * __this, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pRenderPoseArray0, uint32_t ___unRenderPoseArrayCount1, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pGamePoseArray2, uint32_t ___unGamePoseArrayCount3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(targetMethod, targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
							else
								result = GenericVirtFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(targetMethod, targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
							else
								result = VirtFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(targetMethod, targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
						else
							result = GenericVirtFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(targetMethod, targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
						else
							result = VirtFuncInvoker4< int32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderPoseArray0, ___unRenderPoseArrayCount1, ___pGamePoseArray2, ___unGamePoseArrayCount3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRCompositor__WaitGetPoses::BeginInvoke(Valve.VR.TrackedDevicePose_t[],System.UInt32,Valve.VR.TrackedDevicePose_t[],System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _WaitGetPoses_BeginInvoke_m84FCF0DA075232CC410959A5542271C80B165293 (_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD * __this, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pRenderPoseArray0, uint32_t ___unRenderPoseArrayCount1, TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156* ___pGamePoseArray2, uint32_t ___unGamePoseArrayCount3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_WaitGetPoses_BeginInvoke_m84FCF0DA075232CC410959A5542271C80B165293_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pRenderPoseArray0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unRenderPoseArrayCount1);
	__d_args[2] = ___pGamePoseArray2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unGamePoseArrayCount3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVRCompositorError Valve.VR.IVRCompositor__WaitGetPoses::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _WaitGetPoses_EndInvoke_m7EE5056572A9D6547A1B22E430B7AE7DD7185A64 (_WaitGetPoses_tD09B587943F073B945E89AA35CE975B66B0B5DDD * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRDriverManager
extern "C" void IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshal_pinvoke(const IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7& unmarshaled, IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshaled_pinvoke& marshaled)
{
	marshaled.___GetDriverCount_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDriverCount_0()));
	marshaled.___GetDriverName_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDriverName_1()));
}
extern "C" void IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshal_pinvoke_back(const IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshaled_pinvoke& marshaled, IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetDriverCount_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92>(marshaled.___GetDriverCount_0, _GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDriverName_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C>(marshaled.___GetDriverName_1, _GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRDriverManager
extern "C" void IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshal_pinvoke_cleanup(IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRDriverManager
extern "C" void IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshal_com(const IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7& unmarshaled, IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshaled_com& marshaled)
{
	marshaled.___GetDriverCount_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDriverCount_0()));
	marshaled.___GetDriverName_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDriverName_1()));
}
extern "C" void IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshal_com_back(const IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshaled_com& marshaled, IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetDriverCount_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92>(marshaled.___GetDriverCount_0, _GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDriverName_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C>(marshaled.___GetDriverName_1, _GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRDriverManager
extern "C" void IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshal_com_cleanup(IVRDriverManager_t8EC52F50ACEDF35CA33451B38F477EBA1C6559D7_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 (_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 * __this, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRDriverManager__GetDriverCount::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetDriverCount__ctor_mB5CD4939BB8646EF2FD7ED6F0109EF130CF783DD (_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRDriverManager__GetDriverCount::Invoke()
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetDriverCount_Invoke_m955A2C5FC0961266CE7DD723A79BAC92B0F2364C (_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 * __this, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRDriverManager__GetDriverCount::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetDriverCount_BeginInvoke_m2F385332CE02A7FA6CC5E67A6FC471BBD006A937 (_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt32 Valve.VR.IVRDriverManager__GetDriverCount::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetDriverCount_EndInvoke_m6A72B65B6EF481AE83A8FBE0BB6BDF354CDB1D6E (_GetDriverCount_t7384AB3A3BEBA88DF81447BED896CB56A46FFB92 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C (_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C * __this, uint32_t ___nDriver0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint32_t, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchValue1U27 to native representation
	char* ____pchValue1_marshaled = NULL;
	____pchValue1_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___nDriver0, ____pchValue1_marshaled, ___unBufferSize2);

	// Marshaling of parameter U27___pchValue1U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue1, ____pchValue1_marshaled);

	// Marshaling cleanup of parameter U27___pchValue1U27 native representation
	il2cpp_codegen_marshal_free(____pchValue1_marshaled);
	____pchValue1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRDriverManager__GetDriverName::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetDriverName__ctor_mA0504EA02488FB28061F0FFF814911D4BB5A5D42 (_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRDriverManager__GetDriverName::Invoke(System.UInt32,System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetDriverName_Invoke_m8F64BC1B2FF593B0CBBDA248AE49FA728A3EFCC0 (_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C * __this, uint32_t ___nDriver0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___nDriver0, ___pchValue1, ___unBufferSize2, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___nDriver0, ___pchValue1, ___unBufferSize2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2);
							else
								result = GenericVirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2);
							else
								result = VirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___nDriver0, ___pchValue1, ___unBufferSize2, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___nDriver0, ___pchValue1, ___unBufferSize2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2);
						else
							result = GenericVirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2);
						else
							result = VirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___nDriver0, ___pchValue1, ___unBufferSize2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRDriverManager__GetDriverName::BeginInvoke(System.UInt32,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetDriverName_BeginInvoke_mE1BBF3EE208F2CA0B9053FE949A8A0EAF8F4E552 (_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C * __this, uint32_t ___nDriver0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetDriverName_BeginInvoke_mE1BBF3EE208F2CA0B9053FE949A8A0EAF8F4E552_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___nDriver0);
	__d_args[1] = ___pchValue1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.UInt32 Valve.VR.IVRDriverManager__GetDriverName::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetDriverName_EndInvoke_mE0755C8956B637A4B46B2FFD8D009E49BD124D86 (_GetDriverName_tB282E0C8BD0A70EBC1F2AABF8FB938017EBFEC2C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRExtendedDisplay
extern "C" void IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshal_pinvoke(const IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0& unmarshaled, IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshaled_pinvoke& marshaled)
{
	marshaled.___GetWindowBounds_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetWindowBounds_0()));
	marshaled.___GetEyeOutputViewport_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetEyeOutputViewport_1()));
	marshaled.___GetDXGIOutputInfo_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDXGIOutputInfo_2()));
}
extern "C" void IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshal_pinvoke_back(const IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshaled_pinvoke& marshaled, IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetWindowBounds_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620>(marshaled.___GetWindowBounds_0, _GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620_il2cpp_TypeInfo_var));
	unmarshaled.set_GetEyeOutputViewport_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C>(marshaled.___GetEyeOutputViewport_1, _GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDXGIOutputInfo_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12>(marshaled.___GetDXGIOutputInfo_2, _GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRExtendedDisplay
extern "C" void IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshal_pinvoke_cleanup(IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRExtendedDisplay
extern "C" void IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshal_com(const IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0& unmarshaled, IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshaled_com& marshaled)
{
	marshaled.___GetWindowBounds_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetWindowBounds_0()));
	marshaled.___GetEyeOutputViewport_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetEyeOutputViewport_1()));
	marshaled.___GetDXGIOutputInfo_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDXGIOutputInfo_2()));
}
extern "C" void IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshal_com_back(const IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshaled_com& marshaled, IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetWindowBounds_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620>(marshaled.___GetWindowBounds_0, _GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620_il2cpp_TypeInfo_var));
	unmarshaled.set_GetEyeOutputViewport_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C>(marshaled.___GetEyeOutputViewport_1, _GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDXGIOutputInfo_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12>(marshaled.___GetDXGIOutputInfo_2, _GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRExtendedDisplay
extern "C" void IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshal_com_cleanup(IVRExtendedDisplay_t4D17D56F8B883827FB2EF813562FCAA9878EBED0_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 (_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 * __this, int32_t* ___pnAdapterIndex0, int32_t* ___pnAdapterOutputIndex1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pnAdapterIndex0, ___pnAdapterOutputIndex1);

}
// System.Void Valve.VR.IVRExtendedDisplay__GetDXGIOutputInfo::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetDXGIOutputInfo__ctor_m16265A6E72FC6D2398A0BF981A03AD98C3B35D99 (_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRExtendedDisplay__GetDXGIOutputInfo::Invoke(System.Int32U26,System.Int32U26)
extern "C" IL2CPP_METHOD_ATTR void _GetDXGIOutputInfo_Invoke_m51F85351CB53B3AA6D96019D7A36E27BD2C6A241 (_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 * __this, int32_t* ___pnAdapterIndex0, int32_t* ___pnAdapterOutputIndex1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef void (*FunctionPointerType) (int32_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pnAdapterIndex0, ___pnAdapterOutputIndex1, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, int32_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (int32_t*, int32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pnAdapterIndex0, ___pnAdapterOutputIndex1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< int32_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1);
							else
								GenericVirtActionInvoker2< int32_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< int32_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1);
							else
								VirtActionInvoker2< int32_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, int32_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (int32_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pnAdapterIndex0, ___pnAdapterOutputIndex1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, int32_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (int32_t*, int32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pnAdapterIndex0, ___pnAdapterOutputIndex1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< int32_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1);
						else
							GenericVirtActionInvoker2< int32_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< int32_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1);
						else
							VirtActionInvoker2< int32_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, int32_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pnAdapterIndex0, ___pnAdapterOutputIndex1, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRExtendedDisplay__GetDXGIOutputInfo::BeginInvoke(System.Int32U26,System.Int32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetDXGIOutputInfo_BeginInvoke_m2CF3CC65FE5FDBB6C6EA763E0ED1481B533F11DC (_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 * __this, int32_t* ___pnAdapterIndex0, int32_t* ___pnAdapterOutputIndex1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetDXGIOutputInfo_BeginInvoke_m2CF3CC65FE5FDBB6C6EA763E0ED1481B533F11DC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___pnAdapterIndex0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___pnAdapterOutputIndex1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVRExtendedDisplay__GetDXGIOutputInfo::EndInvoke(System.Int32U26,System.Int32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _GetDXGIOutputInfo_EndInvoke_mB8AB1597DF15227CC8C68D10A03A3802DA1AEF39 (_GetDXGIOutputInfo_t17D5E50C764BC81271E6F1F8F1DF12A7505BBE12 * __this, int32_t* ___pnAdapterIndex0, int32_t* ___pnAdapterOutputIndex1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pnAdapterIndex0,
	___pnAdapterOutputIndex1,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C (_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C * __this, int32_t ___eEye0, uint32_t* ___pnX1, uint32_t* ___pnY2, uint32_t* ___pnWidth3, uint32_t* ___pnHeight4, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);

}
// System.Void Valve.VR.IVRExtendedDisplay__GetEyeOutputViewport::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetEyeOutputViewport__ctor_mC28950B0E475CB72127FC76BD27AA071B573A396 (_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRExtendedDisplay__GetEyeOutputViewport::Invoke(Valve.VR.EVREye,System.UInt32U26,System.UInt32U26,System.UInt32U26,System.UInt32U26)
extern "C" IL2CPP_METHOD_ATTR void _GetEyeOutputViewport_Invoke_m746677647DDA0F59DF796713C91E2AB18A8674BB (_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C * __this, int32_t ___eEye0, uint32_t* ___pnX1, uint32_t* ___pnY2, uint32_t* ___pnWidth3, uint32_t* ___pnHeight4, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 5)
				{
					// open
					typedef void (*FunctionPointerType) (int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker5< int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);
							else
								GenericVirtActionInvoker5< int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker5< int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);
							else
								VirtActionInvoker5< int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef void (*FunctionPointerType) (int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker5< int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);
						else
							GenericVirtActionInvoker5< int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker5< int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);
						else
							VirtActionInvoker5< int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, int32_t, uint32_t*, uint32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eEye0, ___pnX1, ___pnY2, ___pnWidth3, ___pnHeight4, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRExtendedDisplay__GetEyeOutputViewport::BeginInvoke(Valve.VR.EVREye,System.UInt32U26,System.UInt32U26,System.UInt32U26,System.UInt32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetEyeOutputViewport_BeginInvoke_mA711D5E7E3BEB40F1C0BFE1C706A596FFEB6036C (_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C * __this, int32_t ___eEye0, uint32_t* ___pnX1, uint32_t* ___pnY2, uint32_t* ___pnWidth3, uint32_t* ___pnHeight4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetEyeOutputViewport_BeginInvoke_mA711D5E7E3BEB40F1C0BFE1C706A596FFEB6036C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(EVREye_t4097B73599986F5B774296C51091EF53A629C2FD_il2cpp_TypeInfo_var, &___eEye0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pnX1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pnY2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pnWidth3);
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pnHeight4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.Void Valve.VR.IVRExtendedDisplay__GetEyeOutputViewport::EndInvoke(System.UInt32U26,System.UInt32U26,System.UInt32U26,System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _GetEyeOutputViewport_EndInvoke_m402C6D9FF1B61B504F54A8F5DD0610F5C42CBF04 (_GetEyeOutputViewport_t55BF5B058AA1FD95364716EC5FE3FB303A15D28C * __this, uint32_t* ___pnX0, uint32_t* ___pnY1, uint32_t* ___pnWidth2, uint32_t* ___pnHeight3, RuntimeObject* ___result4, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pnX0,
	___pnY1,
	___pnWidth2,
	___pnHeight3,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result4, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 (_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 * __this, int32_t* ___pnX0, int32_t* ___pnY1, uint32_t* ___pnWidth2, uint32_t* ___pnHeight3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t*, int32_t*, uint32_t*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);

}
// System.Void Valve.VR.IVRExtendedDisplay__GetWindowBounds::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetWindowBounds__ctor_m6CDE06306DB9DA322A894E7B1E7A754F7168426D (_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRExtendedDisplay__GetWindowBounds::Invoke(System.Int32U26,System.Int32U26,System.UInt32U26,System.UInt32U26)
extern "C" IL2CPP_METHOD_ATTR void _GetWindowBounds_Invoke_m6E4B0A60697F824D95B88777870B25061BA0A693 (_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 * __this, int32_t* ___pnX0, int32_t* ___pnY1, uint32_t* ___pnWidth2, uint32_t* ___pnHeight3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef void (*FunctionPointerType) (int32_t*, int32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, int32_t*, int32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (int32_t*, int32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker4< int32_t*, int32_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);
							else
								GenericVirtActionInvoker4< int32_t*, int32_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker4< int32_t*, int32_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);
							else
								VirtActionInvoker4< int32_t*, int32_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, int32_t*, int32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (int32_t*, int32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, int32_t*, int32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (int32_t*, int32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker4< int32_t*, int32_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);
						else
							GenericVirtActionInvoker4< int32_t*, int32_t*, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker4< int32_t*, int32_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);
						else
							VirtActionInvoker4< int32_t*, int32_t*, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, int32_t*, int32_t*, uint32_t*, uint32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pnX0, ___pnY1, ___pnWidth2, ___pnHeight3, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRExtendedDisplay__GetWindowBounds::BeginInvoke(System.Int32U26,System.Int32U26,System.UInt32U26,System.UInt32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetWindowBounds_BeginInvoke_m60E23DD224A5DAD965DD519A51C7972CA63B8D7D (_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 * __this, int32_t* ___pnX0, int32_t* ___pnY1, uint32_t* ___pnWidth2, uint32_t* ___pnHeight3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetWindowBounds_BeginInvoke_m60E23DD224A5DAD965DD519A51C7972CA63B8D7D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___pnX0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &*___pnY1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pnWidth2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pnHeight3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRExtendedDisplay__GetWindowBounds::EndInvoke(System.Int32U26,System.Int32U26,System.UInt32U26,System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _GetWindowBounds_EndInvoke_m0EACB14B7DD9FED0A87B2890BB1DB6D630630AF4 (_GetWindowBounds_tC929FC67AF48057992CD66E7A03197B87DF3D620 * __this, int32_t* ___pnX0, int32_t* ___pnY1, uint32_t* ___pnWidth2, uint32_t* ___pnHeight3, RuntimeObject* ___result4, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pnX0,
	___pnY1,
	___pnWidth2,
	___pnHeight3,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result4, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRNotifications
extern "C" void IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshal_pinvoke(const IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F& unmarshaled, IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshaled_pinvoke& marshaled)
{
	marshaled.___CreateNotification_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateNotification_0()));
	marshaled.___RemoveNotification_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveNotification_1()));
}
extern "C" void IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshal_pinvoke_back(const IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshaled_pinvoke& marshaled, IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_CreateNotification_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7>(marshaled.___CreateNotification_0, _CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveNotification_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E>(marshaled.___RemoveNotification_1, _RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRNotifications
extern "C" void IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshal_pinvoke_cleanup(IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRNotifications
extern "C" void IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshal_com(const IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F& unmarshaled, IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshaled_com& marshaled)
{
	marshaled.___CreateNotification_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateNotification_0()));
	marshaled.___RemoveNotification_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveNotification_1()));
}
extern "C" void IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshal_com_back(const IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshaled_com& marshaled, IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_CreateNotification_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7>(marshaled.___CreateNotification_0, _CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveNotification_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E>(marshaled.___RemoveNotification_1, _RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRNotifications
extern "C" void IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshal_com_cleanup(IVRNotifications_t0539F837029A9433B0E464C7A31932E3DFB7DD2F_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 (_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulUserValue1, int32_t ___type2, String_t* ___pchText3, int32_t ___style4, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 * ___pImage5, uint32_t* ___pNotificationId6, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint64_t, int32_t, char*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchText3U27 to native representation
	char* ____pchText3_marshaled = NULL;
	____pchText3_marshaled = il2cpp_codegen_marshal_string(___pchText3);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___ulUserValue1, ___type2, ____pchText3_marshaled, ___style4, ___pImage5, ___pNotificationId6);

	// Marshaling cleanup of parameter U27___pchText3U27 native representation
	il2cpp_codegen_marshal_free(____pchText3_marshaled);
	____pchText3_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRNotifications__CreateNotification::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CreateNotification__ctor_mB0901336C7430400471ADD7DA5387556C939FA88 (_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRNotificationError Valve.VR.IVRNotifications__CreateNotification::Invoke(System.UInt64,System.UInt64,Valve.VR.EVRNotificationType,System.String,Valve.VR.EVRNotificationStyle,Valve.VR.NotificationBitmap_tU26,System.UInt32U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _CreateNotification_Invoke_mC0C31763F885B45A4CF7BC7E7E38780D85979B37 (_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulUserValue1, int32_t ___type2, String_t* ___pchText3, int32_t ___style4, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 * ___pImage5, uint32_t* ___pNotificationId6, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 7)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker7< int32_t, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6);
							else
								result = GenericVirtFuncInvoker7< int32_t, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker7< int32_t, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6);
							else
								result = VirtFuncInvoker7< int32_t, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 7)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker7< int32_t, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6);
						else
							result = GenericVirtFuncInvoker7< int32_t, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker7< int32_t, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6);
						else
							result = VirtFuncInvoker7< int32_t, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, int32_t, String_t*, int32_t, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 *, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulUserValue1, ___type2, ___pchText3, ___style4, ___pImage5, ___pNotificationId6, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRNotifications__CreateNotification::BeginInvoke(System.UInt64,System.UInt64,Valve.VR.EVRNotificationType,System.String,Valve.VR.EVRNotificationStyle,Valve.VR.NotificationBitmap_tU26,System.UInt32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CreateNotification_BeginInvoke_m7052BB05FDA4E0002F9A3F9E4EC63F7DA5696D92 (_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulUserValue1, int32_t ___type2, String_t* ___pchText3, int32_t ___style4, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 * ___pImage5, uint32_t* ___pNotificationId6, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback7, RuntimeObject * ___object8, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_CreateNotification_BeginInvoke_m7052BB05FDA4E0002F9A3F9E4EC63F7DA5696D92_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[8] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulUserValue1);
	__d_args[2] = Box(EVRNotificationType_t9D531A4C057BF14A85B73F26046221CCAB26D2D9_il2cpp_TypeInfo_var, &___type2);
	__d_args[3] = ___pchText3;
	__d_args[4] = Box(EVRNotificationStyle_t34E78DE1E5386975ACBBCB0BD8731BD413AC951A_il2cpp_TypeInfo_var, &___style4);
	__d_args[5] = Box(NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609_il2cpp_TypeInfo_var, &*___pImage5);
	__d_args[6] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pNotificationId6);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback7, (RuntimeObject*)___object8);
}
// Valve.VR.EVRNotificationError Valve.VR.IVRNotifications__CreateNotification::EndInvoke(Valve.VR.NotificationBitmap_tU26,System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _CreateNotification_EndInvoke_m8ABDAB27C31A8B299A35DDD2FDC6DE7ED9F4CFD5 (_CreateNotification_t2E2976923857D9220C863F8EBF211534AF74A9F7 * __this, NotificationBitmap_t_tAB5AA3EAC9AC8E98211E0BBD88AB5B629AE3A609 * ___pImage0, uint32_t* ___pNotificationId1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pImage0,
	___pNotificationId1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E (_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E * __this, uint32_t ___notificationId0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___notificationId0);

	return returnValue;
}
// System.Void Valve.VR.IVRNotifications__RemoveNotification::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _RemoveNotification__ctor_mE6EEFDD850EE9F0893B499205FA985AE29C48DE1 (_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRNotificationError Valve.VR.IVRNotifications__RemoveNotification::Invoke(System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _RemoveNotification_Invoke_m2EA1C6BD24B7196F15CCB2A07EB7048D319D0298 (_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E * __this, uint32_t ___notificationId0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___notificationId0, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___notificationId0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___notificationId0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, uint32_t >::Invoke(targetMethod, targetThis, ___notificationId0);
							else
								result = GenericVirtFuncInvoker1< int32_t, uint32_t >::Invoke(targetMethod, targetThis, ___notificationId0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___notificationId0);
							else
								result = VirtFuncInvoker1< int32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___notificationId0);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___notificationId0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___notificationId0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___notificationId0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___notificationId0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, uint32_t >::Invoke(targetMethod, targetThis, ___notificationId0);
						else
							result = GenericVirtFuncInvoker1< int32_t, uint32_t >::Invoke(targetMethod, targetThis, ___notificationId0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___notificationId0);
						else
							result = VirtFuncInvoker1< int32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___notificationId0);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___notificationId0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRNotifications__RemoveNotification::BeginInvoke(System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _RemoveNotification_BeginInvoke_m5B7B5F8E00ED1F9D1ED6C426DE701408A9A89498 (_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E * __this, uint32_t ___notificationId0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_RemoveNotification_BeginInvoke_m5B7B5F8E00ED1F9D1ED6C426DE701408A9A89498_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___notificationId0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVRNotificationError Valve.VR.IVRNotifications__RemoveNotification::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _RemoveNotification_EndInvoke_m18976966EFDEEA63C237E7D9957E9C5CC1632723 (_RemoveNotification_t5CAC1666978B4651C0865DEA252826AA93D7226E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVROverlay
extern "C" void IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshal_pinvoke(const IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9& unmarshaled, IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshaled_pinvoke& marshaled)
{
	marshaled.___FindOverlay_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FindOverlay_0()));
	marshaled.___CreateOverlay_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateOverlay_1()));
	marshaled.___DestroyOverlay_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_DestroyOverlay_2()));
	marshaled.___SetHighQualityOverlay_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetHighQualityOverlay_3()));
	marshaled.___GetHighQualityOverlay_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetHighQualityOverlay_4()));
	marshaled.___GetOverlayKey_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayKey_5()));
	marshaled.___GetOverlayName_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayName_6()));
	marshaled.___SetOverlayName_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayName_7()));
	marshaled.___GetOverlayImageData_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayImageData_8()));
	marshaled.___GetOverlayErrorNameFromEnum_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayErrorNameFromEnum_9()));
	marshaled.___SetOverlayRenderingPid_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayRenderingPid_10()));
	marshaled.___GetOverlayRenderingPid_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayRenderingPid_11()));
	marshaled.___SetOverlayFlag_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayFlag_12()));
	marshaled.___GetOverlayFlag_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayFlag_13()));
	marshaled.___SetOverlayColor_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayColor_14()));
	marshaled.___GetOverlayColor_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayColor_15()));
	marshaled.___SetOverlayAlpha_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayAlpha_16()));
	marshaled.___GetOverlayAlpha_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayAlpha_17()));
	marshaled.___SetOverlayTexelAspect_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTexelAspect_18()));
	marshaled.___GetOverlayTexelAspect_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTexelAspect_19()));
	marshaled.___SetOverlaySortOrder_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlaySortOrder_20()));
	marshaled.___GetOverlaySortOrder_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlaySortOrder_21()));
	marshaled.___SetOverlayWidthInMeters_22 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayWidthInMeters_22()));
	marshaled.___GetOverlayWidthInMeters_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayWidthInMeters_23()));
	marshaled.___SetOverlayAutoCurveDistanceRangeInMeters_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayAutoCurveDistanceRangeInMeters_24()));
	marshaled.___GetOverlayAutoCurveDistanceRangeInMeters_25 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayAutoCurveDistanceRangeInMeters_25()));
	marshaled.___SetOverlayTextureColorSpace_26 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTextureColorSpace_26()));
	marshaled.___GetOverlayTextureColorSpace_27 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTextureColorSpace_27()));
	marshaled.___SetOverlayTextureBounds_28 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTextureBounds_28()));
	marshaled.___GetOverlayTextureBounds_29 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTextureBounds_29()));
	marshaled.___GetOverlayRenderModel_30 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayRenderModel_30()));
	marshaled.___SetOverlayRenderModel_31 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayRenderModel_31()));
	marshaled.___GetOverlayTransformType_32 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformType_32()));
	marshaled.___SetOverlayTransformAbsolute_33 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTransformAbsolute_33()));
	marshaled.___GetOverlayTransformAbsolute_34 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformAbsolute_34()));
	marshaled.___SetOverlayTransformTrackedDeviceRelative_35 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTransformTrackedDeviceRelative_35()));
	marshaled.___GetOverlayTransformTrackedDeviceRelative_36 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformTrackedDeviceRelative_36()));
	marshaled.___SetOverlayTransformTrackedDeviceComponent_37 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTransformTrackedDeviceComponent_37()));
	marshaled.___GetOverlayTransformTrackedDeviceComponent_38 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformTrackedDeviceComponent_38()));
	marshaled.___GetOverlayTransformOverlayRelative_39 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformOverlayRelative_39()));
	marshaled.___SetOverlayTransformOverlayRelative_40 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTransformOverlayRelative_40()));
	marshaled.___ShowOverlay_41 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowOverlay_41()));
	marshaled.___HideOverlay_42 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HideOverlay_42()));
	marshaled.___IsOverlayVisible_43 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsOverlayVisible_43()));
	marshaled.___GetTransformForOverlayCoordinates_44 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTransformForOverlayCoordinates_44()));
	marshaled.___PollNextOverlayEvent_45 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PollNextOverlayEvent_45()));
	marshaled.___GetOverlayInputMethod_46 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayInputMethod_46()));
	marshaled.___SetOverlayInputMethod_47 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayInputMethod_47()));
	marshaled.___GetOverlayMouseScale_48 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayMouseScale_48()));
	marshaled.___SetOverlayMouseScale_49 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayMouseScale_49()));
	marshaled.___ComputeOverlayIntersection_50 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ComputeOverlayIntersection_50()));
	marshaled.___IsHoverTargetOverlay_51 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsHoverTargetOverlay_51()));
	marshaled.___GetGamepadFocusOverlay_52 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetGamepadFocusOverlay_52()));
	marshaled.___SetGamepadFocusOverlay_53 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetGamepadFocusOverlay_53()));
	marshaled.___SetOverlayNeighbor_54 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayNeighbor_54()));
	marshaled.___MoveGamepadFocusToNeighbor_55 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_MoveGamepadFocusToNeighbor_55()));
	marshaled.___SetOverlayDualAnalogTransform_56 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayDualAnalogTransform_56()));
	marshaled.___GetOverlayDualAnalogTransform_57 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayDualAnalogTransform_57()));
	marshaled.___SetOverlayTexture_58 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTexture_58()));
	marshaled.___ClearOverlayTexture_59 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ClearOverlayTexture_59()));
	marshaled.___SetOverlayRaw_60 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayRaw_60()));
	marshaled.___SetOverlayFromFile_61 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayFromFile_61()));
	marshaled.___GetOverlayTexture_62 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTexture_62()));
	marshaled.___ReleaseNativeOverlayHandle_63 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ReleaseNativeOverlayHandle_63()));
	marshaled.___GetOverlayTextureSize_64 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTextureSize_64()));
	marshaled.___CreateDashboardOverlay_65 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateDashboardOverlay_65()));
	marshaled.___IsDashboardVisible_66 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsDashboardVisible_66()));
	marshaled.___IsActiveDashboardOverlay_67 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsActiveDashboardOverlay_67()));
	marshaled.___SetDashboardOverlaySceneProcess_68 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetDashboardOverlaySceneProcess_68()));
	marshaled.___GetDashboardOverlaySceneProcess_69 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDashboardOverlaySceneProcess_69()));
	marshaled.___ShowDashboard_70 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowDashboard_70()));
	marshaled.___GetPrimaryDashboardDevice_71 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetPrimaryDashboardDevice_71()));
	marshaled.___ShowKeyboard_72 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowKeyboard_72()));
	marshaled.___ShowKeyboardForOverlay_73 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowKeyboardForOverlay_73()));
	marshaled.___GetKeyboardText_74 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetKeyboardText_74()));
	marshaled.___HideKeyboard_75 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HideKeyboard_75()));
	marshaled.___SetKeyboardTransformAbsolute_76 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetKeyboardTransformAbsolute_76()));
	marshaled.___SetKeyboardPositionForOverlay_77 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetKeyboardPositionForOverlay_77()));
	marshaled.___SetOverlayIntersectionMask_78 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayIntersectionMask_78()));
	marshaled.___GetOverlayFlags_79 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayFlags_79()));
	marshaled.___ShowMessageOverlay_80 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowMessageOverlay_80()));
	marshaled.___CloseMessageOverlay_81 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CloseMessageOverlay_81()));
}
extern "C" void IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshal_pinvoke_back(const IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshaled_pinvoke& marshaled, IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_FindOverlay_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B>(marshaled.___FindOverlay_0, _FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B_il2cpp_TypeInfo_var));
	unmarshaled.set_CreateOverlay_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9>(marshaled.___CreateOverlay_1, _CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9_il2cpp_TypeInfo_var));
	unmarshaled.set_DestroyOverlay_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313>(marshaled.___DestroyOverlay_2, _DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313_il2cpp_TypeInfo_var));
	unmarshaled.set_SetHighQualityOverlay_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C>(marshaled.___SetHighQualityOverlay_3, _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetHighQualityOverlay_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF>(marshaled.___GetHighQualityOverlay_4, _GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayKey_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42>(marshaled.___GetOverlayKey_5, _GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayName_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98>(marshaled.___GetOverlayName_6, _GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayName_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C>(marshaled.___SetOverlayName_7, _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayImageData_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927>(marshaled.___GetOverlayImageData_8, _GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayErrorNameFromEnum_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51>(marshaled.___GetOverlayErrorNameFromEnum_9, _GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayRenderingPid_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46>(marshaled.___SetOverlayRenderingPid_10, _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayRenderingPid_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7>(marshaled.___GetOverlayRenderingPid_11, _GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayFlag_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E>(marshaled.___SetOverlayFlag_12, _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayFlag_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B>(marshaled.___GetOverlayFlag_13, _GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayColor_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063>(marshaled.___SetOverlayColor_14, _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayColor_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38>(marshaled.___GetOverlayColor_15, _GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayAlpha_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2>(marshaled.___SetOverlayAlpha_16, _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayAlpha_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99>(marshaled.___GetOverlayAlpha_17, _GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTexelAspect_18(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E>(marshaled.___SetOverlayTexelAspect_18, _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTexelAspect_19(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7>(marshaled.___GetOverlayTexelAspect_19, _GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlaySortOrder_20(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43>(marshaled.___SetOverlaySortOrder_20, _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlaySortOrder_21(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408>(marshaled.___GetOverlaySortOrder_21, _GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayWidthInMeters_22(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184>(marshaled.___SetOverlayWidthInMeters_22, _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayWidthInMeters_23(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36>(marshaled.___GetOverlayWidthInMeters_23, _GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayAutoCurveDistanceRangeInMeters_24(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963>(marshaled.___SetOverlayAutoCurveDistanceRangeInMeters_24, _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayAutoCurveDistanceRangeInMeters_25(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454>(marshaled.___GetOverlayAutoCurveDistanceRangeInMeters_25, _GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTextureColorSpace_26(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F>(marshaled.___SetOverlayTextureColorSpace_26, _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTextureColorSpace_27(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D>(marshaled.___GetOverlayTextureColorSpace_27, _GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTextureBounds_28(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E>(marshaled.___SetOverlayTextureBounds_28, _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTextureBounds_29(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467>(marshaled.___GetOverlayTextureBounds_29, _GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayRenderModel_30(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09>(marshaled.___GetOverlayRenderModel_30, _GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayRenderModel_31(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050>(marshaled.___SetOverlayRenderModel_31, _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformType_32(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163>(marshaled.___GetOverlayTransformType_32, _GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTransformAbsolute_33(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06>(marshaled.___SetOverlayTransformAbsolute_33, _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformAbsolute_34(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0>(marshaled.___GetOverlayTransformAbsolute_34, _GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTransformTrackedDeviceRelative_35(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7>(marshaled.___SetOverlayTransformTrackedDeviceRelative_35, _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformTrackedDeviceRelative_36(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B>(marshaled.___GetOverlayTransformTrackedDeviceRelative_36, _GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTransformTrackedDeviceComponent_37(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8>(marshaled.___SetOverlayTransformTrackedDeviceComponent_37, _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformTrackedDeviceComponent_38(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF>(marshaled.___GetOverlayTransformTrackedDeviceComponent_38, _GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformOverlayRelative_39(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38>(marshaled.___GetOverlayTransformOverlayRelative_39, _GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTransformOverlayRelative_40(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171>(marshaled.___SetOverlayTransformOverlayRelative_40, _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowOverlay_41(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61>(marshaled.___ShowOverlay_41, _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61_il2cpp_TypeInfo_var));
	unmarshaled.set_HideOverlay_42(il2cpp_codegen_marshal_function_ptr_to_delegate<_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC>(marshaled.___HideOverlay_42, _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_il2cpp_TypeInfo_var));
	unmarshaled.set_IsOverlayVisible_43(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6>(marshaled.___IsOverlayVisible_43, _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTransformForOverlayCoordinates_44(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA>(marshaled.___GetTransformForOverlayCoordinates_44, _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_il2cpp_TypeInfo_var));
	unmarshaled.set_PollNextOverlayEvent_45(il2cpp_codegen_marshal_function_ptr_to_delegate<_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399>(marshaled.___PollNextOverlayEvent_45, _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayInputMethod_46(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E>(marshaled.___GetOverlayInputMethod_46, _GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayInputMethod_47(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12>(marshaled.___SetOverlayInputMethod_47, _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayMouseScale_48(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521>(marshaled.___GetOverlayMouseScale_48, _GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayMouseScale_49(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65>(marshaled.___SetOverlayMouseScale_49, _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65_il2cpp_TypeInfo_var));
	unmarshaled.set_ComputeOverlayIntersection_50(il2cpp_codegen_marshal_function_ptr_to_delegate<_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2>(marshaled.___ComputeOverlayIntersection_50, _ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2_il2cpp_TypeInfo_var));
	unmarshaled.set_IsHoverTargetOverlay_51(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692>(marshaled.___IsHoverTargetOverlay_51, _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692_il2cpp_TypeInfo_var));
	unmarshaled.set_GetGamepadFocusOverlay_52(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F>(marshaled.___GetGamepadFocusOverlay_52, _GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F_il2cpp_TypeInfo_var));
	unmarshaled.set_SetGamepadFocusOverlay_53(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377>(marshaled.___SetGamepadFocusOverlay_53, _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayNeighbor_54(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D>(marshaled.___SetOverlayNeighbor_54, _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D_il2cpp_TypeInfo_var));
	unmarshaled.set_MoveGamepadFocusToNeighbor_55(il2cpp_codegen_marshal_function_ptr_to_delegate<_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F>(marshaled.___MoveGamepadFocusToNeighbor_55, _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayDualAnalogTransform_56(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A>(marshaled.___SetOverlayDualAnalogTransform_56, _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayDualAnalogTransform_57(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3>(marshaled.___GetOverlayDualAnalogTransform_57, _GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTexture_58(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C>(marshaled.___SetOverlayTexture_58, _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_il2cpp_TypeInfo_var));
	unmarshaled.set_ClearOverlayTexture_59(il2cpp_codegen_marshal_function_ptr_to_delegate<_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E>(marshaled.___ClearOverlayTexture_59, _ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayRaw_60(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9>(marshaled.___SetOverlayRaw_60, _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayFromFile_61(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F>(marshaled.___SetOverlayFromFile_61, _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTexture_62(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73>(marshaled.___GetOverlayTexture_62, _GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73_il2cpp_TypeInfo_var));
	unmarshaled.set_ReleaseNativeOverlayHandle_63(il2cpp_codegen_marshal_function_ptr_to_delegate<_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98>(marshaled.___ReleaseNativeOverlayHandle_63, _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTextureSize_64(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62>(marshaled.___GetOverlayTextureSize_64, _GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62_il2cpp_TypeInfo_var));
	unmarshaled.set_CreateDashboardOverlay_65(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B>(marshaled.___CreateDashboardOverlay_65, _CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B_il2cpp_TypeInfo_var));
	unmarshaled.set_IsDashboardVisible_66(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C>(marshaled.___IsDashboardVisible_66, _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C_il2cpp_TypeInfo_var));
	unmarshaled.set_IsActiveDashboardOverlay_67(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B>(marshaled.___IsActiveDashboardOverlay_67, _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_il2cpp_TypeInfo_var));
	unmarshaled.set_SetDashboardOverlaySceneProcess_68(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C>(marshaled.___SetDashboardOverlaySceneProcess_68, _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDashboardOverlaySceneProcess_69(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6>(marshaled.___GetDashboardOverlaySceneProcess_69, _GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowDashboard_70(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911>(marshaled.___ShowDashboard_70, _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911_il2cpp_TypeInfo_var));
	unmarshaled.set_GetPrimaryDashboardDevice_71(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C>(marshaled.___GetPrimaryDashboardDevice_71, _GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowKeyboard_72(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1>(marshaled.___ShowKeyboard_72, _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowKeyboardForOverlay_73(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6>(marshaled.___ShowKeyboardForOverlay_73, _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_il2cpp_TypeInfo_var));
	unmarshaled.set_GetKeyboardText_74(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7>(marshaled.___GetKeyboardText_74, _GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7_il2cpp_TypeInfo_var));
	unmarshaled.set_HideKeyboard_75(il2cpp_codegen_marshal_function_ptr_to_delegate<_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9>(marshaled.___HideKeyboard_75, _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_il2cpp_TypeInfo_var));
	unmarshaled.set_SetKeyboardTransformAbsolute_76(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA>(marshaled.___SetKeyboardTransformAbsolute_76, _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA_il2cpp_TypeInfo_var));
	unmarshaled.set_SetKeyboardPositionForOverlay_77(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF>(marshaled.___SetKeyboardPositionForOverlay_77, _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayIntersectionMask_78(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04>(marshaled.___SetOverlayIntersectionMask_78, _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayFlags_79(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8>(marshaled.___GetOverlayFlags_79, _GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowMessageOverlay_80(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F>(marshaled.___ShowMessageOverlay_80, _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F_il2cpp_TypeInfo_var));
	unmarshaled.set_CloseMessageOverlay_81(il2cpp_codegen_marshal_function_ptr_to_delegate<_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9>(marshaled.___CloseMessageOverlay_81, _CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVROverlay
extern "C" void IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshal_pinvoke_cleanup(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVROverlay
extern "C" void IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshal_com(const IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9& unmarshaled, IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshaled_com& marshaled)
{
	marshaled.___FindOverlay_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FindOverlay_0()));
	marshaled.___CreateOverlay_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateOverlay_1()));
	marshaled.___DestroyOverlay_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_DestroyOverlay_2()));
	marshaled.___SetHighQualityOverlay_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetHighQualityOverlay_3()));
	marshaled.___GetHighQualityOverlay_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetHighQualityOverlay_4()));
	marshaled.___GetOverlayKey_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayKey_5()));
	marshaled.___GetOverlayName_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayName_6()));
	marshaled.___SetOverlayName_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayName_7()));
	marshaled.___GetOverlayImageData_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayImageData_8()));
	marshaled.___GetOverlayErrorNameFromEnum_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayErrorNameFromEnum_9()));
	marshaled.___SetOverlayRenderingPid_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayRenderingPid_10()));
	marshaled.___GetOverlayRenderingPid_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayRenderingPid_11()));
	marshaled.___SetOverlayFlag_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayFlag_12()));
	marshaled.___GetOverlayFlag_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayFlag_13()));
	marshaled.___SetOverlayColor_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayColor_14()));
	marshaled.___GetOverlayColor_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayColor_15()));
	marshaled.___SetOverlayAlpha_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayAlpha_16()));
	marshaled.___GetOverlayAlpha_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayAlpha_17()));
	marshaled.___SetOverlayTexelAspect_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTexelAspect_18()));
	marshaled.___GetOverlayTexelAspect_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTexelAspect_19()));
	marshaled.___SetOverlaySortOrder_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlaySortOrder_20()));
	marshaled.___GetOverlaySortOrder_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlaySortOrder_21()));
	marshaled.___SetOverlayWidthInMeters_22 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayWidthInMeters_22()));
	marshaled.___GetOverlayWidthInMeters_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayWidthInMeters_23()));
	marshaled.___SetOverlayAutoCurveDistanceRangeInMeters_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayAutoCurveDistanceRangeInMeters_24()));
	marshaled.___GetOverlayAutoCurveDistanceRangeInMeters_25 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayAutoCurveDistanceRangeInMeters_25()));
	marshaled.___SetOverlayTextureColorSpace_26 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTextureColorSpace_26()));
	marshaled.___GetOverlayTextureColorSpace_27 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTextureColorSpace_27()));
	marshaled.___SetOverlayTextureBounds_28 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTextureBounds_28()));
	marshaled.___GetOverlayTextureBounds_29 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTextureBounds_29()));
	marshaled.___GetOverlayRenderModel_30 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayRenderModel_30()));
	marshaled.___SetOverlayRenderModel_31 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayRenderModel_31()));
	marshaled.___GetOverlayTransformType_32 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformType_32()));
	marshaled.___SetOverlayTransformAbsolute_33 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTransformAbsolute_33()));
	marshaled.___GetOverlayTransformAbsolute_34 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformAbsolute_34()));
	marshaled.___SetOverlayTransformTrackedDeviceRelative_35 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTransformTrackedDeviceRelative_35()));
	marshaled.___GetOverlayTransformTrackedDeviceRelative_36 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformTrackedDeviceRelative_36()));
	marshaled.___SetOverlayTransformTrackedDeviceComponent_37 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTransformTrackedDeviceComponent_37()));
	marshaled.___GetOverlayTransformTrackedDeviceComponent_38 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformTrackedDeviceComponent_38()));
	marshaled.___GetOverlayTransformOverlayRelative_39 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTransformOverlayRelative_39()));
	marshaled.___SetOverlayTransformOverlayRelative_40 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTransformOverlayRelative_40()));
	marshaled.___ShowOverlay_41 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowOverlay_41()));
	marshaled.___HideOverlay_42 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HideOverlay_42()));
	marshaled.___IsOverlayVisible_43 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsOverlayVisible_43()));
	marshaled.___GetTransformForOverlayCoordinates_44 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTransformForOverlayCoordinates_44()));
	marshaled.___PollNextOverlayEvent_45 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PollNextOverlayEvent_45()));
	marshaled.___GetOverlayInputMethod_46 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayInputMethod_46()));
	marshaled.___SetOverlayInputMethod_47 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayInputMethod_47()));
	marshaled.___GetOverlayMouseScale_48 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayMouseScale_48()));
	marshaled.___SetOverlayMouseScale_49 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayMouseScale_49()));
	marshaled.___ComputeOverlayIntersection_50 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ComputeOverlayIntersection_50()));
	marshaled.___IsHoverTargetOverlay_51 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsHoverTargetOverlay_51()));
	marshaled.___GetGamepadFocusOverlay_52 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetGamepadFocusOverlay_52()));
	marshaled.___SetGamepadFocusOverlay_53 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetGamepadFocusOverlay_53()));
	marshaled.___SetOverlayNeighbor_54 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayNeighbor_54()));
	marshaled.___MoveGamepadFocusToNeighbor_55 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_MoveGamepadFocusToNeighbor_55()));
	marshaled.___SetOverlayDualAnalogTransform_56 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayDualAnalogTransform_56()));
	marshaled.___GetOverlayDualAnalogTransform_57 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayDualAnalogTransform_57()));
	marshaled.___SetOverlayTexture_58 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayTexture_58()));
	marshaled.___ClearOverlayTexture_59 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ClearOverlayTexture_59()));
	marshaled.___SetOverlayRaw_60 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayRaw_60()));
	marshaled.___SetOverlayFromFile_61 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayFromFile_61()));
	marshaled.___GetOverlayTexture_62 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTexture_62()));
	marshaled.___ReleaseNativeOverlayHandle_63 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ReleaseNativeOverlayHandle_63()));
	marshaled.___GetOverlayTextureSize_64 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayTextureSize_64()));
	marshaled.___CreateDashboardOverlay_65 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CreateDashboardOverlay_65()));
	marshaled.___IsDashboardVisible_66 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsDashboardVisible_66()));
	marshaled.___IsActiveDashboardOverlay_67 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsActiveDashboardOverlay_67()));
	marshaled.___SetDashboardOverlaySceneProcess_68 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetDashboardOverlaySceneProcess_68()));
	marshaled.___GetDashboardOverlaySceneProcess_69 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDashboardOverlaySceneProcess_69()));
	marshaled.___ShowDashboard_70 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowDashboard_70()));
	marshaled.___GetPrimaryDashboardDevice_71 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetPrimaryDashboardDevice_71()));
	marshaled.___ShowKeyboard_72 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowKeyboard_72()));
	marshaled.___ShowKeyboardForOverlay_73 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowKeyboardForOverlay_73()));
	marshaled.___GetKeyboardText_74 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetKeyboardText_74()));
	marshaled.___HideKeyboard_75 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HideKeyboard_75()));
	marshaled.___SetKeyboardTransformAbsolute_76 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetKeyboardTransformAbsolute_76()));
	marshaled.___SetKeyboardPositionForOverlay_77 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetKeyboardPositionForOverlay_77()));
	marshaled.___SetOverlayIntersectionMask_78 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetOverlayIntersectionMask_78()));
	marshaled.___GetOverlayFlags_79 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOverlayFlags_79()));
	marshaled.___ShowMessageOverlay_80 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShowMessageOverlay_80()));
	marshaled.___CloseMessageOverlay_81 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_CloseMessageOverlay_81()));
}
extern "C" void IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshal_com_back(const IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshaled_com& marshaled, IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_FindOverlay_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B>(marshaled.___FindOverlay_0, _FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B_il2cpp_TypeInfo_var));
	unmarshaled.set_CreateOverlay_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9>(marshaled.___CreateOverlay_1, _CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9_il2cpp_TypeInfo_var));
	unmarshaled.set_DestroyOverlay_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313>(marshaled.___DestroyOverlay_2, _DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313_il2cpp_TypeInfo_var));
	unmarshaled.set_SetHighQualityOverlay_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C>(marshaled.___SetHighQualityOverlay_3, _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetHighQualityOverlay_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF>(marshaled.___GetHighQualityOverlay_4, _GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayKey_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42>(marshaled.___GetOverlayKey_5, _GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayName_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98>(marshaled.___GetOverlayName_6, _GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayName_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C>(marshaled.___SetOverlayName_7, _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayImageData_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927>(marshaled.___GetOverlayImageData_8, _GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayErrorNameFromEnum_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51>(marshaled.___GetOverlayErrorNameFromEnum_9, _GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayRenderingPid_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46>(marshaled.___SetOverlayRenderingPid_10, _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayRenderingPid_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7>(marshaled.___GetOverlayRenderingPid_11, _GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayFlag_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E>(marshaled.___SetOverlayFlag_12, _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayFlag_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B>(marshaled.___GetOverlayFlag_13, _GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayColor_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063>(marshaled.___SetOverlayColor_14, _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayColor_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38>(marshaled.___GetOverlayColor_15, _GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayAlpha_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2>(marshaled.___SetOverlayAlpha_16, _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayAlpha_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99>(marshaled.___GetOverlayAlpha_17, _GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTexelAspect_18(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E>(marshaled.___SetOverlayTexelAspect_18, _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTexelAspect_19(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7>(marshaled.___GetOverlayTexelAspect_19, _GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlaySortOrder_20(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43>(marshaled.___SetOverlaySortOrder_20, _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlaySortOrder_21(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408>(marshaled.___GetOverlaySortOrder_21, _GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayWidthInMeters_22(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184>(marshaled.___SetOverlayWidthInMeters_22, _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayWidthInMeters_23(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36>(marshaled.___GetOverlayWidthInMeters_23, _GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayAutoCurveDistanceRangeInMeters_24(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963>(marshaled.___SetOverlayAutoCurveDistanceRangeInMeters_24, _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayAutoCurveDistanceRangeInMeters_25(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454>(marshaled.___GetOverlayAutoCurveDistanceRangeInMeters_25, _GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTextureColorSpace_26(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F>(marshaled.___SetOverlayTextureColorSpace_26, _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTextureColorSpace_27(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D>(marshaled.___GetOverlayTextureColorSpace_27, _GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTextureBounds_28(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E>(marshaled.___SetOverlayTextureBounds_28, _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTextureBounds_29(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467>(marshaled.___GetOverlayTextureBounds_29, _GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayRenderModel_30(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09>(marshaled.___GetOverlayRenderModel_30, _GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayRenderModel_31(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050>(marshaled.___SetOverlayRenderModel_31, _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformType_32(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163>(marshaled.___GetOverlayTransformType_32, _GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTransformAbsolute_33(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06>(marshaled.___SetOverlayTransformAbsolute_33, _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformAbsolute_34(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0>(marshaled.___GetOverlayTransformAbsolute_34, _GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTransformTrackedDeviceRelative_35(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7>(marshaled.___SetOverlayTransformTrackedDeviceRelative_35, _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformTrackedDeviceRelative_36(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B>(marshaled.___GetOverlayTransformTrackedDeviceRelative_36, _GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTransformTrackedDeviceComponent_37(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8>(marshaled.___SetOverlayTransformTrackedDeviceComponent_37, _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformTrackedDeviceComponent_38(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF>(marshaled.___GetOverlayTransformTrackedDeviceComponent_38, _GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTransformOverlayRelative_39(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38>(marshaled.___GetOverlayTransformOverlayRelative_39, _GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTransformOverlayRelative_40(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171>(marshaled.___SetOverlayTransformOverlayRelative_40, _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowOverlay_41(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61>(marshaled.___ShowOverlay_41, _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61_il2cpp_TypeInfo_var));
	unmarshaled.set_HideOverlay_42(il2cpp_codegen_marshal_function_ptr_to_delegate<_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC>(marshaled.___HideOverlay_42, _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_il2cpp_TypeInfo_var));
	unmarshaled.set_IsOverlayVisible_43(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6>(marshaled.___IsOverlayVisible_43, _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTransformForOverlayCoordinates_44(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA>(marshaled.___GetTransformForOverlayCoordinates_44, _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_il2cpp_TypeInfo_var));
	unmarshaled.set_PollNextOverlayEvent_45(il2cpp_codegen_marshal_function_ptr_to_delegate<_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399>(marshaled.___PollNextOverlayEvent_45, _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayInputMethod_46(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E>(marshaled.___GetOverlayInputMethod_46, _GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayInputMethod_47(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12>(marshaled.___SetOverlayInputMethod_47, _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayMouseScale_48(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521>(marshaled.___GetOverlayMouseScale_48, _GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayMouseScale_49(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65>(marshaled.___SetOverlayMouseScale_49, _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65_il2cpp_TypeInfo_var));
	unmarshaled.set_ComputeOverlayIntersection_50(il2cpp_codegen_marshal_function_ptr_to_delegate<_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2>(marshaled.___ComputeOverlayIntersection_50, _ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2_il2cpp_TypeInfo_var));
	unmarshaled.set_IsHoverTargetOverlay_51(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692>(marshaled.___IsHoverTargetOverlay_51, _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692_il2cpp_TypeInfo_var));
	unmarshaled.set_GetGamepadFocusOverlay_52(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F>(marshaled.___GetGamepadFocusOverlay_52, _GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F_il2cpp_TypeInfo_var));
	unmarshaled.set_SetGamepadFocusOverlay_53(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377>(marshaled.___SetGamepadFocusOverlay_53, _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayNeighbor_54(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D>(marshaled.___SetOverlayNeighbor_54, _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D_il2cpp_TypeInfo_var));
	unmarshaled.set_MoveGamepadFocusToNeighbor_55(il2cpp_codegen_marshal_function_ptr_to_delegate<_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F>(marshaled.___MoveGamepadFocusToNeighbor_55, _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayDualAnalogTransform_56(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A>(marshaled.___SetOverlayDualAnalogTransform_56, _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayDualAnalogTransform_57(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3>(marshaled.___GetOverlayDualAnalogTransform_57, _GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayTexture_58(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C>(marshaled.___SetOverlayTexture_58, _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_il2cpp_TypeInfo_var));
	unmarshaled.set_ClearOverlayTexture_59(il2cpp_codegen_marshal_function_ptr_to_delegate<_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E>(marshaled.___ClearOverlayTexture_59, _ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayRaw_60(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9>(marshaled.___SetOverlayRaw_60, _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayFromFile_61(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F>(marshaled.___SetOverlayFromFile_61, _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTexture_62(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73>(marshaled.___GetOverlayTexture_62, _GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73_il2cpp_TypeInfo_var));
	unmarshaled.set_ReleaseNativeOverlayHandle_63(il2cpp_codegen_marshal_function_ptr_to_delegate<_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98>(marshaled.___ReleaseNativeOverlayHandle_63, _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayTextureSize_64(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62>(marshaled.___GetOverlayTextureSize_64, _GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62_il2cpp_TypeInfo_var));
	unmarshaled.set_CreateDashboardOverlay_65(il2cpp_codegen_marshal_function_ptr_to_delegate<_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B>(marshaled.___CreateDashboardOverlay_65, _CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B_il2cpp_TypeInfo_var));
	unmarshaled.set_IsDashboardVisible_66(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C>(marshaled.___IsDashboardVisible_66, _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C_il2cpp_TypeInfo_var));
	unmarshaled.set_IsActiveDashboardOverlay_67(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B>(marshaled.___IsActiveDashboardOverlay_67, _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_il2cpp_TypeInfo_var));
	unmarshaled.set_SetDashboardOverlaySceneProcess_68(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C>(marshaled.___SetDashboardOverlaySceneProcess_68, _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDashboardOverlaySceneProcess_69(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6>(marshaled.___GetDashboardOverlaySceneProcess_69, _GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowDashboard_70(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911>(marshaled.___ShowDashboard_70, _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911_il2cpp_TypeInfo_var));
	unmarshaled.set_GetPrimaryDashboardDevice_71(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C>(marshaled.___GetPrimaryDashboardDevice_71, _GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowKeyboard_72(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1>(marshaled.___ShowKeyboard_72, _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowKeyboardForOverlay_73(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6>(marshaled.___ShowKeyboardForOverlay_73, _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_il2cpp_TypeInfo_var));
	unmarshaled.set_GetKeyboardText_74(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7>(marshaled.___GetKeyboardText_74, _GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7_il2cpp_TypeInfo_var));
	unmarshaled.set_HideKeyboard_75(il2cpp_codegen_marshal_function_ptr_to_delegate<_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9>(marshaled.___HideKeyboard_75, _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_il2cpp_TypeInfo_var));
	unmarshaled.set_SetKeyboardTransformAbsolute_76(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA>(marshaled.___SetKeyboardTransformAbsolute_76, _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA_il2cpp_TypeInfo_var));
	unmarshaled.set_SetKeyboardPositionForOverlay_77(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF>(marshaled.___SetKeyboardPositionForOverlay_77, _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF_il2cpp_TypeInfo_var));
	unmarshaled.set_SetOverlayIntersectionMask_78(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04>(marshaled.___SetOverlayIntersectionMask_78, _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOverlayFlags_79(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8>(marshaled.___GetOverlayFlags_79, _GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8_il2cpp_TypeInfo_var));
	unmarshaled.set_ShowMessageOverlay_80(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F>(marshaled.___ShowMessageOverlay_80, _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F_il2cpp_TypeInfo_var));
	unmarshaled.set_CloseMessageOverlay_81(il2cpp_codegen_marshal_function_ptr_to_delegate<_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9>(marshaled.___CloseMessageOverlay_81, _CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVROverlay
extern "C" void IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshal_com_cleanup(IVROverlay_tFAE763C447352BFE3C1D4D3C08166F27314AA8D9_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E (_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ClearOverlayTexture::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ClearOverlayTexture__ctor_m0097AB1E8ADBAE150E51C2A5DF6E1E047E09A7B0 (_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ClearOverlayTexture::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _ClearOverlayTexture_Invoke_m7B28FD66279D30BB5FF94AE734551B9CE1E5C823 (_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ClearOverlayTexture::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ClearOverlayTexture_BeginInvoke_m8975E6A1256800A855D16DE4A14F904E3B6356B6 (_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ClearOverlayTexture_BeginInvoke_m8975E6A1256800A855D16DE4A14F904E3B6356B6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ClearOverlayTexture::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _ClearOverlayTexture_EndInvoke_mD288C27061B5707C98FA3B41929CFB1270997F87 (_ClearOverlayTexture_tB40DB95E62536EF511BA64254025880643A9A10E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 (_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVROverlay__CloseMessageOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CloseMessageOverlay__ctor_m00FCEF645C50C2CD24D98C2F56022222A2FA0AAD (_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__CloseMessageOverlay::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _CloseMessageOverlay_Invoke_m2B31B255B0B11A5CA2B7A1740F6F00210E5AAA3D (_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__CloseMessageOverlay::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CloseMessageOverlay_BeginInvoke_m0D25EE53E0D021F49B4D14BBCD8FA41E69126EBE (_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVROverlay__CloseMessageOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _CloseMessageOverlay_EndInvoke_mA1C13EE7915157585E6FBDFEE72BC21767FB561F (_CloseMessageOverlay_tD6CF3EB04D43FCF78B3F8A7CC469EFB4E841D4E9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 (_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE * ___pParams1, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * ___pResults2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pParams1, ___pResults2);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__ComputeOverlayIntersection::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ComputeOverlayIntersection__ctor_mF1A0600FD8FCCEF3A3978452ED978F3302F002AF (_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__ComputeOverlayIntersection::Invoke(System.UInt64,Valve.VR.VROverlayIntersectionParams_tU26,Valve.VR.VROverlayIntersectionResults_tU26)
extern "C" IL2CPP_METHOD_ATTR bool _ComputeOverlayIntersection_Invoke_m7C8995DFB5D9BE5E6B746509913CB9468940589C (_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE * ___pParams1, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * ___pResults2, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef bool (*FunctionPointerType) (uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
							else
								result = GenericVirtFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
							else
								result = VirtFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
						else
							result = GenericVirtFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
						else
							result = VirtFuncInvoker3< bool, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE *, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pParams1, ___pResults2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ComputeOverlayIntersection::BeginInvoke(System.UInt64,Valve.VR.VROverlayIntersectionParams_tU26,Valve.VR.VROverlayIntersectionResults_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ComputeOverlayIntersection_BeginInvoke_m27561D95C52A8904C90CC369BB6057215AC391C0 (_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE * ___pParams1, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * ___pResults2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ComputeOverlayIntersection_BeginInvoke_m27561D95C52A8904C90CC369BB6057215AC391C0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE_il2cpp_TypeInfo_var, &*___pParams1);
	__d_args[2] = Box(VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354_il2cpp_TypeInfo_var, &*___pResults2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Boolean Valve.VR.IVROverlay__ComputeOverlayIntersection::EndInvoke(Valve.VR.VROverlayIntersectionParams_tU26,Valve.VR.VROverlayIntersectionResults_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _ComputeOverlayIntersection_EndInvoke_mD20714AD9CC1529C93EEA5321CB097A8B720BD4D (_ComputeOverlayIntersection_t5C1F2AA3D6D70C7CCA27C3477D7479786F8810C2 * __this, VROverlayIntersectionParams_t_tE038830920B44860278C7D299044D6769FC66CBE * ___pParams0, VROverlayIntersectionResults_t_tCE7EB19CE88BEF4E57C1DC6906B067EAE5BB9354 * ___pResults1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pParams0,
	___pResults1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B (_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayFriendlyName1, uint64_t* ___pMainHandle2, uint64_t* ___pThumbnailHandle3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, uint64_t*, uint64_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchOverlayKey0U27 to native representation
	char* ____pchOverlayKey0_marshaled = NULL;
	____pchOverlayKey0_marshaled = il2cpp_codegen_marshal_string(___pchOverlayKey0);

	// Marshaling of parameter U27___pchOverlayFriendlyName1U27 to native representation
	char* ____pchOverlayFriendlyName1_marshaled = NULL;
	____pchOverlayFriendlyName1_marshaled = il2cpp_codegen_marshal_string(___pchOverlayFriendlyName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchOverlayKey0_marshaled, ____pchOverlayFriendlyName1_marshaled, ___pMainHandle2, ___pThumbnailHandle3);

	// Marshaling cleanup of parameter U27___pchOverlayKey0U27 native representation
	il2cpp_codegen_marshal_free(____pchOverlayKey0_marshaled);
	____pchOverlayKey0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchOverlayFriendlyName1U27 native representation
	il2cpp_codegen_marshal_free(____pchOverlayFriendlyName1_marshaled);
	____pchOverlayFriendlyName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__CreateDashboardOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CreateDashboardOverlay__ctor_mF4B5D63732A3593BF3CCD64FCFFBBDCE9DBE8FD3 (_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__CreateDashboardOverlay::Invoke(System.String,System.String,System.UInt64U26,System.UInt64U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _CreateDashboardOverlay_Invoke_mAD33D169D9FE769F3F4B13B56FDD5C81CDB8FD2E (_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayFriendlyName1, uint64_t* ___pMainHandle2, uint64_t* ___pThumbnailHandle3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
							else
								result = GenericVirtFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
							else
								result = VirtFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
							else
								result = GenericVirtFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
							else
								result = VirtFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
						else
							result = GenericVirtFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
						else
							result = VirtFuncInvoker3< int32_t, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
						else
							result = GenericVirtFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
						else
							result = VirtFuncInvoker4< int32_t, String_t*, String_t*, uint64_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayFriendlyName1, ___pMainHandle2, ___pThumbnailHandle3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__CreateDashboardOverlay::BeginInvoke(System.String,System.String,System.UInt64U26,System.UInt64U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CreateDashboardOverlay_BeginInvoke_mFCF0D9B288403ECF1BF28C2C4A0EB240BDD17710 (_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayFriendlyName1, uint64_t* ___pMainHandle2, uint64_t* ___pThumbnailHandle3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_CreateDashboardOverlay_BeginInvoke_mFCF0D9B288403ECF1BF28C2C4A0EB240BDD17710_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchOverlayKey0;
	__d_args[1] = ___pchOverlayFriendlyName1;
	__d_args[2] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___pMainHandle2);
	__d_args[3] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___pThumbnailHandle3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__CreateDashboardOverlay::EndInvoke(System.UInt64U26,System.UInt64U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _CreateDashboardOverlay_EndInvoke_m0BCC50C59CD3EAF3B2A6C19FFBEC0B7FE072B02C (_CreateDashboardOverlay_t63E5461A9C53DAA6D7945E954E2F85AB51CF3D9B * __this, uint64_t* ___pMainHandle0, uint64_t* ___pThumbnailHandle1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pMainHandle0,
	___pThumbnailHandle1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 (_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayName1, uint64_t* ___pOverlayHandle2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, uint64_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchOverlayKey0U27 to native representation
	char* ____pchOverlayKey0_marshaled = NULL;
	____pchOverlayKey0_marshaled = il2cpp_codegen_marshal_string(___pchOverlayKey0);

	// Marshaling of parameter U27___pchOverlayName1U27 to native representation
	char* ____pchOverlayName1_marshaled = NULL;
	____pchOverlayName1_marshaled = il2cpp_codegen_marshal_string(___pchOverlayName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchOverlayKey0_marshaled, ____pchOverlayName1_marshaled, ___pOverlayHandle2);

	// Marshaling cleanup of parameter U27___pchOverlayKey0U27 native representation
	il2cpp_codegen_marshal_free(____pchOverlayKey0_marshaled);
	____pchOverlayKey0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchOverlayName1U27 native representation
	il2cpp_codegen_marshal_free(____pchOverlayName1_marshaled);
	____pchOverlayName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__CreateOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _CreateOverlay__ctor_m407A3D8F192FFF3511DF362F5139A9F8D122E2E0 (_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__CreateOverlay::Invoke(System.String,System.String,System.UInt64U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _CreateOverlay_Invoke_mC2362DCF776814439267072DCDE9054F0F3B4458 (_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayName1, uint64_t* ___pOverlayHandle2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
				}
			}
			else if (___parameterCount != 3)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
							else
								result = GenericVirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
							else
								result = VirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
							else
								result = GenericVirtFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
							else
								result = VirtFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
						else
							result = GenericVirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
						else
							result = VirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (String_t*, String_t*, uint64_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
						else
							result = GenericVirtFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
						else
							result = VirtFuncInvoker3< int32_t, String_t*, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pchOverlayName1, ___pOverlayHandle2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__CreateOverlay::BeginInvoke(System.String,System.String,System.UInt64U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _CreateOverlay_BeginInvoke_m2D3D6C6458E3DA0EE365A8AF5F1590BB0F71AD75 (_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 * __this, String_t* ___pchOverlayKey0, String_t* ___pchOverlayName1, uint64_t* ___pOverlayHandle2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_CreateOverlay_BeginInvoke_m2D3D6C6458E3DA0EE365A8AF5F1590BB0F71AD75_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchOverlayKey0;
	__d_args[1] = ___pchOverlayName1;
	__d_args[2] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___pOverlayHandle2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__CreateOverlay::EndInvoke(System.UInt64U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _CreateOverlay_EndInvoke_m31E8C26D4F02F05F653437DC2A6EC3AD5D17432F (_CreateOverlay_tC3E6C9A66CBEB9E92A1AD40D6ACA33DDA79273B9 * __this, uint64_t* ___pOverlayHandle0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOverlayHandle0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 (_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__DestroyOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _DestroyOverlay__ctor_m43D69940D05A8E432A29C344976A103CB7372363 (_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__DestroyOverlay::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _DestroyOverlay_Invoke_m88DF355089B1B4432441F876114EEF383C259B3F (_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__DestroyOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _DestroyOverlay_BeginInvoke_m774F18C2CDAC494A6A58BED4C9D0ECD4A831E843 (_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_DestroyOverlay_BeginInvoke_m774F18C2CDAC494A6A58BED4C9D0ECD4A831E843_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__DestroyOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _DestroyOverlay_EndInvoke_m1A470FD1E55F58F02D1222155EDB48290A457853 (_DestroyOverlay_t0F997083A67539344F3D1E87C528587C9F62D313 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B (_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B * __this, String_t* ___pchOverlayKey0, uint64_t* ___pOverlayHandle1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, uint64_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchOverlayKey0U27 to native representation
	char* ____pchOverlayKey0_marshaled = NULL;
	____pchOverlayKey0_marshaled = il2cpp_codegen_marshal_string(___pchOverlayKey0);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchOverlayKey0_marshaled, ___pOverlayHandle1);

	// Marshaling cleanup of parameter U27___pchOverlayKey0U27 native representation
	il2cpp_codegen_marshal_free(____pchOverlayKey0_marshaled);
	____pchOverlayKey0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__FindOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FindOverlay__ctor_mD3028C8F82BBFC6FB702CE32A13A052421474A2E (_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__FindOverlay::Invoke(System.String,System.UInt64U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _FindOverlay_Invoke_mC9B41CAEEF34D45DB3602F85C00B4009D97C6305 (_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B * __this, String_t* ___pchOverlayKey0, uint64_t* ___pOverlayHandle1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
				}
			}
			else if (___parameterCount != 2)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pOverlayHandle1);
							else
								result = GenericVirtFuncInvoker1< int32_t, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pOverlayHandle1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pOverlayHandle1);
							else
								result = VirtFuncInvoker1< int32_t, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pOverlayHandle1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
							else
								result = GenericVirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
							else
								result = VirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, uint64_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pOverlayHandle1);
						else
							result = GenericVirtFuncInvoker1< int32_t, uint64_t* >::Invoke(targetMethod, ___pchOverlayKey0, ___pOverlayHandle1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayKey0, ___pOverlayHandle1);
						else
							result = VirtFuncInvoker1< int32_t, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayKey0, ___pOverlayHandle1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (String_t*, uint64_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
						else
							result = GenericVirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(targetMethod, targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
						else
							result = VirtFuncInvoker2< int32_t, String_t*, uint64_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayKey0, ___pOverlayHandle1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, String_t*, uint64_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayKey0, ___pOverlayHandle1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__FindOverlay::BeginInvoke(System.String,System.UInt64U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _FindOverlay_BeginInvoke_m6C74EED3A76448A5BBD39CB1907108F9BF384D74 (_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B * __this, String_t* ___pchOverlayKey0, uint64_t* ___pOverlayHandle1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FindOverlay_BeginInvoke_m6C74EED3A76448A5BBD39CB1907108F9BF384D74_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchOverlayKey0;
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___pOverlayHandle1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__FindOverlay::EndInvoke(System.UInt64U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _FindOverlay_EndInvoke_m835D0FFD44A1FA4F17AB86831E50EC90A42ABE79 (_FindOverlay_tB27BCDFE69D28B2D464774768ED8FC55B8A1120B * __this, uint64_t* ___pOverlayHandle0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOverlayHandle0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 (_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punProcessId1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___punProcessId1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetDashboardOverlaySceneProcess__ctor_mE04EFFD9158BF08BAD028F9F1FC5C0331DC996DD (_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess::Invoke(System.UInt64,System.UInt32U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetDashboardOverlaySceneProcess_Invoke_m12399B7719661BFC8107689EE445B4BDC717B05B (_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punProcessId1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punProcessId1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punProcessId1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punProcessId1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punProcessId1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punProcessId1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punProcessId1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punProcessId1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punProcessId1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punProcessId1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punProcessId1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punProcessId1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punProcessId1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punProcessId1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punProcessId1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punProcessId1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punProcessId1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess::BeginInvoke(System.UInt64,System.UInt32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetDashboardOverlaySceneProcess_BeginInvoke_mA94C0065B2921FFF09BE01094D15B82563972D27 (_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punProcessId1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetDashboardOverlaySceneProcess_BeginInvoke_mA94C0065B2921FFF09BE01094D15B82563972D27_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punProcessId1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetDashboardOverlaySceneProcess::EndInvoke(System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetDashboardOverlaySceneProcess_EndInvoke_mD8008F5496DC5597E728BD0ECE11EFA07A7886FE (_GetDashboardOverlaySceneProcess_t7BFAB8CBA9C199B08C19A89338F47D651D04C7D6 * __this, uint32_t* ___punProcessId0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punProcessId0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint64_t DelegatePInvokeWrapper__GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F (_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F * __this, const RuntimeMethod* method)
{
	typedef uint64_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint64_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetGamepadFocusOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetGamepadFocusOverlay__ctor_m682F2A44FC49256522B697356C3E7DC631ACD563 (_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt64 Valve.VR.IVROverlay__GetGamepadFocusOverlay::Invoke()
extern "C" IL2CPP_METHOD_ATTR uint64_t _GetGamepadFocusOverlay_Invoke_m3F5B03A41AEEA92A0CAB91D1216FDFFD3E185F21 (_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F * __this, const RuntimeMethod* method)
{
	uint64_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef uint64_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef uint64_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< uint64_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< uint64_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef uint64_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint64_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint64_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< uint64_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< uint64_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef uint64_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetGamepadFocusOverlay::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetGamepadFocusOverlay_BeginInvoke_mD57FF3E17B06DD5D06C9D91FDB2DFF146F5B0CA3 (_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt64 Valve.VR.IVROverlay__GetGamepadFocusOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint64_t _GetGamepadFocusOverlay_EndInvoke_m181884E66BF3630B582E02CC323681A627071D48 (_GetGamepadFocusOverlay_t08EFA6EED1891E1294913E6F6B2F0D1D644B190F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint64_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint64_t DelegatePInvokeWrapper__GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF (_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF * __this, const RuntimeMethod* method)
{
	typedef uint64_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint64_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetHighQualityOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetHighQualityOverlay__ctor_m19EC1B9DEF8C78EBB30777A072329BBD49D06068 (_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt64 Valve.VR.IVROverlay__GetHighQualityOverlay::Invoke()
extern "C" IL2CPP_METHOD_ATTR uint64_t _GetHighQualityOverlay_Invoke_mC7BEA4D59DAB4D8698EEEBC2248AAF0431A991C0 (_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF * __this, const RuntimeMethod* method)
{
	uint64_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef uint64_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef uint64_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< uint64_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< uint64_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef uint64_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint64_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint64_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< uint64_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< uint64_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef uint64_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetHighQualityOverlay::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetHighQualityOverlay_BeginInvoke_m77D4B6437EE8BA7309A18D73D35FF80111E5212F (_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt64 Valve.VR.IVROverlay__GetHighQualityOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint64_t _GetHighQualityOverlay_EndInvoke_m7872F0E2C8895843D118BBA23B0825671E569085 (_GetHighQualityOverlay_t400F16801859083C584E0230D55F7233852185BF * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint64_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 (_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 * __this, StringBuilder_t * ___pchText0, uint32_t ___cchText1, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchText0U27 to native representation
	char* ____pchText0_marshaled = NULL;
	____pchText0_marshaled = il2cpp_codegen_marshal_string_builder(___pchText0);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchText0_marshaled, ___cchText1);

	// Marshaling of parameter U27___pchText0U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchText0, ____pchText0_marshaled);

	// Marshaling cleanup of parameter U27___pchText0U27 native representation
	il2cpp_codegen_marshal_free(____pchText0_marshaled);
	____pchText0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetKeyboardText::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetKeyboardText__ctor_m172C7E88791B8AFCB5CE5DD1E252E38A80C0DF20 (_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetKeyboardText::Invoke(System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetKeyboardText_Invoke_m9E5824FD69ACCD2995807F921214CF39EB6FFDB4 (_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 * __this, StringBuilder_t * ___pchText0, uint32_t ___cchText1, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___cchText1, targetMethod);
				}
			}
			else if (___parameterCount != 2)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchText0, ___cchText1);
							else
								result = GenericVirtFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchText0, ___cchText1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchText0, ___cchText1);
							else
								result = VirtFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchText0, ___cchText1);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchText0, ___cchText1);
							else
								result = GenericVirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchText0, ___cchText1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchText0, ___cchText1);
							else
								result = VirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchText0, ___cchText1);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___cchText1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___cchText1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchText0, ___cchText1);
						else
							result = GenericVirtFuncInvoker1< uint32_t, uint32_t >::Invoke(targetMethod, ___pchText0, ___cchText1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchText0, ___cchText1);
						else
							result = VirtFuncInvoker1< uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchText0, ___cchText1);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___cchText1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchText0, ___cchText1);
						else
							result = GenericVirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchText0, ___cchText1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchText0, ___cchText1);
						else
							result = VirtFuncInvoker2< uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchText0, ___cchText1);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___cchText1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetKeyboardText::BeginInvoke(System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetKeyboardText_BeginInvoke_m206A3641D9DD83D32BAC052C253F3D9B2AF06C15 (_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 * __this, StringBuilder_t * ___pchText0, uint32_t ___cchText1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetKeyboardText_BeginInvoke_m206A3641D9DD83D32BAC052C253F3D9B2AF06C15_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchText0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___cchText1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.UInt32 Valve.VR.IVROverlay__GetKeyboardText::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetKeyboardText_EndInvoke_mE0DEA8A8203D4A2BF0DEC1A53ED71E9C0CFC0D6C (_GetKeyboardText_t16A19F9DE28F515312D2AE5AE5C572ABE875DAC7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 (_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 * __this, uint64_t ___ulOverlayHandle0, float* ___pfAlpha1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfAlpha1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayAlpha::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayAlpha__ctor_m1A0F22F8D446BB8119FCC6D93C2A9346763816B3 (_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayAlpha::Invoke(System.UInt64,System.SingleU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayAlpha_Invoke_mFEF9D833E75C7AA23A705CA3F763C993813A099F (_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 * __this, uint64_t ___ulOverlayHandle0, float* ___pfAlpha1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfAlpha1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfAlpha1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfAlpha1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfAlpha1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfAlpha1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfAlpha1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfAlpha1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfAlpha1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfAlpha1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfAlpha1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfAlpha1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfAlpha1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfAlpha1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfAlpha1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfAlpha1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfAlpha1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayAlpha::BeginInvoke(System.UInt64,System.SingleU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayAlpha_BeginInvoke_m34F8F530AC48D1133126CA69B0D99C2ECE843D0D (_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 * __this, uint64_t ___ulOverlayHandle0, float* ___pfAlpha1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayAlpha_BeginInvoke_m34F8F530AC48D1133126CA69B0D99C2ECE843D0D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfAlpha1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayAlpha::EndInvoke(System.SingleU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayAlpha_EndInvoke_m738609CB4AAF396B74DECD867214AEF9736EA861 (_GetOverlayAlpha_t520C35440BEC20280C86016E7CEF3AEFD08EDC99 * __this, float* ___pfAlpha0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfAlpha0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 (_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 * __this, uint64_t ___ulOverlayHandle0, float* ___pfMinDistanceInMeters1, float* ___pfMaxDistanceInMeters2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayAutoCurveDistanceRangeInMeters__ctor_mB7D542D3965F4BA0D16DF2D0BE33A2A5C29C3540 (_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters::Invoke(System.UInt64,System.SingleU26,System.SingleU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayAutoCurveDistanceRangeInMeters_Invoke_mBBD52D547115F1FF36986338D176E72CCD38043C (_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 * __this, uint64_t ___ulOverlayHandle0, float* ___pfMinDistanceInMeters1, float* ___pfMaxDistanceInMeters2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfMinDistanceInMeters1, ___pfMaxDistanceInMeters2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke(System.UInt64,System.SingleU26,System.SingleU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayAutoCurveDistanceRangeInMeters_BeginInvoke_mED0B2F8F4652E61F226EDB5D84C97AD9D25E5D2B (_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 * __this, uint64_t ___ulOverlayHandle0, float* ___pfMinDistanceInMeters1, float* ___pfMaxDistanceInMeters2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayAutoCurveDistanceRangeInMeters_BeginInvoke_mED0B2F8F4652E61F226EDB5D84C97AD9D25E5D2B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfMinDistanceInMeters1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfMaxDistanceInMeters2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayAutoCurveDistanceRangeInMeters::EndInvoke(System.SingleU26,System.SingleU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayAutoCurveDistanceRangeInMeters_EndInvoke_m921EF37B5E3C36E04C96B26F2190C1EC47741F1A (_GetOverlayAutoCurveDistanceRangeInMeters_t78689B1967F26521E3780521F4B2EF9B82AA6454 * __this, float* ___pfMinDistanceInMeters0, float* ___pfMaxDistanceInMeters1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfMinDistanceInMeters0,
	___pfMaxDistanceInMeters1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 (_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 * __this, uint64_t ___ulOverlayHandle0, float* ___pfRed1, float* ___pfGreen2, float* ___pfBlue3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*, float*, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayColor::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayColor__ctor_m261AF20FCDCC5E94B20C740F7190FE36EA961879 (_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayColor::Invoke(System.UInt64,System.SingleU26,System.SingleU26,System.SingleU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayColor_Invoke_m8082CC3AEE54CE9A7109095D1412849ECBEEEC41 (_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 * __this, uint64_t ___ulOverlayHandle0, float* ___pfRed1, float* ___pfGreen2, float* ___pfBlue3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, float*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
							else
								result = VirtFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float*, float*, float*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
						else
							result = VirtFuncInvoker4< int32_t, uint64_t, float*, float*, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, float*, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfRed1, ___pfGreen2, ___pfBlue3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayColor::BeginInvoke(System.UInt64,System.SingleU26,System.SingleU26,System.SingleU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayColor_BeginInvoke_mAE46BE0ED0C63882693A2F2C4F6ADF739991403F (_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 * __this, uint64_t ___ulOverlayHandle0, float* ___pfRed1, float* ___pfGreen2, float* ___pfBlue3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayColor_BeginInvoke_mAE46BE0ED0C63882693A2F2C4F6ADF739991403F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfRed1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfGreen2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfBlue3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayColor::EndInvoke(System.SingleU26,System.SingleU26,System.SingleU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayColor_EndInvoke_m41269C2EBB944CB009136B2C273E5CD6B45C14AA (_GetOverlayColor_t9B5297CCB535B490687DDD727D99B19B38424A38 * __this, float* ___pfRed0, float* ___pfGreen1, float* ___pfBlue2, RuntimeObject* ___result3, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfRed0,
	___pfGreen1,
	___pfBlue2,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result3, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 (_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvCenter2, float* ___pfRadius3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayDualAnalogTransform::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayDualAnalogTransform__ctor_m9D8FD1A52E140A935AB915DA86434CD062A5DA3B (_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayDualAnalogTransform::Invoke(System.UInt64,Valve.VR.EDualAnalogWhich,Valve.VR.HmdVector2_tU26,System.SingleU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayDualAnalogTransform_Invoke_m92892C881B6A8FD0B5A9EDF9510A4EE6EDED849A (_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvCenter2, float* ___pfRadius3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float* >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float* >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
							else
								result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float* >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float* >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
						else
							result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___pvCenter2, ___pfRadius3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayDualAnalogTransform::BeginInvoke(System.UInt64,Valve.VR.EDualAnalogWhich,Valve.VR.HmdVector2_tU26,System.SingleU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayDualAnalogTransform_BeginInvoke_m831A471126532C84D096B423F3CB10DEB05E096C (_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvCenter2, float* ___pfRadius3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayDualAnalogTransform_BeginInvoke_m831A471126532C84D096B423F3CB10DEB05E096C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlay0);
	__d_args[1] = Box(EDualAnalogWhich_t26DB6059FD57DBF15F7F416304BF27A036E14F4C_il2cpp_TypeInfo_var, &___eWhich1);
	__d_args[2] = Box(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_il2cpp_TypeInfo_var, &*___pvCenter2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfRadius3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayDualAnalogTransform::EndInvoke(Valve.VR.HmdVector2_tU26,System.SingleU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayDualAnalogTransform_EndInvoke_m9424B0FE239834AA8DAAD091ACE71CA3C9BCF45C (_GetOverlayDualAnalogTransform_t9A20BDDA4749E039E2C728C6FBAE2F8252239EE3 * __this, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvCenter0, float* ___pfRadius1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pvCenter0,
	___pfRadius1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  intptr_t DelegatePInvokeWrapper__GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 (_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 * __this, int32_t ___error0, const RuntimeMethod* method)
{
	typedef intptr_t (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	intptr_t returnValue = il2cppPInvokeFunc(___error0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayErrorNameFromEnum__ctor_m0267BDB9D9090F248877C7A2C116B6EB5D8D160B (_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.IntPtr Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum::Invoke(Valve.VR.EVROverlayError)
extern "C" IL2CPP_METHOD_ATTR intptr_t _GetOverlayErrorNameFromEnum_Invoke_mB3513FFC2B3B07C96782794C97644BBE06818068 (_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 * __this, int32_t ___error0, const RuntimeMethod* method)
{
	intptr_t result;
	memset(&result, 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
				}
				else
				{
					// closed
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
							else
								result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___error0);
							else
								result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___error0);
						}
					}
				}
				else
				{
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
			}
			else
			{
				// closed
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
						else
							result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___error0);
						else
							result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___error0);
					}
				}
			}
			else
			{
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum::BeginInvoke(Valve.VR.EVROverlayError,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayErrorNameFromEnum_BeginInvoke_m89757B0C3241EC45A50AAF62F063728F3BF41EDE (_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 * __this, int32_t ___error0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayErrorNameFromEnum_BeginInvoke_m89757B0C3241EC45A50AAF62F063728F3BF41EDE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_il2cpp_TypeInfo_var, &___error0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.IntPtr Valve.VR.IVROverlay__GetOverlayErrorNameFromEnum::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR intptr_t _GetOverlayErrorNameFromEnum_EndInvoke_m46B96F890008A1F18C78B10ED992CA4D9BB650D4 (_GetOverlayErrorNameFromEnum_tC864F183D25F63B3BFB720E96E163E9A653C2B51 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(intptr_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B (_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool* ___pbEnabled2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pbEnabled2U27 to native representation
	int32_t* ____pbEnabled2_marshaled = NULL;
	int32_t ____pbEnabled2_marshaled_dereferenced = 0;
	____pbEnabled2_marshaled_dereferenced = static_cast<int32_t>(*___pbEnabled2);
	____pbEnabled2_marshaled = &____pbEnabled2_marshaled_dereferenced;

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eOverlayFlag1, ____pbEnabled2_marshaled);

	// Marshaling of parameter U27___pbEnabled2U27 back from native representation
	bool _____pbEnabled2_marshaled_unmarshaled_dereferenced = false;
	_____pbEnabled2_marshaled_unmarshaled_dereferenced = static_cast<bool>(*____pbEnabled2_marshaled);
	*___pbEnabled2 = _____pbEnabled2_marshaled_unmarshaled_dereferenced;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayFlag::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayFlag__ctor_m8B44D15DAD6CB52F20B6808D1EB84A9E2F4B291E (_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayFlag::Invoke(System.UInt64,Valve.VR.VROverlayFlags,System.BooleanU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayFlag_Invoke_mF2745637556251ED8093DF743E37657F3156E690 (_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool* ___pbEnabled2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, bool* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___pbEnabled2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayFlag::BeginInvoke(System.UInt64,Valve.VR.VROverlayFlags,System.BooleanU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayFlag_BeginInvoke_m0F087830FECE97E96127D44DE7871E63B1A115A8 (_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool* ___pbEnabled2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayFlag_BeginInvoke_m0F087830FECE97E96127D44DE7871E63B1A115A8_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayFlags_t00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_il2cpp_TypeInfo_var, &___eOverlayFlag1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &*___pbEnabled2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayFlag::EndInvoke(System.BooleanU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayFlag_EndInvoke_mEB886876A36D985A54F84CD7ECE266F23F49E81E (_GetOverlayFlag_t0F95CECAC1844F38B1AD8E77208BA4E682D53D5B * __this, bool* ___pbEnabled0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pbEnabled0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 (_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pFlags1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pFlags1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayFlags::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayFlags__ctor_mB61D81D8A10D2CF29992D3E09879CA3C605137F5 (_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayFlags::Invoke(System.UInt64,System.UInt32U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayFlags_Invoke_m89F86F048A0D0B664DB582DD5F9BDDE13EBA065B (_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pFlags1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pFlags1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pFlags1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pFlags1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pFlags1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pFlags1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pFlags1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pFlags1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pFlags1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pFlags1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pFlags1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pFlags1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pFlags1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pFlags1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pFlags1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pFlags1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pFlags1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayFlags::BeginInvoke(System.UInt64,System.UInt32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayFlags_BeginInvoke_m2362B070DEC0BFF86CB68B915F0CF7CC6B910D4F (_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pFlags1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayFlags_BeginInvoke_m2362B070DEC0BFF86CB68B915F0CF7CC6B910D4F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pFlags1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayFlags::EndInvoke(System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayFlags_EndInvoke_m71ED126AB816478AA6B6EAF5025C81675DEED291 (_GetOverlayFlags_tA8CE7B7AD1D093943B2845C95662447F7F6C0BA8 * __this, uint32_t* ___pFlags0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pFlags0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 (_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unBufferSize2, uint32_t* ___punWidth3, uint32_t* ___punHeight4, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayImageData::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayImageData__ctor_mE56BB15830634744A86012CA805269F662C3B04A (_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayImageData::Invoke(System.UInt64,System.IntPtr,System.UInt32,System.UInt32U26,System.UInt32U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayImageData_Invoke_mF2B2B8C9F8BBEF3937AD8AE9EA015178D0C86D5A (_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unBufferSize2, uint32_t* ___punWidth3, uint32_t* ___punHeight4, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 5)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
							else
								result = GenericVirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
							else
								result = VirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
						else
							result = GenericVirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
						else
							result = VirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unBufferSize2, ___punWidth3, ___punHeight4, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayImageData::BeginInvoke(System.UInt64,System.IntPtr,System.UInt32,System.UInt32U26,System.UInt32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayImageData_BeginInvoke_mBE07BA45D4A0138491315246D8943D6A2584891E (_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unBufferSize2, uint32_t* ___punWidth3, uint32_t* ___punHeight4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayImageData_BeginInvoke_mBE07BA45D4A0138491315246D8943D6A2584891E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pvBuffer1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punWidth3);
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punHeight4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayImageData::EndInvoke(System.UInt32U26,System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayImageData_EndInvoke_mAD9D9B3ED77DB2C11AE831F79C23D6917107D3CA (_GetOverlayImageData_t19E9C3D9BBB359C88D42CE528CFC7FCE6B772927 * __this, uint32_t* ___punWidth0, uint32_t* ___punHeight1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punWidth0,
	___punHeight1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E (_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peInputMethod1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___peInputMethod1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayInputMethod::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayInputMethod__ctor_m3936D12799256CF384D55A0E8D0827015C84B908 (_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayInputMethod::Invoke(System.UInt64,Valve.VR.VROverlayInputMethodU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayInputMethod_Invoke_m5363F26531A22B0F7ED0AD8BE0DA4E1F385038AF (_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peInputMethod1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peInputMethod1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peInputMethod1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peInputMethod1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peInputMethod1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peInputMethod1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peInputMethod1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peInputMethod1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peInputMethod1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peInputMethod1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peInputMethod1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peInputMethod1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peInputMethod1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peInputMethod1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peInputMethod1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peInputMethod1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peInputMethod1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayInputMethod::BeginInvoke(System.UInt64,Valve.VR.VROverlayInputMethodU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayInputMethod_BeginInvoke_mEA76A7789803C833712CF2F16EA035BD9BCA2ED5 (_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peInputMethod1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayInputMethod_BeginInvoke_mEA76A7789803C833712CF2F16EA035BD9BCA2ED5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayInputMethod_t92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_il2cpp_TypeInfo_var, &*___peInputMethod1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayInputMethod::EndInvoke(Valve.VR.VROverlayInputMethodU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayInputMethod_EndInvoke_m2850A3AF2FC4446448D381EC2BDC1D308D0AB59C (_GetOverlayInputMethod_t1A02A08A698CC51A98AF82D1885CC3339EBCCB4E * __this, int32_t* ___peInputMethod0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peInputMethod0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 (_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint64_t, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchValue1U27 to native representation
	char* ____pchValue1_marshaled = NULL;
	____pchValue1_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchValue1_marshaled, ___unBufferSize2, ___pError3);

	// Marshaling of parameter U27___pchValue1U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue1, ____pchValue1_marshaled);

	// Marshaling cleanup of parameter U27___pchValue1U27 native representation
	il2cpp_codegen_marshal_free(____pchValue1_marshaled);
	____pchValue1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayKey::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayKey__ctor_m24825CF8CCF40FF543A90EC97C9B286C8459EF65 (_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayKey::Invoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.EVROverlayErrorU26)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetOverlayKey_Invoke_m206C1E1FEAECD09DE1AC6B6EDE4F3DFA1CFF3422 (_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
							else
								result = GenericVirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
							else
								result = VirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
						else
							result = GenericVirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
						else
							result = VirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayKey::BeginInvoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.EVROverlayErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayKey_BeginInvoke_mAC62C06D34208DA4E2ED22909ABCD1112DBA7004 (_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayKey_BeginInvoke_mAC62C06D34208DA4E2ED22909ABCD1112DBA7004_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchValue1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	__d_args[3] = Box(EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_il2cpp_TypeInfo_var, &*___pError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayKey::EndInvoke(Valve.VR.EVROverlayErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetOverlayKey_EndInvoke_mD1BDEFA6A0CE147857BFFD912B5E3186B56296EE (_GetOverlayKey_t03528EF4F02721CB22969FBDCC4EAF33F825AC42 * __this, int32_t* ___pError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 (_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvecMouseScale1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pvecMouseScale1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayMouseScale::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayMouseScale__ctor_m13031640A50A700E49A0F7A229209C731E6FE245 (_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayMouseScale::Invoke(System.UInt64,Valve.VR.HmdVector2_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayMouseScale_Invoke_m5A385954621138F218E2718496D2A44092C1591E (_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvecMouseScale1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayMouseScale::BeginInvoke(System.UInt64,Valve.VR.HmdVector2_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayMouseScale_BeginInvoke_mE3752A916D84C5C539B32FEF3F8494B1FDF98A91 (_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvecMouseScale1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayMouseScale_BeginInvoke_mE3752A916D84C5C539B32FEF3F8494B1FDF98A91_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_il2cpp_TypeInfo_var, &*___pvecMouseScale1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayMouseScale::EndInvoke(Valve.VR.HmdVector2_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayMouseScale_EndInvoke_mD560F830C293A400BCEC1EC91089A76D6DCE8FEE (_GetOverlayMouseScale_tD53894B2F6D494097D96E4A0ECE6F706CEF87521 * __this, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvecMouseScale0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pvecMouseScale0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 (_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint64_t, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchValue1U27 to native representation
	char* ____pchValue1_marshaled = NULL;
	____pchValue1_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchValue1_marshaled, ___unBufferSize2, ___pError3);

	// Marshaling of parameter U27___pchValue1U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue1, ____pchValue1_marshaled);

	// Marshaling cleanup of parameter U27___pchValue1U27 native representation
	il2cpp_codegen_marshal_free(____pchValue1_marshaled);
	____pchValue1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayName::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayName__ctor_m440043F51777998488D549C2CC07F6D1E0018D10 (_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayName::Invoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.EVROverlayErrorU26)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetOverlayName_Invoke_m341145F58F8F7B7331B9B45323E1A278EEFA5563 (_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
							else
								result = GenericVirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
							else
								result = VirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
						else
							result = GenericVirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
						else
							result = VirtFuncInvoker4< uint32_t, uint64_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pError3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayName::BeginInvoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.EVROverlayErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayName_BeginInvoke_m59A7811FD9A3C347DDF1804F51C95A08366F12F3 (_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, int32_t* ___pError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayName_BeginInvoke_m59A7811FD9A3C347DDF1804F51C95A08366F12F3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchValue1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	__d_args[3] = Box(EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_il2cpp_TypeInfo_var, &*___pError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayName::EndInvoke(Valve.VR.EVROverlayErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetOverlayName_EndInvoke_m3CF2EA16AB7519816164A5FE90DD16650B115B86 (_GetOverlayName_tC00F8BD9A139D194F18D872A4BAB1EA3473F4C98 * __this, int32_t* ___pError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 (_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * ___pColor3, int32_t* ___pError4, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint64_t, char*, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchValue1U27 to native representation
	char* ____pchValue1_marshaled = NULL;
	____pchValue1_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchValue1_marshaled, ___unBufferSize2, ___pColor3, ___pError4);

	// Marshaling of parameter U27___pchValue1U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue1, ____pchValue1_marshaled);

	// Marshaling cleanup of parameter U27___pchValue1U27 native representation
	il2cpp_codegen_marshal_free(____pchValue1_marshaled);
	____pchValue1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayRenderModel::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayRenderModel__ctor_m8ACE70056F89724CD7AEBA050781FBCF22821723 (_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayRenderModel::Invoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.HmdColor_tU26,Valve.VR.EVROverlayErrorU26)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetOverlayRenderModel_Invoke_mB83F3E5211EB6703D9AC5C8595E0C51482093CFE (_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * ___pColor3, int32_t* ___pError4, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 5)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
							else
								result = GenericVirtFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
							else
								result = VirtFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
						else
							result = GenericVirtFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
						else
							result = VirtFuncInvoker5< uint32_t, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, StringBuilder_t *, uint32_t, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchValue1, ___unBufferSize2, ___pColor3, ___pError4, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayRenderModel::BeginInvoke(System.UInt64,System.Text.StringBuilder,System.UInt32,Valve.VR.HmdColor_tU26,Valve.VR.EVROverlayErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayRenderModel_BeginInvoke_m47A93217C8772D6EEDEA66EE3AD42E1131A1BD90 (_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 * __this, uint64_t ___ulOverlayHandle0, StringBuilder_t * ___pchValue1, uint32_t ___unBufferSize2, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * ___pColor3, int32_t* ___pError4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayRenderModel_BeginInvoke_m47A93217C8772D6EEDEA66EE3AD42E1131A1BD90_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchValue1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferSize2);
	__d_args[3] = Box(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5_il2cpp_TypeInfo_var, &*___pColor3);
	__d_args[4] = Box(EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_il2cpp_TypeInfo_var, &*___pError4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayRenderModel::EndInvoke(Valve.VR.HmdColor_tU26,Valve.VR.EVROverlayErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetOverlayRenderModel_EndInvoke_m469A673D29DA8F4DDFA9012DAA322812E126D498 (_GetOverlayRenderModel_tC084B2898264DA38E65AC5FE00FF7E5875A62F09 * __this, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * ___pColor0, int32_t* ___pError1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pColor0,
	___pError1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 (_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayRenderingPid::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayRenderingPid__ctor_mE4C9BCE2FF7CF9FEB35682C93897D761241DE169 (_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayRenderingPid::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetOverlayRenderingPid_Invoke_m88F576B2B8B1F5F1D46DAC001E100C7D18B691A1 (_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< uint32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< uint32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< uint32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< uint32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< uint32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< uint32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< uint32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< uint32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayRenderingPid::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayRenderingPid_BeginInvoke_m74E221D50FE171FC1639C8972C9D236EC8163AE4 (_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayRenderingPid_BeginInvoke_m74E221D50FE171FC1639C8972C9D236EC8163AE4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.UInt32 Valve.VR.IVROverlay__GetOverlayRenderingPid::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetOverlayRenderingPid_EndInvoke_m101448CEC543ECB14722AB50C0F4F1A954B22C2F (_GetOverlayRenderingPid_tCA85AE4092DB503324E1B890777B252774FF90A7 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 (_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punSortOrder1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___punSortOrder1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlaySortOrder::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlaySortOrder__ctor_mD3AFCB51F751995362A0697DB49E4B58CEAC4423 (_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlaySortOrder::Invoke(System.UInt64,System.UInt32U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlaySortOrder_Invoke_m9253035D7A038D9CAAF56057CA5B61D2C830473B (_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punSortOrder1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punSortOrder1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punSortOrder1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punSortOrder1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punSortOrder1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punSortOrder1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punSortOrder1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punSortOrder1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punSortOrder1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punSortOrder1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punSortOrder1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punSortOrder1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punSortOrder1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punSortOrder1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punSortOrder1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punSortOrder1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punSortOrder1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlaySortOrder::BeginInvoke(System.UInt64,System.UInt32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlaySortOrder_BeginInvoke_mB05B3F4B3B74BF3BA68BBD8360DFF7DE4E3B00D9 (_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punSortOrder1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlaySortOrder_BeginInvoke_mB05B3F4B3B74BF3BA68BBD8360DFF7DE4E3B00D9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punSortOrder1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlaySortOrder::EndInvoke(System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlaySortOrder_EndInvoke_mC58629AD85EA3FBBA8E8BE16F041EFC25DD5D141 (_GetOverlaySortOrder_t731C3645CFC52EC4637F953F486FE82D5C1EB408 * __this, uint32_t* ___punSortOrder0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punSortOrder0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 (_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 * __this, uint64_t ___ulOverlayHandle0, float* ___pfTexelAspect1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfTexelAspect1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTexelAspect::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTexelAspect__ctor_m7D0BB7FDA4688F210AFE885C8D3A3160C167596E (_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTexelAspect::Invoke(System.UInt64,System.SingleU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTexelAspect_Invoke_m198AD74B463B3B222EF82BC4FFDCECF19C1DEBA7 (_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 * __this, uint64_t ___ulOverlayHandle0, float* ___pfTexelAspect1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfTexelAspect1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfTexelAspect1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTexelAspect::BeginInvoke(System.UInt64,System.SingleU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTexelAspect_BeginInvoke_mBFC7A51B03BE4A374F9D63F9CFF80665D7860F12 (_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 * __this, uint64_t ___ulOverlayHandle0, float* ___pfTexelAspect1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTexelAspect_BeginInvoke_mBFC7A51B03BE4A374F9D63F9CFF80665D7860F12_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfTexelAspect1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTexelAspect::EndInvoke(System.SingleU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTexelAspect_EndInvoke_mDB06FF1CDA413F0313D4695FA3649FCDADECF317 (_GetOverlayTexelAspect_t3DC4606D3290DF06BB380623CAA587F9CA62FCD7 * __this, float* ___pfTexelAspect0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfTexelAspect0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 (_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 * __this, uint64_t ___ulOverlayHandle0, intptr_t* ___pNativeTextureHandle1, intptr_t ___pNativeTextureRef2, uint32_t* ___pWidth3, uint32_t* ___pHeight4, uint32_t* ___pNativeFormat5, int32_t* ___pAPIType6, int32_t* ___pColorSpace7, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pTextureBounds8, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTexture::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTexture__ctor_m0232EA7ACEDA876D510407441FDF955035B9F9E9 (_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTexture::Invoke(System.UInt64,System.IntPtrU26,System.IntPtr,System.UInt32U26,System.UInt32U26,System.UInt32U26,Valve.VR.ETextureTypeU26,Valve.VR.EColorSpaceU26,Valve.VR.VRTextureBounds_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTexture_Invoke_m35C818B8E3941C7882D83EF859BC0B3FF9A73192 (_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 * __this, uint64_t ___ulOverlayHandle0, intptr_t* ___pNativeTextureHandle1, intptr_t ___pNativeTextureRef2, uint32_t* ___pWidth3, uint32_t* ___pHeight4, uint32_t* ___pNativeFormat5, int32_t* ___pAPIType6, int32_t* ___pColorSpace7, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pTextureBounds8, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 9)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
							else
								result = GenericVirtFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
							else
								result = VirtFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 9)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
						else
							result = GenericVirtFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
						else
							result = VirtFuncInvoker9< int32_t, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t*, intptr_t, uint32_t*, uint32_t*, uint32_t*, int32_t*, int32_t*, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, ___pNativeTextureRef2, ___pWidth3, ___pHeight4, ___pNativeFormat5, ___pAPIType6, ___pColorSpace7, ___pTextureBounds8, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTexture::BeginInvoke(System.UInt64,System.IntPtrU26,System.IntPtr,System.UInt32U26,System.UInt32U26,System.UInt32U26,Valve.VR.ETextureTypeU26,Valve.VR.EColorSpaceU26,Valve.VR.VRTextureBounds_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTexture_BeginInvoke_mE06C83C573532DE53E6DEDD55869531CC288BF68 (_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 * __this, uint64_t ___ulOverlayHandle0, intptr_t* ___pNativeTextureHandle1, intptr_t ___pNativeTextureRef2, uint32_t* ___pWidth3, uint32_t* ___pHeight4, uint32_t* ___pNativeFormat5, int32_t* ___pAPIType6, int32_t* ___pColorSpace7, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pTextureBounds8, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback9, RuntimeObject * ___object10, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTexture_BeginInvoke_mE06C83C573532DE53E6DEDD55869531CC288BF68_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[10] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___pNativeTextureHandle1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pNativeTextureRef2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pWidth3);
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pHeight4);
	__d_args[5] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pNativeFormat5);
	__d_args[6] = Box(ETextureType_t47A335610F8DC272C02D381BCEEE184C17B0BD17_il2cpp_TypeInfo_var, &*___pAPIType6);
	__d_args[7] = Box(EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_il2cpp_TypeInfo_var, &*___pColorSpace7);
	__d_args[8] = Box(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813_il2cpp_TypeInfo_var, &*___pTextureBounds8);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback9, (RuntimeObject*)___object10);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTexture::EndInvoke(System.IntPtrU26,System.UInt32U26,System.UInt32U26,System.UInt32U26,Valve.VR.ETextureTypeU26,Valve.VR.EColorSpaceU26,Valve.VR.VRTextureBounds_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTexture_EndInvoke_mF27B64BB47A3B4DAEDECE9656BCDE70CA3AF6956 (_GetOverlayTexture_t4C9EC37444B69CC6D5EAD2142195809961468C73 * __this, intptr_t* ___pNativeTextureHandle0, uint32_t* ___pWidth1, uint32_t* ___pHeight2, uint32_t* ___pNativeFormat3, int32_t* ___pAPIType4, int32_t* ___pColorSpace5, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pTextureBounds6, RuntimeObject* ___result7, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pNativeTextureHandle0,
	___pWidth1,
	___pHeight2,
	___pNativeFormat3,
	___pAPIType4,
	___pColorSpace5,
	___pTextureBounds6,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result7, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 (_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pOverlayTextureBounds1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pOverlayTextureBounds1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTextureBounds::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTextureBounds__ctor_mA7481B4224B2105B0BE56591A9155375025B764C (_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureBounds::Invoke(System.UInt64,Valve.VR.VRTextureBounds_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureBounds_Invoke_mA419DF6E20652BDEB2A1FFD8C36908A0BF40F7CB (_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pOverlayTextureBounds1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTextureBounds::BeginInvoke(System.UInt64,Valve.VR.VRTextureBounds_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTextureBounds_BeginInvoke_mF74550F664328FB9F0CF169B7DD85450A793ABBD (_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pOverlayTextureBounds1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTextureBounds_BeginInvoke_mF74550F664328FB9F0CF169B7DD85450A793ABBD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813_il2cpp_TypeInfo_var, &*___pOverlayTextureBounds1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureBounds::EndInvoke(Valve.VR.VRTextureBounds_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureBounds_EndInvoke_mC5FFAA1EECC3F29CC27163D455DBA294AE437AA9 (_GetOverlayTextureBounds_t0A69532917D9D15C91D02CD4F76ED855A883E467 * __this, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pOverlayTextureBounds0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOverlayTextureBounds0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D (_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTextureColorSpace1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___peTextureColorSpace1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTextureColorSpace::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTextureColorSpace__ctor_m708AF0C834A07E8DE03B903DE859206771810CCA (_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureColorSpace::Invoke(System.UInt64,Valve.VR.EColorSpaceU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureColorSpace_Invoke_m4AD9E5937F35F15C0073ED0094BEBCBB8A8988DD (_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTextureColorSpace1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTextureColorSpace1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTextureColorSpace::BeginInvoke(System.UInt64,Valve.VR.EColorSpaceU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTextureColorSpace_BeginInvoke_m4578E77DC8FBC84F315DCE919B66F970BC54EA20 (_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTextureColorSpace1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTextureColorSpace_BeginInvoke_m4578E77DC8FBC84F315DCE919B66F970BC54EA20_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_il2cpp_TypeInfo_var, &*___peTextureColorSpace1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureColorSpace::EndInvoke(Valve.VR.EColorSpaceU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureColorSpace_EndInvoke_mF7DF4BDD6019465BA4B57BB6CE354E290E1724B7 (_GetOverlayTextureColorSpace_tED5AFF2BF7CB9C5D59644B66F6547FA9D22E677D * __this, int32_t* ___peTextureColorSpace0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peTextureColorSpace0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 (_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pWidth1, uint32_t* ___pHeight2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*, uint32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pWidth1, ___pHeight2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTextureSize::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTextureSize__ctor_mD10FAE0CD506F8E44EB07FF798438EF39DA6C879 (_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureSize::Invoke(System.UInt64,System.UInt32U26,System.UInt32U26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureSize_Invoke_m5141622A0BABE431CB9E6172CBFE05A143DEFE2F (_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pWidth1, uint32_t* ___pHeight2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t*, uint32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, uint32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pWidth1, ___pHeight2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTextureSize::BeginInvoke(System.UInt64,System.UInt32U26,System.UInt32U26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTextureSize_BeginInvoke_m985CA2665A9DBEE6725CA63E6F4B9F5B55001096 (_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___pWidth1, uint32_t* ___pHeight2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTextureSize_BeginInvoke_m985CA2665A9DBEE6725CA63E6F4B9F5B55001096_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pWidth1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pHeight2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTextureSize::EndInvoke(System.UInt32U26,System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTextureSize_EndInvoke_m8803E8DAF11055D9435059DAFDAEA788CBE48ECC (_GetOverlayTextureSize_tD4EB7BDC6ABF6B8801A66097F198C898A5E23A62 * __this, uint32_t* ___pWidth0, uint32_t* ___pHeight1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pWidth0,
	___pHeight1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 (_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTrackingOrigin1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformAbsolute::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTransformAbsolute__ctor_m432299A38AC1B69106E2F7B89573910EDFB66A19 (_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformAbsolute::Invoke(System.UInt64,Valve.VR.ETrackingUniverseOriginU26,Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformAbsolute_Invoke_mA7480952F2FAAEFE22CF4A2FDF63E781A63FD446 (_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTrackingOrigin1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformAbsolute::BeginInvoke(System.UInt64,Valve.VR.ETrackingUniverseOriginU26,Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformAbsolute_BeginInvoke_m2470499BD6B5F40BBE9FAADDD7D3C20F170450F9 (_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTrackingOrigin1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformAbsolute_BeginInvoke_m2470499BD6B5F40BBE9FAADDD7D3C20F170450F9_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_il2cpp_TypeInfo_var, &*___peTrackingOrigin1);
	__d_args[2] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pmatTrackingOriginToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformAbsolute::EndInvoke(Valve.VR.ETrackingUniverseOriginU26,Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformAbsolute_EndInvoke_m869DE25ACDEC89B8969B1E7FD54FBFC9681595A4 (_GetOverlayTransformAbsolute_t7A32B095880F7DCB84658F98E12DB37EA8DE7BF0 * __this, int32_t* ___peTrackingOrigin0, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToOverlayTransform1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peTrackingOrigin0,
	___pmatTrackingOriginToOverlayTransform1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 (_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 * __this, uint64_t ___ulOverlayHandle0, uint64_t* ___ulOverlayHandleParent1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatParentOverlayToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTransformOverlayRelative__ctor_m030F14150A9763C0F5F719B587A8AC6894347671 (_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative::Invoke(System.UInt64,System.UInt64U26,Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformOverlayRelative_Invoke_m09335CB7C8CD3475A39E2B7BB330567E018B38FF (_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 * __this, uint64_t ___ulOverlayHandle0, uint64_t* ___ulOverlayHandleParent1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatParentOverlayToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative::BeginInvoke(System.UInt64,System.UInt64U26,Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformOverlayRelative_BeginInvoke_mC2CCBA89AA370AB45C2CE96486795143E8F5DD70 (_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 * __this, uint64_t ___ulOverlayHandle0, uint64_t* ___ulOverlayHandleParent1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatParentOverlayToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformOverlayRelative_BeginInvoke_mC2CCBA89AA370AB45C2CE96486795143E8F5DD70_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &*___ulOverlayHandleParent1);
	__d_args[2] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pmatParentOverlayToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformOverlayRelative::EndInvoke(System.UInt64U26,Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformOverlayRelative_EndInvoke_mC42A1DC30492BC120FD1213F5E787C3B71654E2B (_GetOverlayTransformOverlayRelative_t7835DD76B92A937910886DA1C0A3540832010D38 * __this, uint64_t* ___ulOverlayHandleParent0, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatParentOverlayToOverlayTransform1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ulOverlayHandleParent0,
	___pmatParentOverlayToOverlayTransform1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF (_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punDeviceIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameSize3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchComponentName2U27 to native representation
	char* ____pchComponentName2_marshaled = NULL;
	____pchComponentName2_marshaled = il2cpp_codegen_marshal_string_builder(___pchComponentName2);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___punDeviceIndex1, ____pchComponentName2_marshaled, ___unComponentNameSize3);

	// Marshaling of parameter U27___pchComponentName2U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchComponentName2, ____pchComponentName2_marshaled);

	// Marshaling cleanup of parameter U27___pchComponentName2U27 native representation
	il2cpp_codegen_marshal_free(____pchComponentName2_marshaled);
	____pchComponentName2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTransformTrackedDeviceComponent__ctor_m7B1EC534067774BE20F23CF3A0491A2A5DEF3E66 (_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent::Invoke(System.UInt64,System.UInt32U26,System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformTrackedDeviceComponent_Invoke_m47DBB0F2E5102C131F0161C944912CA62875F9A6 (_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punDeviceIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameSize3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
							else
								result = VirtFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
						else
							result = VirtFuncInvoker4< int32_t, uint64_t, uint32_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punDeviceIndex1, ___pchComponentName2, ___unComponentNameSize3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent::BeginInvoke(System.UInt64,System.UInt32U26,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformTrackedDeviceComponent_BeginInvoke_mB8FAA9D6CCC8FD9854F20B8B4A0E8D08FE04FE16 (_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punDeviceIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameSize3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformTrackedDeviceComponent_BeginInvoke_mB8FAA9D6CCC8FD9854F20B8B4A0E8D08FE04FE16_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punDeviceIndex1);
	__d_args[2] = ___pchComponentName2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unComponentNameSize3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceComponent::EndInvoke(System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformTrackedDeviceComponent_EndInvoke_m839E6DD09946B4A93A6C2BF326CA740F0C913236 (_GetOverlayTransformTrackedDeviceComponent_tF75740881CC4A3F81A425A65A28F88455BFFF2CF * __this, uint32_t* ___punDeviceIndex0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punDeviceIndex0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B (_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punTrackedDevice1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackedDeviceToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTransformTrackedDeviceRelative__ctor_m3B2F3E632C721BBA58FF4E462BC2979D8CF2A267 (_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative::Invoke(System.UInt64,System.UInt32U26,Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformTrackedDeviceRelative_Invoke_m3B72A24A7A8B0161276C308F94BA55FBB6FFD5B7 (_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punTrackedDevice1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackedDeviceToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t*, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___punTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative::BeginInvoke(System.UInt64,System.UInt32U26,Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformTrackedDeviceRelative_BeginInvoke_m29B02D0C77058C01975086D88E1B91446FCC9654 (_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B * __this, uint64_t ___ulOverlayHandle0, uint32_t* ___punTrackedDevice1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackedDeviceToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformTrackedDeviceRelative_BeginInvoke_m29B02D0C77058C01975086D88E1B91446FCC9654_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___punTrackedDevice1);
	__d_args[2] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pmatTrackedDeviceToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformTrackedDeviceRelative::EndInvoke(System.UInt32U26,Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformTrackedDeviceRelative_EndInvoke_m31667A83497EC8E7648788D45EAACFD93CA83076 (_GetOverlayTransformTrackedDeviceRelative_tCE832CC6BC598672C2288773A13B322D98E64C4B * __this, uint32_t* ___punTrackedDevice0, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackedDeviceToOverlayTransform1, RuntimeObject* ___result2, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___punTrackedDevice0,
	___pmatTrackedDeviceToOverlayTransform1,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result2, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 (_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTransformType1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___peTransformType1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayTransformType::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayTransformType__ctor_mDD67075A76328F5708773B70EBAD0F047AF19C2B (_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformType::Invoke(System.UInt64,Valve.VR.VROverlayTransformTypeU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformType_Invoke_m6DD97B17338AB81B5F72ABB114D5B02677166501 (_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTransformType1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTransformType1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTransformType1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTransformType1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTransformType1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTransformType1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTransformType1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTransformType1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTransformType1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTransformType1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTransformType1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___peTransformType1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTransformType1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___peTransformType1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___peTransformType1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___peTransformType1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___peTransformType1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayTransformType::BeginInvoke(System.UInt64,Valve.VR.VROverlayTransformTypeU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayTransformType_BeginInvoke_mB3B9499B11D2E499633E731CDB75C436ADFC47B2 (_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 * __this, uint64_t ___ulOverlayHandle0, int32_t* ___peTransformType1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayTransformType_BeginInvoke_mB3B9499B11D2E499633E731CDB75C436ADFC47B2_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayTransformType_tE05C52CE902B086FBE0377133694A58DA911431E_il2cpp_TypeInfo_var, &*___peTransformType1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayTransformType::EndInvoke(Valve.VR.VROverlayTransformTypeU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayTransformType_EndInvoke_m165D84B804ECD72D5BAC65BD5D4A0C1B2BAAD5E1 (_GetOverlayTransformType_tB2F6B9BFA9D9E889DB78DB3741551EF1E50BD163 * __this, int32_t* ___peTransformType0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peTransformType0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 (_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 * __this, uint64_t ___ulOverlayHandle0, float* ___pfWidthInMeters1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pfWidthInMeters1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetOverlayWidthInMeters::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetOverlayWidthInMeters__ctor_m9A696BAA7D4367B5942A9FC44EA5EE44CBA695DB (_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayWidthInMeters::Invoke(System.UInt64,System.SingleU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayWidthInMeters_Invoke_mF614B04BEF78F5CC6A959E0D5D65302C53600BCD (_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 * __this, uint64_t ___ulOverlayHandle0, float* ___pfWidthInMeters1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, float* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pfWidthInMeters1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetOverlayWidthInMeters::BeginInvoke(System.UInt64,System.SingleU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetOverlayWidthInMeters_BeginInvoke_mFFC803F2D21006C2BCB34B5A9F77C5DC696CAA85 (_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 * __this, uint64_t ___ulOverlayHandle0, float* ___pfWidthInMeters1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetOverlayWidthInMeters_BeginInvoke_mFFC803F2D21006C2BCB34B5A9F77C5DC696CAA85_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &*___pfWidthInMeters1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetOverlayWidthInMeters::EndInvoke(System.SingleU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetOverlayWidthInMeters_EndInvoke_mA709B6CB4828422D44AB62A89C15C2B6168141AC (_GetOverlayWidthInMeters_tA8A02EE659E00E4CA046AC303678172BC73D6E36 * __this, float* ___pfWidthInMeters0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pfWidthInMeters0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C (_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C * __this, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetPrimaryDashboardDevice::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetPrimaryDashboardDevice__ctor_mF5A0849187156425F97357B8464284BE2641A2C0 (_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVROverlay__GetPrimaryDashboardDevice::Invoke()
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetPrimaryDashboardDevice_Invoke_m35D608F4B057634F58E0D7751244C5944CC317CF (_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C * __this, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetPrimaryDashboardDevice::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetPrimaryDashboardDevice_BeginInvoke_mB03DF47029A422B318816B0B68967B79008C13C7 (_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt32 Valve.VR.IVROverlay__GetPrimaryDashboardDevice::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetPrimaryDashboardDevice_EndInvoke_mC935BC4328D7462F50C763F51541A2845CBE2CF8 (_GetPrimaryDashboardDevice_t3051705DDFF3AD2197416E5C4565183F5742517C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
