#include "il2cpp-config.h"

#ifndef _MSC_VER
# include <alloca.h>
#else
# include <malloc.h>
#endif


#include <cstring>
#include <string.h>
#include <stdio.h>
#include <cmath>
#include <limits>
#include <assert.h>
#include <stdint.h>

#include "il2cpp-class-internals.h"
#include "codegen/il2cpp-codegen.h"
#include "il2cpp-object-internals.h"

template <typename R, typename T1, typename T2, typename T3, typename T4>
struct VirtFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
struct VirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct VirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct VirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct VirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct VirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2>
struct VirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1>
struct VirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct VirtFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct VirtFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct VirtFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct VirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct VirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct VirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_virtual_invoke_data(slot, obj);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct GenericVirtFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
struct GenericVirtActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct GenericVirtFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct GenericVirtFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct GenericVirtFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct GenericVirtFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericVirtActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1>
struct GenericVirtActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct GenericVirtFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct GenericVirtFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericVirtFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericVirtActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericVirtActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericVirtActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_virtual_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct InterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
struct InterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct InterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct InterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct InterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct InterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2>
struct InterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1>
struct InterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct InterfaceFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct InterfaceFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct InterfaceFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct InterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct InterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct InterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (Il2CppMethodSlot slot, RuntimeClass* declaringInterface, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		const VirtualInvokeData& invokeData = il2cpp_codegen_get_interface_invoke_data(slot, obj, declaringInterface);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceFuncInvoker4
{
	typedef R (*Func)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
struct GenericInterfaceActionInvoker0
{
	typedef void (*Action)(void*, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1>
struct GenericInterfaceFuncInvoker1
{
	typedef R (*Func)(void*, T1, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R>
struct GenericInterfaceFuncInvoker0
{
	typedef R (*Func)(void*, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, invokeData.method);
	}
};
template <typename R, typename T1, typename T2>
struct GenericInterfaceFuncInvoker2
{
	typedef R (*Func)(void*, T1, T2, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3>
struct GenericInterfaceFuncInvoker3
{
	typedef R (*Func)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};
template <typename T1, typename T2>
struct GenericInterfaceActionInvoker2
{
	typedef void (*Action)(void*, T1, T2, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceFuncInvoker5
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1>
struct GenericInterfaceActionInvoker1
{
	typedef void (*Action)(void*, T1, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7>
struct GenericInterfaceFuncInvoker7
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8>
struct GenericInterfaceFuncInvoker8
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, T7, T8, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6, T7 p7, T8 p8)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, p7, p8, invokeData.method);
	}
};
template <typename R, typename T1, typename T2, typename T3, typename T4, typename T5, typename T6>
struct GenericInterfaceFuncInvoker6
{
	typedef R (*Func)(void*, T1, T2, T3, T4, T5, T6, const RuntimeMethod*);

	static inline R Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5, T6 p6)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		return ((Func)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, p6, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4>
struct GenericInterfaceActionInvoker4
{
	typedef void (*Action)(void*, T1, T2, T3, T4, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3, typename T4, typename T5>
struct GenericInterfaceActionInvoker5
{
	typedef void (*Action)(void*, T1, T2, T3, T4, T5, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3, T4 p4, T5 p5)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, p4, p5, invokeData.method);
	}
};
template <typename T1, typename T2, typename T3>
struct GenericInterfaceActionInvoker3
{
	typedef void (*Action)(void*, T1, T2, T3, const RuntimeMethod*);

	static inline void Invoke (const RuntimeMethod* method, RuntimeObject* obj, T1 p1, T2 p2, T3 p3)
	{
		VirtualInvokeData invokeData;
		il2cpp_codegen_get_generic_interface_invoke_data(method, obj, &invokeData);
		((Action)invokeData.methodPtr)(obj, p1, p2, p3, invokeData.method);
	}
};

// System.AsyncCallback
struct AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4;
// System.Byte[]
struct ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821;
// System.Char[]
struct CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2;
// System.Delegate
struct Delegate_t;
// System.DelegateData
struct DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE;
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
// System.IAsyncResult
struct IAsyncResult_t8E194308510B375B42432981AE5E7488C458D598;
// System.Reflection.MethodInfo
struct MethodInfo_t;
// System.String
struct String_t;
// System.Text.StringBuilder
struct StringBuilder_t;
// System.UInt32[]
struct UInt32U5BU5D_t9AA834AF2940E75BBF8E3F08FF0D20D266DB71CB;
// System.Void
struct Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017;
// Valve.VR.EVRScreenshotType[]
struct EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319;
// Valve.VR.IVROverlay/_GetTransformForOverlayCoordinates
struct _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA;
// Valve.VR.IVROverlay/_HideKeyboard
struct _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9;
// Valve.VR.IVROverlay/_HideOverlay
struct _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC;
// Valve.VR.IVROverlay/_IsActiveDashboardOverlay
struct _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B;
// Valve.VR.IVROverlay/_IsDashboardVisible
struct _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C;
// Valve.VR.IVROverlay/_IsHoverTargetOverlay
struct _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692;
// Valve.VR.IVROverlay/_IsOverlayVisible
struct _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6;
// Valve.VR.IVROverlay/_MoveGamepadFocusToNeighbor
struct _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F;
// Valve.VR.IVROverlay/_PollNextOverlayEvent
struct _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399;
// Valve.VR.IVROverlay/_ReleaseNativeOverlayHandle
struct _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98;
// Valve.VR.IVROverlay/_SetDashboardOverlaySceneProcess
struct _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C;
// Valve.VR.IVROverlay/_SetGamepadFocusOverlay
struct _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377;
// Valve.VR.IVROverlay/_SetHighQualityOverlay
struct _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C;
// Valve.VR.IVROverlay/_SetKeyboardPositionForOverlay
struct _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF;
// Valve.VR.IVROverlay/_SetKeyboardTransformAbsolute
struct _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA;
// Valve.VR.IVROverlay/_SetOverlayAlpha
struct _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2;
// Valve.VR.IVROverlay/_SetOverlayAutoCurveDistanceRangeInMeters
struct _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963;
// Valve.VR.IVROverlay/_SetOverlayColor
struct _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063;
// Valve.VR.IVROverlay/_SetOverlayDualAnalogTransform
struct _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A;
// Valve.VR.IVROverlay/_SetOverlayFlag
struct _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E;
// Valve.VR.IVROverlay/_SetOverlayFromFile
struct _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F;
// Valve.VR.IVROverlay/_SetOverlayInputMethod
struct _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12;
// Valve.VR.IVROverlay/_SetOverlayIntersectionMask
struct _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04;
// Valve.VR.IVROverlay/_SetOverlayMouseScale
struct _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65;
// Valve.VR.IVROverlay/_SetOverlayName
struct _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C;
// Valve.VR.IVROverlay/_SetOverlayNeighbor
struct _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D;
// Valve.VR.IVROverlay/_SetOverlayRaw
struct _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9;
// Valve.VR.IVROverlay/_SetOverlayRenderModel
struct _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050;
// Valve.VR.IVROverlay/_SetOverlayRenderingPid
struct _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46;
// Valve.VR.IVROverlay/_SetOverlaySortOrder
struct _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43;
// Valve.VR.IVROverlay/_SetOverlayTexelAspect
struct _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E;
// Valve.VR.IVROverlay/_SetOverlayTexture
struct _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C;
// Valve.VR.IVROverlay/_SetOverlayTextureBounds
struct _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E;
// Valve.VR.IVROverlay/_SetOverlayTextureColorSpace
struct _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F;
// Valve.VR.IVROverlay/_SetOverlayTransformAbsolute
struct _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06;
// Valve.VR.IVROverlay/_SetOverlayTransformOverlayRelative
struct _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171;
// Valve.VR.IVROverlay/_SetOverlayTransformTrackedDeviceComponent
struct _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8;
// Valve.VR.IVROverlay/_SetOverlayTransformTrackedDeviceRelative
struct _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7;
// Valve.VR.IVROverlay/_SetOverlayWidthInMeters
struct _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184;
// Valve.VR.IVROverlay/_ShowDashboard
struct _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911;
// Valve.VR.IVROverlay/_ShowKeyboard
struct _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1;
// Valve.VR.IVROverlay/_ShowKeyboardForOverlay
struct _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6;
// Valve.VR.IVROverlay/_ShowMessageOverlay
struct _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F;
// Valve.VR.IVROverlay/_ShowOverlay
struct _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61;
// Valve.VR.IVRRenderModels/_FreeRenderModel
struct _FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA;
// Valve.VR.IVRRenderModels/_FreeTexture
struct _FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A;
// Valve.VR.IVRRenderModels/_FreeTextureD3D11
struct _FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415;
// Valve.VR.IVRRenderModels/_GetComponentButtonMask
struct _GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834;
// Valve.VR.IVRRenderModels/_GetComponentCount
struct _GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983;
// Valve.VR.IVRRenderModels/_GetComponentName
struct _GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1;
// Valve.VR.IVRRenderModels/_GetComponentRenderModelName
struct _GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15;
// Valve.VR.IVRRenderModels/_GetComponentState
struct _GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545;
// Valve.VR.IVRRenderModels/_GetRenderModelCount
struct _GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D;
// Valve.VR.IVRRenderModels/_GetRenderModelErrorNameFromEnum
struct _GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51;
// Valve.VR.IVRRenderModels/_GetRenderModelName
struct _GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5;
// Valve.VR.IVRRenderModels/_GetRenderModelOriginalPath
struct _GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2;
// Valve.VR.IVRRenderModels/_GetRenderModelThumbnailURL
struct _GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982;
// Valve.VR.IVRRenderModels/_LoadIntoTextureD3D11_Async
struct _LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A;
// Valve.VR.IVRRenderModels/_LoadRenderModel_Async
struct _LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C;
// Valve.VR.IVRRenderModels/_LoadTextureD3D11_Async
struct _LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB;
// Valve.VR.IVRRenderModels/_LoadTexture_Async
struct _LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA;
// Valve.VR.IVRRenderModels/_RenderModelHasComponent
struct _RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A;
// Valve.VR.IVRResources/_GetResourceFullPath
struct _GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB;
// Valve.VR.IVRResources/_LoadSharedResource
struct _LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E;
// Valve.VR.IVRScreenshots/_GetScreenshotPropertyFilename
struct _GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064;
// Valve.VR.IVRScreenshots/_GetScreenshotPropertyType
struct _GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC;
// Valve.VR.IVRScreenshots/_HookScreenshot
struct _HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8;
// Valve.VR.IVRScreenshots/_RequestScreenshot
struct _RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0;
// Valve.VR.IVRScreenshots/_SubmitScreenshot
struct _SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791;
// Valve.VR.IVRScreenshots/_TakeStereoScreenshot
struct _TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33;
// Valve.VR.IVRScreenshots/_UpdateScreenshotProgress
struct _UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11;
// Valve.VR.IVRSettings/_GetBool
struct _GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F;
// Valve.VR.IVRSettings/_GetFloat
struct _GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791;
// Valve.VR.IVRSettings/_GetInt32
struct _GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E;
// Valve.VR.IVRSettings/_GetSettingsErrorNameFromEnum
struct _GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA;
// Valve.VR.IVRSettings/_GetString
struct _GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6;
// Valve.VR.IVRSettings/_RemoveKeyInSection
struct _RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728;
// Valve.VR.IVRSettings/_RemoveSection
struct _RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222;
// Valve.VR.IVRSettings/_SetBool
struct _SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514;
// Valve.VR.IVRSettings/_SetFloat
struct _SetFloat_t98FDC04346EC28577694E439EABA871417670ABD;
// Valve.VR.IVRSettings/_SetInt32
struct _SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297;
// Valve.VR.IVRSettings/_SetString
struct _SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35;
// Valve.VR.IVRSettings/_Sync
struct _Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14;
// Valve.VR.IVRSystem/_AcknowledgeQuit_Exiting
struct _AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F;
// Valve.VR.IVRSystem/_AcknowledgeQuit_UserPrompt
struct _AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228;
// Valve.VR.IVRSystem/_ApplyTransform
struct _ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76;
// Valve.VR.IVRSystem/_ComputeDistortion
struct _ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D;
// Valve.VR.IVRSystem/_DriverDebugRequest
struct _DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B;
// Valve.VR.IVRSystem/_GetArrayTrackedDeviceProperty
struct _GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915;
// Valve.VR.IVRSystem/_GetBoolTrackedDeviceProperty
struct _GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02;
// Valve.VR.IVRSystem/_GetButtonIdNameFromEnum
struct _GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8;
// Valve.VR.IVRSystem/_GetControllerAxisTypeNameFromEnum
struct _GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641;
// Valve.VR.IVRSystem/_GetControllerRoleForTrackedDeviceIndex
struct _GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8;
// Valve.VR.IVRSystem/_GetControllerState
struct _GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407;
// Valve.VR.IVRSystem/_GetControllerStateWithPose
struct _GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32;
// Valve.VR.IVRSystem/_GetD3D9AdapterIndex
struct _GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5;
// Valve.VR.IVRSystem/_GetDXGIOutputInfo
struct _GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B;
// Valve.VR.IVRSystem/_GetDeviceToAbsoluteTrackingPose
struct _GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5;
// Valve.VR.IVRSystem/_GetEventTypeNameFromEnum
struct _GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837;
// Valve.VR.IVRSystem/_GetEyeToHeadTransform
struct _GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115;
// Valve.VR.IVRSystem/_GetFloatTrackedDeviceProperty
struct _GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965;
// Valve.VR.IVRSystem/_GetHiddenAreaMesh
struct _GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54;
// Valve.VR.IVRSystem/_GetInt32TrackedDeviceProperty
struct _GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0;
// Valve.VR.IVRSystem/_GetMatrix34TrackedDeviceProperty
struct _GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A;
// Valve.VR.IVRSystem/_GetOutputDevice
struct _GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA;
// Valve.VR.IVRSystem/_GetProjectionMatrix
struct _GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C;
// Valve.VR.IVRSystem/_GetProjectionRaw
struct _GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5;
// Valve.VR.IVRSystem/_GetPropErrorNameFromEnum
struct _GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898;
// Valve.VR.IVRSystem/_GetRawZeroPoseToStandingAbsoluteTrackingPose
struct _GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198;
// Valve.VR.IVRSystem/_GetRecommendedRenderTargetSize
struct _GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F;
// Valve.VR.IVRSystem/_GetSeatedZeroPoseToStandingAbsoluteTrackingPose
struct _GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347;
// Valve.VR.IVRSystem/_GetSortedTrackedDeviceIndicesOfClass
struct _GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187;
// Valve.VR.IVRSystem/_GetStringTrackedDeviceProperty
struct _GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F;
// Valve.VR.IVRSystem/_GetTimeSinceLastVsync
struct _GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4;
// Valve.VR.IVRSystem/_GetTrackedDeviceActivityLevel
struct _GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74;
// Valve.VR.IVRSystem/_GetTrackedDeviceClass
struct _GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87;
// Valve.VR.IVRSystem/_GetTrackedDeviceIndexForControllerRole
struct _GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062;
// Valve.VR.IVRSystem/_GetUint64TrackedDeviceProperty
struct _GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6;
// Valve.VR.IVRSystem/_IsDisplayOnDesktop
struct _IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332;
// Valve.VR.IVRSystem/_IsInputAvailable
struct _IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95;
// Valve.VR.IVRSystem/_IsSteamVRDrawingControllers
struct _IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464;
// Valve.VR.IVRSystem/_IsTrackedDeviceConnected
struct _IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9;
// Valve.VR.IVRSystem/_PerformFirmwareUpdate
struct _PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F;
// Valve.VR.IVRSystem/_PollNextEvent
struct _PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E;
// Valve.VR.IVRSystem/_PollNextEventWithPose
struct _PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83;
// Valve.VR.IVRSystem/_ResetSeatedZeroPose
struct _ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560;
// Valve.VR.IVRSystem/_SetDisplayVisibility
struct _SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70;
// Valve.VR.IVRSystem/_ShouldApplicationPause
struct _ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70;
// Valve.VR.IVRSystem/_ShouldApplicationReduceRenderingWork
struct _ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B;
// Valve.VR.IVRSystem/_TriggerHapticPulse
struct _TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046;
// Valve.VR.TrackedDevicePose_t[]
struct TrackedDevicePose_tU5BU5D_tE6417121ED1637E64439B84649A8E88816C45156;

extern RuntimeClass* Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var;
extern RuntimeClass* EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_il2cpp_TypeInfo_var;
extern RuntimeClass* EDualAnalogWhich_t26DB6059FD57DBF15F7F416304BF27A036E14F4C_il2cpp_TypeInfo_var;
extern RuntimeClass* EOverlayDirection_t0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_il2cpp_TypeInfo_var;
extern RuntimeClass* ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRRenderModelError_tA672F337FD77711AE2FEDB922DB393EAC3A78BB6_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRScreenshotError_t6112ECF0757A423E1EE66777030BBCC64F9A28DD_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRScreenshotPropertyFilenames_t8BC7049F6171FCE1DD57E4BB3EC0A4FAAC254CE0_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRScreenshotType_tC97F6F8AE73B25181938CCF81FD07D5F13A98D4D_il2cpp_TypeInfo_var;
extern RuntimeClass* EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var;
extern RuntimeClass* HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5_il2cpp_TypeInfo_var;
extern RuntimeClass* HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var;
extern RuntimeClass* HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7_il2cpp_TypeInfo_var;
extern RuntimeClass* HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_il2cpp_TypeInfo_var;
extern RuntimeClass* Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var;
extern RuntimeClass* IntPtr_t_il2cpp_TypeInfo_var;
extern RuntimeClass* RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397_il2cpp_TypeInfo_var;
extern RuntimeClass* RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74_il2cpp_TypeInfo_var;
extern RuntimeClass* Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var;
extern RuntimeClass* Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D_il2cpp_TypeInfo_var;
extern RuntimeClass* UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var;
extern RuntimeClass* UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var;
extern RuntimeClass* VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35_il2cpp_TypeInfo_var;
extern RuntimeClass* VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F_il2cpp_TypeInfo_var;
extern RuntimeClass* VROverlayFlags_t00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_il2cpp_TypeInfo_var;
extern RuntimeClass* VROverlayInputMethod_t92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_il2cpp_TypeInfo_var;
extern RuntimeClass* VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40_il2cpp_TypeInfo_var;
extern RuntimeClass* VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813_il2cpp_TypeInfo_var;
extern RuntimeClass* _AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F_il2cpp_TypeInfo_var;
extern RuntimeClass* _AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228_il2cpp_TypeInfo_var;
extern RuntimeClass* _ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76_il2cpp_TypeInfo_var;
extern RuntimeClass* _ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D_il2cpp_TypeInfo_var;
extern RuntimeClass* _DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B_il2cpp_TypeInfo_var;
extern RuntimeClass* _FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA_il2cpp_TypeInfo_var;
extern RuntimeClass* _FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415_il2cpp_TypeInfo_var;
extern RuntimeClass* _FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062_il2cpp_TypeInfo_var;
extern RuntimeClass* _GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6_il2cpp_TypeInfo_var;
extern RuntimeClass* _HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464_il2cpp_TypeInfo_var;
extern RuntimeClass* _IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9_il2cpp_TypeInfo_var;
extern RuntimeClass* _LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A_il2cpp_TypeInfo_var;
extern RuntimeClass* _LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C_il2cpp_TypeInfo_var;
extern RuntimeClass* _LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E_il2cpp_TypeInfo_var;
extern RuntimeClass* _LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB_il2cpp_TypeInfo_var;
extern RuntimeClass* _LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA_il2cpp_TypeInfo_var;
extern RuntimeClass* _PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F_il2cpp_TypeInfo_var;
extern RuntimeClass* _PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83_il2cpp_TypeInfo_var;
extern RuntimeClass* _PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E_il2cpp_TypeInfo_var;
extern RuntimeClass* _RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728_il2cpp_TypeInfo_var;
extern RuntimeClass* _RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222_il2cpp_TypeInfo_var;
extern RuntimeClass* _RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A_il2cpp_TypeInfo_var;
extern RuntimeClass* _RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0_il2cpp_TypeInfo_var;
extern RuntimeClass* _ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetFloat_t98FDC04346EC28577694E439EABA871417670ABD_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297_il2cpp_TypeInfo_var;
extern RuntimeClass* _SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70_il2cpp_TypeInfo_var;
extern RuntimeClass* _ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B_il2cpp_TypeInfo_var;
extern RuntimeClass* _SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791_il2cpp_TypeInfo_var;
extern RuntimeClass* _Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14_il2cpp_TypeInfo_var;
extern RuntimeClass* _TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33_il2cpp_TypeInfo_var;
extern RuntimeClass* _TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046_il2cpp_TypeInfo_var;
extern RuntimeClass* _UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11_il2cpp_TypeInfo_var;
extern const uint32_t IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_com_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_pinvoke_FromNativeMethodDefinition_MetadataUsageId;
extern const uint32_t _FreeRenderModel_BeginInvoke_mE1366EE15AFF3D4BA8F1F8E9852616A9289DE1B3_MetadataUsageId;
extern const uint32_t _FreeTextureD3D11_BeginInvoke_mF05BFEC95CBF2CBBF780A782C5C6AE6493C885AD_MetadataUsageId;
extern const uint32_t _FreeTexture_BeginInvoke_m667F76FE805B0EE55E79C544799AEC31A8C2D83D_MetadataUsageId;
extern const uint32_t _GetBool_BeginInvoke_mDBDB057ECF57E5FA09E9494A25058FE6586CBA52_MetadataUsageId;
extern const uint32_t _GetComponentName_BeginInvoke_m9FABD3DCCE36D39DF706BAB6BAE1D89F6DB33C84_MetadataUsageId;
extern const uint32_t _GetComponentRenderModelName_BeginInvoke_m7A23CD92AE990B12EDCCAEC495CA765FA3892D71_MetadataUsageId;
extern const uint32_t _GetComponentState_BeginInvoke_m3476E14FED0D11DC5BC3B153EBF923A42796BA0A_MetadataUsageId;
extern const uint32_t _GetFloat_BeginInvoke_m1209950BC2C121707AA62F33649C03CE74ACD53F_MetadataUsageId;
extern const uint32_t _GetInt32_BeginInvoke_m543D5182C194AB049D50BADCEC07EA5296DD5325_MetadataUsageId;
extern const uint32_t _GetRenderModelErrorNameFromEnum_BeginInvoke_m368673BAFDE5E1BEA07F93AE92442842BA0F72CB_MetadataUsageId;
extern const uint32_t _GetRenderModelName_BeginInvoke_mD0A9107AA6AA1B17D86F91D5EB30779391A73AD4_MetadataUsageId;
extern const uint32_t _GetRenderModelOriginalPath_BeginInvoke_mC69D783016EB4AFCB986062BAD4AC9BABDA849BC_MetadataUsageId;
extern const uint32_t _GetRenderModelThumbnailURL_BeginInvoke_m9D6A4F6C65F98F007873C2E2922CF1F69AAE30EC_MetadataUsageId;
extern const uint32_t _GetResourceFullPath_BeginInvoke_m39808DBCA422CE0D0D0687025130C1CB00CF50AD_MetadataUsageId;
extern const uint32_t _GetScreenshotPropertyFilename_BeginInvoke_m7A3CCC05E7C6293BA16F455FB27ED25D0485B646_MetadataUsageId;
extern const uint32_t _GetScreenshotPropertyType_BeginInvoke_m86783D80B5A1CB86C42F8FE0A352981EF730A0F6_MetadataUsageId;
extern const uint32_t _GetSettingsErrorNameFromEnum_BeginInvoke_m402493593C208400647001D71C2BD8794C74EE95_MetadataUsageId;
extern const uint32_t _GetString_BeginInvoke_m58B9AC2F5592776EF891216854A16E9968ADED96_MetadataUsageId;
extern const uint32_t _GetTransformForOverlayCoordinates_BeginInvoke_m5531B9239586D84762A087408E1B1B665BF8933A_MetadataUsageId;
extern const uint32_t _HideOverlay_BeginInvoke_mA0D74B2955B20A2BD226D8EC79B375703D2DE9AB_MetadataUsageId;
extern const uint32_t _HookScreenshot_BeginInvoke_m241EF3236D5F4A5DE3D7A5D11328B08EEBD019A0_MetadataUsageId;
extern const uint32_t _IsActiveDashboardOverlay_BeginInvoke_m7BF6933576020B0A79CC4309F02D48AE0AFCA269_MetadataUsageId;
extern const uint32_t _IsHoverTargetOverlay_BeginInvoke_m6FE118B4DA1E5D9834B63FD88A92D3718E9B77DC_MetadataUsageId;
extern const uint32_t _IsOverlayVisible_BeginInvoke_mCC4198D9B66FB9DA3D5EA177314DA2C1B4CA291A_MetadataUsageId;
extern const uint32_t _LoadIntoTextureD3D11_Async_BeginInvoke_mBE358C552258F7F4A66F0FEE0111495440AFE07C_MetadataUsageId;
extern const uint32_t _LoadRenderModel_Async_BeginInvoke_m167EA874F6E7E569856D85482FC413140CDA8C62_MetadataUsageId;
extern const uint32_t _LoadSharedResource_BeginInvoke_m2290ACA71D6B59B7C96469F08E108BD317B95EB7_MetadataUsageId;
extern const uint32_t _LoadTextureD3D11_Async_BeginInvoke_mA67D4A2B217BD98125CC6FD5752AE23E57F49FBE_MetadataUsageId;
extern const uint32_t _LoadTexture_Async_BeginInvoke_mE5C2524A3337E2FCA79A8012F881413D84276290_MetadataUsageId;
extern const uint32_t _MoveGamepadFocusToNeighbor_BeginInvoke_m455EB6038247AF620AC7D5F65E2370B1D998ABCB_MetadataUsageId;
extern const uint32_t _PollNextOverlayEvent_BeginInvoke_mB5A69E356B4C3277C7004913BE4899BC069F4A30_MetadataUsageId;
extern const uint32_t _ReleaseNativeOverlayHandle_BeginInvoke_m3971D4BCD313A41C2EEA1957DF64CF1A46EE0509_MetadataUsageId;
extern const uint32_t _RemoveKeyInSection_BeginInvoke_m78C9111C935E80C06532B451F20301A77720C2BD_MetadataUsageId;
extern const uint32_t _RemoveSection_BeginInvoke_m2D8B1C262FF5EBE4995DAC7D67E381293003E61C_MetadataUsageId;
extern const uint32_t _RequestScreenshot_BeginInvoke_mE4024A59F14092FD0F3049BE9422DDB3A76B8874_MetadataUsageId;
extern const uint32_t _SetBool_BeginInvoke_m8651FD3BAE343B15214EABBF606C83889787515C_MetadataUsageId;
extern const uint32_t _SetDashboardOverlaySceneProcess_BeginInvoke_m97F190EC1FC18F358B9501F428442F6E57142BEC_MetadataUsageId;
extern const uint32_t _SetFloat_BeginInvoke_mD1352B0B4A39DCAD728B7F397E693235AE0E4A34_MetadataUsageId;
extern const uint32_t _SetGamepadFocusOverlay_BeginInvoke_mF0D4B84C6E908147C606E1C5A70C9C5E07E5E0FA_MetadataUsageId;
extern const uint32_t _SetHighQualityOverlay_BeginInvoke_m94A017D4AB129CCAF56C7DF05AB3EE8F1C8CC3D1_MetadataUsageId;
extern const uint32_t _SetInt32_BeginInvoke_m8682EFFFABAEE72D1F4CBDB1675D715242A597ED_MetadataUsageId;
extern const uint32_t _SetKeyboardPositionForOverlay_BeginInvoke_m34AB241FE5969F86B641FE313D9E9A9725D56406_MetadataUsageId;
extern const uint32_t _SetKeyboardTransformAbsolute_BeginInvoke_mA6626C12320276EEFA102120F5EA7FC9F2D9E9B1_MetadataUsageId;
extern const uint32_t _SetOverlayAlpha_BeginInvoke_m6E8CF232055AF047C20E9A3E8924DD24692A8FDF_MetadataUsageId;
extern const uint32_t _SetOverlayAutoCurveDistanceRangeInMeters_BeginInvoke_m1429BDE336895BDC1A0FFF148956D7D312774AF7_MetadataUsageId;
extern const uint32_t _SetOverlayColor_BeginInvoke_m09C2FC3945D315C3D34762C3E9090D648DB150A4_MetadataUsageId;
extern const uint32_t _SetOverlayDualAnalogTransform_BeginInvoke_m5C48CB3D7D0D9BAA35CBA9BC8B9EBD57DF4F4DA5_MetadataUsageId;
extern const uint32_t _SetOverlayFlag_BeginInvoke_m1FFFA1476168BDF0B5C847C72438E5E7FC9A5998_MetadataUsageId;
extern const uint32_t _SetOverlayFromFile_BeginInvoke_m4906F19F8B7529F920A58AA0358B9C7360FC938B_MetadataUsageId;
extern const uint32_t _SetOverlayInputMethod_BeginInvoke_m877F8DBE1E6D55BF83259FC8F6A78FC60223E3D0_MetadataUsageId;
extern const uint32_t _SetOverlayIntersectionMask_BeginInvoke_m21BF4898B1BCB35F43FCD45E40CEF829BE88C389_MetadataUsageId;
extern const uint32_t _SetOverlayMouseScale_BeginInvoke_m2A0805B7230A8B12F828B99CEBCD9D28AFA56D03_MetadataUsageId;
extern const uint32_t _SetOverlayName_BeginInvoke_mF76C96EFE025494E142DB0A3F628B759627E0F6D_MetadataUsageId;
extern const uint32_t _SetOverlayNeighbor_BeginInvoke_m304F431B3FDDD2566FD572E326C459D4816FE190_MetadataUsageId;
extern const uint32_t _SetOverlayRaw_BeginInvoke_m4A8EA83F712ADBA1E52F34F8E83882805BF6C60F_MetadataUsageId;
extern const uint32_t _SetOverlayRenderModel_BeginInvoke_m3CF8C09505F55BE483FC6127B891DBA1BB25F99A_MetadataUsageId;
extern const uint32_t _SetOverlayRenderingPid_BeginInvoke_m09554E1B6103C5E61551BAC671E9CB891A0A842A_MetadataUsageId;
extern const uint32_t _SetOverlaySortOrder_BeginInvoke_m112A3A542DA5828CAA2E38CFCB6BAB659A59027E_MetadataUsageId;
extern const uint32_t _SetOverlayTexelAspect_BeginInvoke_m58CCF45015AAE49E29B23EA6989353B966705AB4_MetadataUsageId;
extern const uint32_t _SetOverlayTextureBounds_BeginInvoke_m2237D560AFEB98FE3C8CDCE8B18DB3D6BD1C5B45_MetadataUsageId;
extern const uint32_t _SetOverlayTextureColorSpace_BeginInvoke_mE1E2B336D5F6834AF5FBF7610F2807C2E88DE899_MetadataUsageId;
extern const uint32_t _SetOverlayTexture_BeginInvoke_mB999DBD7FB432453B3EFE7AE80E8668982D60E30_MetadataUsageId;
extern const uint32_t _SetOverlayTransformAbsolute_BeginInvoke_m81015593C78D89E4113D2A8DEA07D15690D6E831_MetadataUsageId;
extern const uint32_t _SetOverlayTransformOverlayRelative_BeginInvoke_m686E3B505A9DC3A1C98F7664E7C53FE0013E783C_MetadataUsageId;
extern const uint32_t _SetOverlayTransformTrackedDeviceComponent_BeginInvoke_m028EDE0DED58B281AF0B5674A3D9F19B36EAB732_MetadataUsageId;
extern const uint32_t _SetOverlayTransformTrackedDeviceRelative_BeginInvoke_m29D237B13EA981816ADB993321A5F8DCFFB4D870_MetadataUsageId;
extern const uint32_t _SetOverlayWidthInMeters_BeginInvoke_m153BC6AB94C83F6B941B4A06C50CF92F99160ACE_MetadataUsageId;
extern const uint32_t _SetString_BeginInvoke_mFB40AE3A58868A78292C28FEA2B3CF334E16507C_MetadataUsageId;
extern const uint32_t _ShowKeyboardForOverlay_BeginInvoke_m4F1F5FF751C38B75BCA3B3FB13CC04B7AE2D2950_MetadataUsageId;
extern const uint32_t _ShowKeyboard_BeginInvoke_m36A740B6D7D7DCAB925C7B884365F942A4B5904F_MetadataUsageId;
extern const uint32_t _ShowOverlay_BeginInvoke_m552505F26E04A2D910330088B23B4B05B45931CC_MetadataUsageId;
extern const uint32_t _SubmitScreenshot_BeginInvoke_m85DEA54ECFDD165E36CC5BA45E5CA376E8167E3A_MetadataUsageId;
extern const uint32_t _Sync_BeginInvoke_m33A6EDEFC21D59223871E6A48EAA5A77781B19CB_MetadataUsageId;
extern const uint32_t _TakeStereoScreenshot_BeginInvoke_mDB59B31F5985B7D663EA0818A3048A4D363B0D03_MetadataUsageId;
extern const uint32_t _UpdateScreenshotProgress_BeginInvoke_m64A0EFEC19DDE71512FD8D61FF38B1C663FF67D0_MetadataUsageId;
struct Delegate_t_marshaled_com;
struct Delegate_t_marshaled_pinvoke;

struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86;
struct EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319;


#ifndef RUNTIMEOBJECT_H
#define RUNTIMEOBJECT_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Object

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // RUNTIMEOBJECT_H
struct Il2CppArrayBounds;
#ifndef RUNTIMEARRAY_H
#define RUNTIMEARRAY_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Array

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // RUNTIMEARRAY_H
#ifndef STRING_T_H
#define STRING_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.String
struct  String_t  : public RuntimeObject
{
public:
	// System.Int32 System.String::m_stringLength
	int32_t ___m_stringLength_0;
	// System.Char System.String::m_firstChar
	Il2CppChar ___m_firstChar_1;

public:
	inline static int32_t get_offset_of_m_stringLength_0() { return static_cast<int32_t>(offsetof(String_t, ___m_stringLength_0)); }
	inline int32_t get_m_stringLength_0() const { return ___m_stringLength_0; }
	inline int32_t* get_address_of_m_stringLength_0() { return &___m_stringLength_0; }
	inline void set_m_stringLength_0(int32_t value)
	{
		___m_stringLength_0 = value;
	}

	inline static int32_t get_offset_of_m_firstChar_1() { return static_cast<int32_t>(offsetof(String_t, ___m_firstChar_1)); }
	inline Il2CppChar get_m_firstChar_1() const { return ___m_firstChar_1; }
	inline Il2CppChar* get_address_of_m_firstChar_1() { return &___m_firstChar_1; }
	inline void set_m_firstChar_1(Il2CppChar value)
	{
		___m_firstChar_1 = value;
	}
};

struct String_t_StaticFields
{
public:
	// System.String System.String::Empty
	String_t* ___Empty_5;

public:
	inline static int32_t get_offset_of_Empty_5() { return static_cast<int32_t>(offsetof(String_t_StaticFields, ___Empty_5)); }
	inline String_t* get_Empty_5() const { return ___Empty_5; }
	inline String_t** get_address_of_Empty_5() { return &___Empty_5; }
	inline void set_Empty_5(String_t* value)
	{
		___Empty_5 = value;
		Il2CppCodeGenWriteBarrier((&___Empty_5), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // STRING_T_H
#ifndef STRINGBUILDER_T_H
#define STRINGBUILDER_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Text.StringBuilder
struct  StringBuilder_t  : public RuntimeObject
{
public:
	// System.Char[] System.Text.StringBuilder::m_ChunkChars
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___m_ChunkChars_0;
	// System.Text.StringBuilder System.Text.StringBuilder::m_ChunkPrevious
	StringBuilder_t * ___m_ChunkPrevious_1;
	// System.Int32 System.Text.StringBuilder::m_ChunkLength
	int32_t ___m_ChunkLength_2;
	// System.Int32 System.Text.StringBuilder::m_ChunkOffset
	int32_t ___m_ChunkOffset_3;
	// System.Int32 System.Text.StringBuilder::m_MaxCapacity
	int32_t ___m_MaxCapacity_4;

public:
	inline static int32_t get_offset_of_m_ChunkChars_0() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkChars_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_m_ChunkChars_0() const { return ___m_ChunkChars_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_m_ChunkChars_0() { return &___m_ChunkChars_0; }
	inline void set_m_ChunkChars_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___m_ChunkChars_0 = value;
		Il2CppCodeGenWriteBarrier((&___m_ChunkChars_0), value);
	}

	inline static int32_t get_offset_of_m_ChunkPrevious_1() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkPrevious_1)); }
	inline StringBuilder_t * get_m_ChunkPrevious_1() const { return ___m_ChunkPrevious_1; }
	inline StringBuilder_t ** get_address_of_m_ChunkPrevious_1() { return &___m_ChunkPrevious_1; }
	inline void set_m_ChunkPrevious_1(StringBuilder_t * value)
	{
		___m_ChunkPrevious_1 = value;
		Il2CppCodeGenWriteBarrier((&___m_ChunkPrevious_1), value);
	}

	inline static int32_t get_offset_of_m_ChunkLength_2() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkLength_2)); }
	inline int32_t get_m_ChunkLength_2() const { return ___m_ChunkLength_2; }
	inline int32_t* get_address_of_m_ChunkLength_2() { return &___m_ChunkLength_2; }
	inline void set_m_ChunkLength_2(int32_t value)
	{
		___m_ChunkLength_2 = value;
	}

	inline static int32_t get_offset_of_m_ChunkOffset_3() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_ChunkOffset_3)); }
	inline int32_t get_m_ChunkOffset_3() const { return ___m_ChunkOffset_3; }
	inline int32_t* get_address_of_m_ChunkOffset_3() { return &___m_ChunkOffset_3; }
	inline void set_m_ChunkOffset_3(int32_t value)
	{
		___m_ChunkOffset_3 = value;
	}

	inline static int32_t get_offset_of_m_MaxCapacity_4() { return static_cast<int32_t>(offsetof(StringBuilder_t, ___m_MaxCapacity_4)); }
	inline int32_t get_m_MaxCapacity_4() const { return ___m_MaxCapacity_4; }
	inline int32_t* get_address_of_m_MaxCapacity_4() { return &___m_MaxCapacity_4; }
	inline void set_m_MaxCapacity_4(int32_t value)
	{
		___m_MaxCapacity_4 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // STRINGBUILDER_T_H
#ifndef VALUETYPE_T4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_H
#define VALUETYPE_T4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.ValueType
struct  ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF  : public RuntimeObject
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.ValueType
struct ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_marshaled_com
{
};
#endif // VALUETYPE_T4D0C27076F7C36E76190FB3328E232BCB1CD1FFF_H
#ifndef BOOLEAN_TB53F6830F670160873277339AA58F15CAED4399C_H
#define BOOLEAN_TB53F6830F670160873277339AA58F15CAED4399C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Boolean
struct  Boolean_tB53F6830F670160873277339AA58F15CAED4399C 
{
public:
	// System.Boolean System.Boolean::m_value
	bool ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C, ___m_value_0)); }
	inline bool get_m_value_0() const { return ___m_value_0; }
	inline bool* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(bool value)
	{
		___m_value_0 = value;
	}
};

struct Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields
{
public:
	// System.String System.Boolean::TrueString
	String_t* ___TrueString_5;
	// System.String System.Boolean::FalseString
	String_t* ___FalseString_6;

public:
	inline static int32_t get_offset_of_TrueString_5() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___TrueString_5)); }
	inline String_t* get_TrueString_5() const { return ___TrueString_5; }
	inline String_t** get_address_of_TrueString_5() { return &___TrueString_5; }
	inline void set_TrueString_5(String_t* value)
	{
		___TrueString_5 = value;
		Il2CppCodeGenWriteBarrier((&___TrueString_5), value);
	}

	inline static int32_t get_offset_of_FalseString_6() { return static_cast<int32_t>(offsetof(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_StaticFields, ___FalseString_6)); }
	inline String_t* get_FalseString_6() const { return ___FalseString_6; }
	inline String_t** get_address_of_FalseString_6() { return &___FalseString_6; }
	inline void set_FalseString_6(String_t* value)
	{
		___FalseString_6 = value;
		Il2CppCodeGenWriteBarrier((&___FalseString_6), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // BOOLEAN_TB53F6830F670160873277339AA58F15CAED4399C_H
#ifndef CHAR_TBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_H
#define CHAR_TBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Char
struct  Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9 
{
public:
	// System.Char System.Char::m_value
	Il2CppChar ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9, ___m_value_0)); }
	inline Il2CppChar get_m_value_0() const { return ___m_value_0; }
	inline Il2CppChar* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(Il2CppChar value)
	{
		___m_value_0 = value;
	}
};

struct Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_StaticFields
{
public:
	// System.Byte[] System.Char::categoryForLatin1
	ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* ___categoryForLatin1_3;

public:
	inline static int32_t get_offset_of_categoryForLatin1_3() { return static_cast<int32_t>(offsetof(Char_tBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_StaticFields, ___categoryForLatin1_3)); }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* get_categoryForLatin1_3() const { return ___categoryForLatin1_3; }
	inline ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821** get_address_of_categoryForLatin1_3() { return &___categoryForLatin1_3; }
	inline void set_categoryForLatin1_3(ByteU5BU5D_tD06FDBE8142446525DF1C40351D523A228373821* value)
	{
		___categoryForLatin1_3 = value;
		Il2CppCodeGenWriteBarrier((&___categoryForLatin1_3), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // CHAR_TBF22D9FC341BE970735250BB6FF1A4A92BBA58B9_H
#ifndef ENUM_T2AF27C02B8653AE29442467390005ABC74D8F521_H
#define ENUM_T2AF27C02B8653AE29442467390005ABC74D8F521_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Enum
struct  Enum_t2AF27C02B8653AE29442467390005ABC74D8F521  : public ValueType_t4D0C27076F7C36E76190FB3328E232BCB1CD1FFF
{
public:

public:
};

struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields
{
public:
	// System.Char[] System.Enum::enumSeperatorCharArray
	CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* ___enumSeperatorCharArray_0;

public:
	inline static int32_t get_offset_of_enumSeperatorCharArray_0() { return static_cast<int32_t>(offsetof(Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_StaticFields, ___enumSeperatorCharArray_0)); }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* get_enumSeperatorCharArray_0() const { return ___enumSeperatorCharArray_0; }
	inline CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2** get_address_of_enumSeperatorCharArray_0() { return &___enumSeperatorCharArray_0; }
	inline void set_enumSeperatorCharArray_0(CharU5BU5D_t4CC6ABF0AD71BEC97E3C2F1E9C5677E46D3A75C2* value)
	{
		___enumSeperatorCharArray_0 = value;
		Il2CppCodeGenWriteBarrier((&___enumSeperatorCharArray_0), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_pinvoke
{
};
// Native definition for COM marshalling of System.Enum
struct Enum_t2AF27C02B8653AE29442467390005ABC74D8F521_marshaled_com
{
};
#endif // ENUM_T2AF27C02B8653AE29442467390005ABC74D8F521_H
#ifndef INT32_T585191389E07734F19F3156FF88FB3EF4800D102_H
#define INT32_T585191389E07734F19F3156FF88FB3EF4800D102_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Int32
struct  Int32_t585191389E07734F19F3156FF88FB3EF4800D102 
{
public:
	// System.Int32 System.Int32::m_value
	int32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Int32_t585191389E07734F19F3156FF88FB3EF4800D102, ___m_value_0)); }
	inline int32_t get_m_value_0() const { return ___m_value_0; }
	inline int32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(int32_t value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // INT32_T585191389E07734F19F3156FF88FB3EF4800D102_H
#ifndef INTPTR_T_H
#define INTPTR_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.IntPtr
struct  IntPtr_t 
{
public:
	// System.Void* System.IntPtr::m_value
	void* ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(IntPtr_t, ___m_value_0)); }
	inline void* get_m_value_0() const { return ___m_value_0; }
	inline void** get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(void* value)
	{
		___m_value_0 = value;
	}
};

struct IntPtr_t_StaticFields
{
public:
	// System.IntPtr System.IntPtr::Zero
	intptr_t ___Zero_1;

public:
	inline static int32_t get_offset_of_Zero_1() { return static_cast<int32_t>(offsetof(IntPtr_t_StaticFields, ___Zero_1)); }
	inline intptr_t get_Zero_1() const { return ___Zero_1; }
	inline intptr_t* get_address_of_Zero_1() { return &___Zero_1; }
	inline void set_Zero_1(intptr_t value)
	{
		___Zero_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // INTPTR_T_H
#ifndef SINGLE_TDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_H
#define SINGLE_TDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Single
struct  Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1 
{
public:
	// System.Single System.Single::m_value
	float ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1, ___m_value_0)); }
	inline float get_m_value_0() const { return ___m_value_0; }
	inline float* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(float value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // SINGLE_TDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_H
#ifndef UINT32_T4980FA09003AFAAB5A6E361BA2748EA9A005709B_H
#define UINT32_T4980FA09003AFAAB5A6E361BA2748EA9A005709B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.UInt32
struct  UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B 
{
public:
	// System.UInt32 System.UInt32::m_value
	uint32_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B, ___m_value_0)); }
	inline uint32_t get_m_value_0() const { return ___m_value_0; }
	inline uint32_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint32_t value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // UINT32_T4980FA09003AFAAB5A6E361BA2748EA9A005709B_H
#ifndef UINT64_TA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_H
#define UINT64_TA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.UInt64
struct  UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E 
{
public:
	// System.UInt64 System.UInt64::m_value
	uint64_t ___m_value_0;

public:
	inline static int32_t get_offset_of_m_value_0() { return static_cast<int32_t>(offsetof(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E, ___m_value_0)); }
	inline uint64_t get_m_value_0() const { return ___m_value_0; }
	inline uint64_t* get_address_of_m_value_0() { return &___m_value_0; }
	inline void set_m_value_0(uint64_t value)
	{
		___m_value_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // UINT64_TA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_H
#ifndef VOID_T22962CB4C05B1D89B55A6E1139F0E87A90987017_H
#define VOID_T22962CB4C05B1D89B55A6E1139F0E87A90987017_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Void
struct  Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017 
{
public:
	union
	{
		struct
		{
		};
		uint8_t Void_t22962CB4C05B1D89B55A6E1139F0E87A90987017__padding[1];
	};

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VOID_T22962CB4C05B1D89B55A6E1139F0E87A90987017_H
#ifndef DISTORTIONCOORDINATES_T_T6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9_H
#define DISTORTIONCOORDINATES_T_T6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.DistortionCoordinates_t
struct  DistortionCoordinates_t_t6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9 
{
public:
	// System.Single Valve.VR.DistortionCoordinates_t::rfRed0
	float ___rfRed0_0;
	// System.Single Valve.VR.DistortionCoordinates_t::rfRed1
	float ___rfRed1_1;
	// System.Single Valve.VR.DistortionCoordinates_t::rfGreen0
	float ___rfGreen0_2;
	// System.Single Valve.VR.DistortionCoordinates_t::rfGreen1
	float ___rfGreen1_3;
	// System.Single Valve.VR.DistortionCoordinates_t::rfBlue0
	float ___rfBlue0_4;
	// System.Single Valve.VR.DistortionCoordinates_t::rfBlue1
	float ___rfBlue1_5;

public:
	inline static int32_t get_offset_of_rfRed0_0() { return static_cast<int32_t>(offsetof(DistortionCoordinates_t_t6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9, ___rfRed0_0)); }
	inline float get_rfRed0_0() const { return ___rfRed0_0; }
	inline float* get_address_of_rfRed0_0() { return &___rfRed0_0; }
	inline void set_rfRed0_0(float value)
	{
		___rfRed0_0 = value;
	}

	inline static int32_t get_offset_of_rfRed1_1() { return static_cast<int32_t>(offsetof(DistortionCoordinates_t_t6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9, ___rfRed1_1)); }
	inline float get_rfRed1_1() const { return ___rfRed1_1; }
	inline float* get_address_of_rfRed1_1() { return &___rfRed1_1; }
	inline void set_rfRed1_1(float value)
	{
		___rfRed1_1 = value;
	}

	inline static int32_t get_offset_of_rfGreen0_2() { return static_cast<int32_t>(offsetof(DistortionCoordinates_t_t6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9, ___rfGreen0_2)); }
	inline float get_rfGreen0_2() const { return ___rfGreen0_2; }
	inline float* get_address_of_rfGreen0_2() { return &___rfGreen0_2; }
	inline void set_rfGreen0_2(float value)
	{
		___rfGreen0_2 = value;
	}

	inline static int32_t get_offset_of_rfGreen1_3() { return static_cast<int32_t>(offsetof(DistortionCoordinates_t_t6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9, ___rfGreen1_3)); }
	inline float get_rfGreen1_3() const { return ___rfGreen1_3; }
	inline float* get_address_of_rfGreen1_3() { return &___rfGreen1_3; }
	inline void set_rfGreen1_3(float value)
	{
		___rfGreen1_3 = value;
	}

	inline static int32_t get_offset_of_rfBlue0_4() { return static_cast<int32_t>(offsetof(DistortionCoordinates_t_t6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9, ___rfBlue0_4)); }
	inline float get_rfBlue0_4() const { return ___rfBlue0_4; }
	inline float* get_address_of_rfBlue0_4() { return &___rfBlue0_4; }
	inline void set_rfBlue0_4(float value)
	{
		___rfBlue0_4 = value;
	}

	inline static int32_t get_offset_of_rfBlue1_5() { return static_cast<int32_t>(offsetof(DistortionCoordinates_t_t6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9, ___rfBlue1_5)); }
	inline float get_rfBlue1_5() const { return ___rfBlue1_5; }
	inline float* get_address_of_rfBlue1_5() { return &___rfBlue1_5; }
	inline void set_rfBlue1_5(float value)
	{
		___rfBlue1_5 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // DISTORTIONCOORDINATES_T_T6FD4C507DE4BA08F5C2AFCF7923D722C06379BE9_H
#ifndef HMDCOLOR_T_T932A4B68843708C831D344AAA211F11C973A17B5_H
#define HMDCOLOR_T_T932A4B68843708C831D344AAA211F11C973A17B5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdColor_t
struct  HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 
{
public:
	// System.Single Valve.VR.HmdColor_t::r
	float ___r_0;
	// System.Single Valve.VR.HmdColor_t::g
	float ___g_1;
	// System.Single Valve.VR.HmdColor_t::b
	float ___b_2;
	// System.Single Valve.VR.HmdColor_t::a
	float ___a_3;

public:
	inline static int32_t get_offset_of_r_0() { return static_cast<int32_t>(offsetof(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5, ___r_0)); }
	inline float get_r_0() const { return ___r_0; }
	inline float* get_address_of_r_0() { return &___r_0; }
	inline void set_r_0(float value)
	{
		___r_0 = value;
	}

	inline static int32_t get_offset_of_g_1() { return static_cast<int32_t>(offsetof(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5, ___g_1)); }
	inline float get_g_1() const { return ___g_1; }
	inline float* get_address_of_g_1() { return &___g_1; }
	inline void set_g_1(float value)
	{
		___g_1 = value;
	}

	inline static int32_t get_offset_of_b_2() { return static_cast<int32_t>(offsetof(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5, ___b_2)); }
	inline float get_b_2() const { return ___b_2; }
	inline float* get_address_of_b_2() { return &___b_2; }
	inline void set_b_2(float value)
	{
		___b_2 = value;
	}

	inline static int32_t get_offset_of_a_3() { return static_cast<int32_t>(offsetof(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5, ___a_3)); }
	inline float get_a_3() const { return ___a_3; }
	inline float* get_address_of_a_3() { return &___a_3; }
	inline void set_a_3(float value)
	{
		___a_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDCOLOR_T_T932A4B68843708C831D344AAA211F11C973A17B5_H
#ifndef HMDMATRIX34_T_TA0FE165952174421B5D3FA7C1A35A7E67C2A1504_H
#define HMDMATRIX34_T_TA0FE165952174421B5D3FA7C1A35A7E67C2A1504_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdMatrix34_t
struct  HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 
{
public:
	// System.Single Valve.VR.HmdMatrix34_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix34_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix34_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix34_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix34_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix34_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix34_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix34_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix34_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix34_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix34_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix34_t::m11
	float ___m11_11;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDMATRIX34_T_TA0FE165952174421B5D3FA7C1A35A7E67C2A1504_H
#ifndef HMDMATRIX44_T_TEE59D836A1E2E0F23A9FF428BDBC64920D97509C_H
#define HMDMATRIX44_T_TEE59D836A1E2E0F23A9FF428BDBC64920D97509C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdMatrix44_t
struct  HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C 
{
public:
	// System.Single Valve.VR.HmdMatrix44_t::m0
	float ___m0_0;
	// System.Single Valve.VR.HmdMatrix44_t::m1
	float ___m1_1;
	// System.Single Valve.VR.HmdMatrix44_t::m2
	float ___m2_2;
	// System.Single Valve.VR.HmdMatrix44_t::m3
	float ___m3_3;
	// System.Single Valve.VR.HmdMatrix44_t::m4
	float ___m4_4;
	// System.Single Valve.VR.HmdMatrix44_t::m5
	float ___m5_5;
	// System.Single Valve.VR.HmdMatrix44_t::m6
	float ___m6_6;
	// System.Single Valve.VR.HmdMatrix44_t::m7
	float ___m7_7;
	// System.Single Valve.VR.HmdMatrix44_t::m8
	float ___m8_8;
	// System.Single Valve.VR.HmdMatrix44_t::m9
	float ___m9_9;
	// System.Single Valve.VR.HmdMatrix44_t::m10
	float ___m10_10;
	// System.Single Valve.VR.HmdMatrix44_t::m11
	float ___m11_11;
	// System.Single Valve.VR.HmdMatrix44_t::m12
	float ___m12_12;
	// System.Single Valve.VR.HmdMatrix44_t::m13
	float ___m13_13;
	// System.Single Valve.VR.HmdMatrix44_t::m14
	float ___m14_14;
	// System.Single Valve.VR.HmdMatrix44_t::m15
	float ___m15_15;

public:
	inline static int32_t get_offset_of_m0_0() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m0_0)); }
	inline float get_m0_0() const { return ___m0_0; }
	inline float* get_address_of_m0_0() { return &___m0_0; }
	inline void set_m0_0(float value)
	{
		___m0_0 = value;
	}

	inline static int32_t get_offset_of_m1_1() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m1_1)); }
	inline float get_m1_1() const { return ___m1_1; }
	inline float* get_address_of_m1_1() { return &___m1_1; }
	inline void set_m1_1(float value)
	{
		___m1_1 = value;
	}

	inline static int32_t get_offset_of_m2_2() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m2_2)); }
	inline float get_m2_2() const { return ___m2_2; }
	inline float* get_address_of_m2_2() { return &___m2_2; }
	inline void set_m2_2(float value)
	{
		___m2_2 = value;
	}

	inline static int32_t get_offset_of_m3_3() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m3_3)); }
	inline float get_m3_3() const { return ___m3_3; }
	inline float* get_address_of_m3_3() { return &___m3_3; }
	inline void set_m3_3(float value)
	{
		___m3_3 = value;
	}

	inline static int32_t get_offset_of_m4_4() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m4_4)); }
	inline float get_m4_4() const { return ___m4_4; }
	inline float* get_address_of_m4_4() { return &___m4_4; }
	inline void set_m4_4(float value)
	{
		___m4_4 = value;
	}

	inline static int32_t get_offset_of_m5_5() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m5_5)); }
	inline float get_m5_5() const { return ___m5_5; }
	inline float* get_address_of_m5_5() { return &___m5_5; }
	inline void set_m5_5(float value)
	{
		___m5_5 = value;
	}

	inline static int32_t get_offset_of_m6_6() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m6_6)); }
	inline float get_m6_6() const { return ___m6_6; }
	inline float* get_address_of_m6_6() { return &___m6_6; }
	inline void set_m6_6(float value)
	{
		___m6_6 = value;
	}

	inline static int32_t get_offset_of_m7_7() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m7_7)); }
	inline float get_m7_7() const { return ___m7_7; }
	inline float* get_address_of_m7_7() { return &___m7_7; }
	inline void set_m7_7(float value)
	{
		___m7_7 = value;
	}

	inline static int32_t get_offset_of_m8_8() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m8_8)); }
	inline float get_m8_8() const { return ___m8_8; }
	inline float* get_address_of_m8_8() { return &___m8_8; }
	inline void set_m8_8(float value)
	{
		___m8_8 = value;
	}

	inline static int32_t get_offset_of_m9_9() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m9_9)); }
	inline float get_m9_9() const { return ___m9_9; }
	inline float* get_address_of_m9_9() { return &___m9_9; }
	inline void set_m9_9(float value)
	{
		___m9_9 = value;
	}

	inline static int32_t get_offset_of_m10_10() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m10_10)); }
	inline float get_m10_10() const { return ___m10_10; }
	inline float* get_address_of_m10_10() { return &___m10_10; }
	inline void set_m10_10(float value)
	{
		___m10_10 = value;
	}

	inline static int32_t get_offset_of_m11_11() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m11_11)); }
	inline float get_m11_11() const { return ___m11_11; }
	inline float* get_address_of_m11_11() { return &___m11_11; }
	inline void set_m11_11(float value)
	{
		___m11_11 = value;
	}

	inline static int32_t get_offset_of_m12_12() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m12_12)); }
	inline float get_m12_12() const { return ___m12_12; }
	inline float* get_address_of_m12_12() { return &___m12_12; }
	inline void set_m12_12(float value)
	{
		___m12_12 = value;
	}

	inline static int32_t get_offset_of_m13_13() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m13_13)); }
	inline float get_m13_13() const { return ___m13_13; }
	inline float* get_address_of_m13_13() { return &___m13_13; }
	inline void set_m13_13(float value)
	{
		___m13_13 = value;
	}

	inline static int32_t get_offset_of_m14_14() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m14_14)); }
	inline float get_m14_14() const { return ___m14_14; }
	inline float* get_address_of_m14_14() { return &___m14_14; }
	inline void set_m14_14(float value)
	{
		___m14_14 = value;
	}

	inline static int32_t get_offset_of_m15_15() { return static_cast<int32_t>(offsetof(HmdMatrix44_t_tEE59D836A1E2E0F23A9FF428BDBC64920D97509C, ___m15_15)); }
	inline float get_m15_15() const { return ___m15_15; }
	inline float* get_address_of_m15_15() { return &___m15_15; }
	inline void set_m15_15(float value)
	{
		___m15_15 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDMATRIX44_T_TEE59D836A1E2E0F23A9FF428BDBC64920D97509C_H
#ifndef HMDVECTOR2_T_T847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_H
#define HMDVECTOR2_T_T847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdVector2_t
struct  HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 
{
public:
	// System.Single Valve.VR.HmdVector2_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector2_t::v1
	float ___v1_1;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDVECTOR2_T_T847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_H
#ifndef HMDVECTOR3_T_T328BE5DB61119553896A869823C4CC07FF8169E4_H
#define HMDVECTOR3_T_T328BE5DB61119553896A869823C4CC07FF8169E4_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdVector3_t
struct  HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 
{
public:
	// System.Single Valve.VR.HmdVector3_t::v0
	float ___v0_0;
	// System.Single Valve.VR.HmdVector3_t::v1
	float ___v1_1;
	// System.Single Valve.VR.HmdVector3_t::v2
	float ___v2_2;

public:
	inline static int32_t get_offset_of_v0_0() { return static_cast<int32_t>(offsetof(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4, ___v0_0)); }
	inline float get_v0_0() const { return ___v0_0; }
	inline float* get_address_of_v0_0() { return &___v0_0; }
	inline void set_v0_0(float value)
	{
		___v0_0 = value;
	}

	inline static int32_t get_offset_of_v1_1() { return static_cast<int32_t>(offsetof(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4, ___v1_1)); }
	inline float get_v1_1() const { return ___v1_1; }
	inline float* get_address_of_v1_1() { return &___v1_1; }
	inline void set_v1_1(float value)
	{
		___v1_1 = value;
	}

	inline static int32_t get_offset_of_v2_2() { return static_cast<int32_t>(offsetof(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4, ___v2_2)); }
	inline float get_v2_2() const { return ___v2_2; }
	inline float* get_address_of_v2_2() { return &___v2_2; }
	inline void set_v2_2(float value)
	{
		___v2_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDVECTOR3_T_T328BE5DB61119553896A869823C4CC07FF8169E4_H
#ifndef IVRRENDERMODELS_T2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_H
#define IVRRENDERMODELS_T2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels
struct  IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44 
{
public:
	// Valve.VR.IVRRenderModels__LoadRenderModel_Async Valve.VR.IVRRenderModels::LoadRenderModel_Async
	_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C * ___LoadRenderModel_Async_0;
	// Valve.VR.IVRRenderModels__FreeRenderModel Valve.VR.IVRRenderModels::FreeRenderModel
	_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA * ___FreeRenderModel_1;
	// Valve.VR.IVRRenderModels__LoadTexture_Async Valve.VR.IVRRenderModels::LoadTexture_Async
	_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA * ___LoadTexture_Async_2;
	// Valve.VR.IVRRenderModels__FreeTexture Valve.VR.IVRRenderModels::FreeTexture
	_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A * ___FreeTexture_3;
	// Valve.VR.IVRRenderModels__LoadTextureD3D11_Async Valve.VR.IVRRenderModels::LoadTextureD3D11_Async
	_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB * ___LoadTextureD3D11_Async_4;
	// Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async Valve.VR.IVRRenderModels::LoadIntoTextureD3D11_Async
	_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A * ___LoadIntoTextureD3D11_Async_5;
	// Valve.VR.IVRRenderModels__FreeTextureD3D11 Valve.VR.IVRRenderModels::FreeTextureD3D11
	_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 * ___FreeTextureD3D11_6;
	// Valve.VR.IVRRenderModels__GetRenderModelName Valve.VR.IVRRenderModels::GetRenderModelName
	_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 * ___GetRenderModelName_7;
	// Valve.VR.IVRRenderModels__GetRenderModelCount Valve.VR.IVRRenderModels::GetRenderModelCount
	_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D * ___GetRenderModelCount_8;
	// Valve.VR.IVRRenderModels__GetComponentCount Valve.VR.IVRRenderModels::GetComponentCount
	_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 * ___GetComponentCount_9;
	// Valve.VR.IVRRenderModels__GetComponentName Valve.VR.IVRRenderModels::GetComponentName
	_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 * ___GetComponentName_10;
	// Valve.VR.IVRRenderModels__GetComponentButtonMask Valve.VR.IVRRenderModels::GetComponentButtonMask
	_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 * ___GetComponentButtonMask_11;
	// Valve.VR.IVRRenderModels__GetComponentRenderModelName Valve.VR.IVRRenderModels::GetComponentRenderModelName
	_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 * ___GetComponentRenderModelName_12;
	// Valve.VR.IVRRenderModels__GetComponentState Valve.VR.IVRRenderModels::GetComponentState
	_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 * ___GetComponentState_13;
	// Valve.VR.IVRRenderModels__RenderModelHasComponent Valve.VR.IVRRenderModels::RenderModelHasComponent
	_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A * ___RenderModelHasComponent_14;
	// Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL Valve.VR.IVRRenderModels::GetRenderModelThumbnailURL
	_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 * ___GetRenderModelThumbnailURL_15;
	// Valve.VR.IVRRenderModels__GetRenderModelOriginalPath Valve.VR.IVRRenderModels::GetRenderModelOriginalPath
	_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 * ___GetRenderModelOriginalPath_16;
	// Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum Valve.VR.IVRRenderModels::GetRenderModelErrorNameFromEnum
	_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 * ___GetRenderModelErrorNameFromEnum_17;

public:
	inline static int32_t get_offset_of_LoadRenderModel_Async_0() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___LoadRenderModel_Async_0)); }
	inline _LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C * get_LoadRenderModel_Async_0() const { return ___LoadRenderModel_Async_0; }
	inline _LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C ** get_address_of_LoadRenderModel_Async_0() { return &___LoadRenderModel_Async_0; }
	inline void set_LoadRenderModel_Async_0(_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C * value)
	{
		___LoadRenderModel_Async_0 = value;
		Il2CppCodeGenWriteBarrier((&___LoadRenderModel_Async_0), value);
	}

	inline static int32_t get_offset_of_FreeRenderModel_1() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___FreeRenderModel_1)); }
	inline _FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA * get_FreeRenderModel_1() const { return ___FreeRenderModel_1; }
	inline _FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA ** get_address_of_FreeRenderModel_1() { return &___FreeRenderModel_1; }
	inline void set_FreeRenderModel_1(_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA * value)
	{
		___FreeRenderModel_1 = value;
		Il2CppCodeGenWriteBarrier((&___FreeRenderModel_1), value);
	}

	inline static int32_t get_offset_of_LoadTexture_Async_2() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___LoadTexture_Async_2)); }
	inline _LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA * get_LoadTexture_Async_2() const { return ___LoadTexture_Async_2; }
	inline _LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA ** get_address_of_LoadTexture_Async_2() { return &___LoadTexture_Async_2; }
	inline void set_LoadTexture_Async_2(_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA * value)
	{
		___LoadTexture_Async_2 = value;
		Il2CppCodeGenWriteBarrier((&___LoadTexture_Async_2), value);
	}

	inline static int32_t get_offset_of_FreeTexture_3() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___FreeTexture_3)); }
	inline _FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A * get_FreeTexture_3() const { return ___FreeTexture_3; }
	inline _FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A ** get_address_of_FreeTexture_3() { return &___FreeTexture_3; }
	inline void set_FreeTexture_3(_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A * value)
	{
		___FreeTexture_3 = value;
		Il2CppCodeGenWriteBarrier((&___FreeTexture_3), value);
	}

	inline static int32_t get_offset_of_LoadTextureD3D11_Async_4() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___LoadTextureD3D11_Async_4)); }
	inline _LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB * get_LoadTextureD3D11_Async_4() const { return ___LoadTextureD3D11_Async_4; }
	inline _LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB ** get_address_of_LoadTextureD3D11_Async_4() { return &___LoadTextureD3D11_Async_4; }
	inline void set_LoadTextureD3D11_Async_4(_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB * value)
	{
		___LoadTextureD3D11_Async_4 = value;
		Il2CppCodeGenWriteBarrier((&___LoadTextureD3D11_Async_4), value);
	}

	inline static int32_t get_offset_of_LoadIntoTextureD3D11_Async_5() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___LoadIntoTextureD3D11_Async_5)); }
	inline _LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A * get_LoadIntoTextureD3D11_Async_5() const { return ___LoadIntoTextureD3D11_Async_5; }
	inline _LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A ** get_address_of_LoadIntoTextureD3D11_Async_5() { return &___LoadIntoTextureD3D11_Async_5; }
	inline void set_LoadIntoTextureD3D11_Async_5(_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A * value)
	{
		___LoadIntoTextureD3D11_Async_5 = value;
		Il2CppCodeGenWriteBarrier((&___LoadIntoTextureD3D11_Async_5), value);
	}

	inline static int32_t get_offset_of_FreeTextureD3D11_6() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___FreeTextureD3D11_6)); }
	inline _FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 * get_FreeTextureD3D11_6() const { return ___FreeTextureD3D11_6; }
	inline _FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 ** get_address_of_FreeTextureD3D11_6() { return &___FreeTextureD3D11_6; }
	inline void set_FreeTextureD3D11_6(_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 * value)
	{
		___FreeTextureD3D11_6 = value;
		Il2CppCodeGenWriteBarrier((&___FreeTextureD3D11_6), value);
	}

	inline static int32_t get_offset_of_GetRenderModelName_7() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetRenderModelName_7)); }
	inline _GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 * get_GetRenderModelName_7() const { return ___GetRenderModelName_7; }
	inline _GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 ** get_address_of_GetRenderModelName_7() { return &___GetRenderModelName_7; }
	inline void set_GetRenderModelName_7(_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 * value)
	{
		___GetRenderModelName_7 = value;
		Il2CppCodeGenWriteBarrier((&___GetRenderModelName_7), value);
	}

	inline static int32_t get_offset_of_GetRenderModelCount_8() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetRenderModelCount_8)); }
	inline _GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D * get_GetRenderModelCount_8() const { return ___GetRenderModelCount_8; }
	inline _GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D ** get_address_of_GetRenderModelCount_8() { return &___GetRenderModelCount_8; }
	inline void set_GetRenderModelCount_8(_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D * value)
	{
		___GetRenderModelCount_8 = value;
		Il2CppCodeGenWriteBarrier((&___GetRenderModelCount_8), value);
	}

	inline static int32_t get_offset_of_GetComponentCount_9() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetComponentCount_9)); }
	inline _GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 * get_GetComponentCount_9() const { return ___GetComponentCount_9; }
	inline _GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 ** get_address_of_GetComponentCount_9() { return &___GetComponentCount_9; }
	inline void set_GetComponentCount_9(_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 * value)
	{
		___GetComponentCount_9 = value;
		Il2CppCodeGenWriteBarrier((&___GetComponentCount_9), value);
	}

	inline static int32_t get_offset_of_GetComponentName_10() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetComponentName_10)); }
	inline _GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 * get_GetComponentName_10() const { return ___GetComponentName_10; }
	inline _GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 ** get_address_of_GetComponentName_10() { return &___GetComponentName_10; }
	inline void set_GetComponentName_10(_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 * value)
	{
		___GetComponentName_10 = value;
		Il2CppCodeGenWriteBarrier((&___GetComponentName_10), value);
	}

	inline static int32_t get_offset_of_GetComponentButtonMask_11() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetComponentButtonMask_11)); }
	inline _GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 * get_GetComponentButtonMask_11() const { return ___GetComponentButtonMask_11; }
	inline _GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 ** get_address_of_GetComponentButtonMask_11() { return &___GetComponentButtonMask_11; }
	inline void set_GetComponentButtonMask_11(_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 * value)
	{
		___GetComponentButtonMask_11 = value;
		Il2CppCodeGenWriteBarrier((&___GetComponentButtonMask_11), value);
	}

	inline static int32_t get_offset_of_GetComponentRenderModelName_12() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetComponentRenderModelName_12)); }
	inline _GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 * get_GetComponentRenderModelName_12() const { return ___GetComponentRenderModelName_12; }
	inline _GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 ** get_address_of_GetComponentRenderModelName_12() { return &___GetComponentRenderModelName_12; }
	inline void set_GetComponentRenderModelName_12(_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 * value)
	{
		___GetComponentRenderModelName_12 = value;
		Il2CppCodeGenWriteBarrier((&___GetComponentRenderModelName_12), value);
	}

	inline static int32_t get_offset_of_GetComponentState_13() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetComponentState_13)); }
	inline _GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 * get_GetComponentState_13() const { return ___GetComponentState_13; }
	inline _GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 ** get_address_of_GetComponentState_13() { return &___GetComponentState_13; }
	inline void set_GetComponentState_13(_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 * value)
	{
		___GetComponentState_13 = value;
		Il2CppCodeGenWriteBarrier((&___GetComponentState_13), value);
	}

	inline static int32_t get_offset_of_RenderModelHasComponent_14() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___RenderModelHasComponent_14)); }
	inline _RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A * get_RenderModelHasComponent_14() const { return ___RenderModelHasComponent_14; }
	inline _RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A ** get_address_of_RenderModelHasComponent_14() { return &___RenderModelHasComponent_14; }
	inline void set_RenderModelHasComponent_14(_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A * value)
	{
		___RenderModelHasComponent_14 = value;
		Il2CppCodeGenWriteBarrier((&___RenderModelHasComponent_14), value);
	}

	inline static int32_t get_offset_of_GetRenderModelThumbnailURL_15() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetRenderModelThumbnailURL_15)); }
	inline _GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 * get_GetRenderModelThumbnailURL_15() const { return ___GetRenderModelThumbnailURL_15; }
	inline _GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 ** get_address_of_GetRenderModelThumbnailURL_15() { return &___GetRenderModelThumbnailURL_15; }
	inline void set_GetRenderModelThumbnailURL_15(_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 * value)
	{
		___GetRenderModelThumbnailURL_15 = value;
		Il2CppCodeGenWriteBarrier((&___GetRenderModelThumbnailURL_15), value);
	}

	inline static int32_t get_offset_of_GetRenderModelOriginalPath_16() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetRenderModelOriginalPath_16)); }
	inline _GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 * get_GetRenderModelOriginalPath_16() const { return ___GetRenderModelOriginalPath_16; }
	inline _GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 ** get_address_of_GetRenderModelOriginalPath_16() { return &___GetRenderModelOriginalPath_16; }
	inline void set_GetRenderModelOriginalPath_16(_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 * value)
	{
		___GetRenderModelOriginalPath_16 = value;
		Il2CppCodeGenWriteBarrier((&___GetRenderModelOriginalPath_16), value);
	}

	inline static int32_t get_offset_of_GetRenderModelErrorNameFromEnum_17() { return static_cast<int32_t>(offsetof(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44, ___GetRenderModelErrorNameFromEnum_17)); }
	inline _GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 * get_GetRenderModelErrorNameFromEnum_17() const { return ___GetRenderModelErrorNameFromEnum_17; }
	inline _GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 ** get_address_of_GetRenderModelErrorNameFromEnum_17() { return &___GetRenderModelErrorNameFromEnum_17; }
	inline void set_GetRenderModelErrorNameFromEnum_17(_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 * value)
	{
		___GetRenderModelErrorNameFromEnum_17 = value;
		Il2CppCodeGenWriteBarrier((&___GetRenderModelErrorNameFromEnum_17), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRRenderModels
struct IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshaled_pinvoke
{
	Il2CppMethodPointer ___LoadRenderModel_Async_0;
	Il2CppMethodPointer ___FreeRenderModel_1;
	Il2CppMethodPointer ___LoadTexture_Async_2;
	Il2CppMethodPointer ___FreeTexture_3;
	Il2CppMethodPointer ___LoadTextureD3D11_Async_4;
	Il2CppMethodPointer ___LoadIntoTextureD3D11_Async_5;
	Il2CppMethodPointer ___FreeTextureD3D11_6;
	Il2CppMethodPointer ___GetRenderModelName_7;
	Il2CppMethodPointer ___GetRenderModelCount_8;
	Il2CppMethodPointer ___GetComponentCount_9;
	Il2CppMethodPointer ___GetComponentName_10;
	Il2CppMethodPointer ___GetComponentButtonMask_11;
	Il2CppMethodPointer ___GetComponentRenderModelName_12;
	Il2CppMethodPointer ___GetComponentState_13;
	Il2CppMethodPointer ___RenderModelHasComponent_14;
	Il2CppMethodPointer ___GetRenderModelThumbnailURL_15;
	Il2CppMethodPointer ___GetRenderModelOriginalPath_16;
	Il2CppMethodPointer ___GetRenderModelErrorNameFromEnum_17;
};
// Native definition for COM marshalling of Valve.VR.IVRRenderModels
struct IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshaled_com
{
	Il2CppMethodPointer ___LoadRenderModel_Async_0;
	Il2CppMethodPointer ___FreeRenderModel_1;
	Il2CppMethodPointer ___LoadTexture_Async_2;
	Il2CppMethodPointer ___FreeTexture_3;
	Il2CppMethodPointer ___LoadTextureD3D11_Async_4;
	Il2CppMethodPointer ___LoadIntoTextureD3D11_Async_5;
	Il2CppMethodPointer ___FreeTextureD3D11_6;
	Il2CppMethodPointer ___GetRenderModelName_7;
	Il2CppMethodPointer ___GetRenderModelCount_8;
	Il2CppMethodPointer ___GetComponentCount_9;
	Il2CppMethodPointer ___GetComponentName_10;
	Il2CppMethodPointer ___GetComponentButtonMask_11;
	Il2CppMethodPointer ___GetComponentRenderModelName_12;
	Il2CppMethodPointer ___GetComponentState_13;
	Il2CppMethodPointer ___RenderModelHasComponent_14;
	Il2CppMethodPointer ___GetRenderModelThumbnailURL_15;
	Il2CppMethodPointer ___GetRenderModelOriginalPath_16;
	Il2CppMethodPointer ___GetRenderModelErrorNameFromEnum_17;
};
#endif // IVRRENDERMODELS_T2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_H
#ifndef IVRRESOURCES_T846FBA4ADA918920F17FEE7DA2E2C86974F283A1_H
#define IVRRESOURCES_T846FBA4ADA918920F17FEE7DA2E2C86974F283A1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRResources
struct  IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1 
{
public:
	// Valve.VR.IVRResources__LoadSharedResource Valve.VR.IVRResources::LoadSharedResource
	_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E * ___LoadSharedResource_0;
	// Valve.VR.IVRResources__GetResourceFullPath Valve.VR.IVRResources::GetResourceFullPath
	_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB * ___GetResourceFullPath_1;

public:
	inline static int32_t get_offset_of_LoadSharedResource_0() { return static_cast<int32_t>(offsetof(IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1, ___LoadSharedResource_0)); }
	inline _LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E * get_LoadSharedResource_0() const { return ___LoadSharedResource_0; }
	inline _LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E ** get_address_of_LoadSharedResource_0() { return &___LoadSharedResource_0; }
	inline void set_LoadSharedResource_0(_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E * value)
	{
		___LoadSharedResource_0 = value;
		Il2CppCodeGenWriteBarrier((&___LoadSharedResource_0), value);
	}

	inline static int32_t get_offset_of_GetResourceFullPath_1() { return static_cast<int32_t>(offsetof(IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1, ___GetResourceFullPath_1)); }
	inline _GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB * get_GetResourceFullPath_1() const { return ___GetResourceFullPath_1; }
	inline _GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB ** get_address_of_GetResourceFullPath_1() { return &___GetResourceFullPath_1; }
	inline void set_GetResourceFullPath_1(_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB * value)
	{
		___GetResourceFullPath_1 = value;
		Il2CppCodeGenWriteBarrier((&___GetResourceFullPath_1), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRResources
struct IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshaled_pinvoke
{
	Il2CppMethodPointer ___LoadSharedResource_0;
	Il2CppMethodPointer ___GetResourceFullPath_1;
};
// Native definition for COM marshalling of Valve.VR.IVRResources
struct IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshaled_com
{
	Il2CppMethodPointer ___LoadSharedResource_0;
	Il2CppMethodPointer ___GetResourceFullPath_1;
};
#endif // IVRRESOURCES_T846FBA4ADA918920F17FEE7DA2E2C86974F283A1_H
#ifndef IVRSCREENSHOTS_T19042740D8FA1AD853B6282F5222C29D1F83565B_H
#define IVRSCREENSHOTS_T19042740D8FA1AD853B6282F5222C29D1F83565B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRScreenshots
struct  IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B 
{
public:
	// Valve.VR.IVRScreenshots__RequestScreenshot Valve.VR.IVRScreenshots::RequestScreenshot
	_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 * ___RequestScreenshot_0;
	// Valve.VR.IVRScreenshots__HookScreenshot Valve.VR.IVRScreenshots::HookScreenshot
	_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 * ___HookScreenshot_1;
	// Valve.VR.IVRScreenshots__GetScreenshotPropertyType Valve.VR.IVRScreenshots::GetScreenshotPropertyType
	_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC * ___GetScreenshotPropertyType_2;
	// Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename Valve.VR.IVRScreenshots::GetScreenshotPropertyFilename
	_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 * ___GetScreenshotPropertyFilename_3;
	// Valve.VR.IVRScreenshots__UpdateScreenshotProgress Valve.VR.IVRScreenshots::UpdateScreenshotProgress
	_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 * ___UpdateScreenshotProgress_4;
	// Valve.VR.IVRScreenshots__TakeStereoScreenshot Valve.VR.IVRScreenshots::TakeStereoScreenshot
	_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 * ___TakeStereoScreenshot_5;
	// Valve.VR.IVRScreenshots__SubmitScreenshot Valve.VR.IVRScreenshots::SubmitScreenshot
	_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 * ___SubmitScreenshot_6;

public:
	inline static int32_t get_offset_of_RequestScreenshot_0() { return static_cast<int32_t>(offsetof(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B, ___RequestScreenshot_0)); }
	inline _RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 * get_RequestScreenshot_0() const { return ___RequestScreenshot_0; }
	inline _RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 ** get_address_of_RequestScreenshot_0() { return &___RequestScreenshot_0; }
	inline void set_RequestScreenshot_0(_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 * value)
	{
		___RequestScreenshot_0 = value;
		Il2CppCodeGenWriteBarrier((&___RequestScreenshot_0), value);
	}

	inline static int32_t get_offset_of_HookScreenshot_1() { return static_cast<int32_t>(offsetof(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B, ___HookScreenshot_1)); }
	inline _HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 * get_HookScreenshot_1() const { return ___HookScreenshot_1; }
	inline _HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 ** get_address_of_HookScreenshot_1() { return &___HookScreenshot_1; }
	inline void set_HookScreenshot_1(_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 * value)
	{
		___HookScreenshot_1 = value;
		Il2CppCodeGenWriteBarrier((&___HookScreenshot_1), value);
	}

	inline static int32_t get_offset_of_GetScreenshotPropertyType_2() { return static_cast<int32_t>(offsetof(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B, ___GetScreenshotPropertyType_2)); }
	inline _GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC * get_GetScreenshotPropertyType_2() const { return ___GetScreenshotPropertyType_2; }
	inline _GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC ** get_address_of_GetScreenshotPropertyType_2() { return &___GetScreenshotPropertyType_2; }
	inline void set_GetScreenshotPropertyType_2(_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC * value)
	{
		___GetScreenshotPropertyType_2 = value;
		Il2CppCodeGenWriteBarrier((&___GetScreenshotPropertyType_2), value);
	}

	inline static int32_t get_offset_of_GetScreenshotPropertyFilename_3() { return static_cast<int32_t>(offsetof(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B, ___GetScreenshotPropertyFilename_3)); }
	inline _GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 * get_GetScreenshotPropertyFilename_3() const { return ___GetScreenshotPropertyFilename_3; }
	inline _GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 ** get_address_of_GetScreenshotPropertyFilename_3() { return &___GetScreenshotPropertyFilename_3; }
	inline void set_GetScreenshotPropertyFilename_3(_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 * value)
	{
		___GetScreenshotPropertyFilename_3 = value;
		Il2CppCodeGenWriteBarrier((&___GetScreenshotPropertyFilename_3), value);
	}

	inline static int32_t get_offset_of_UpdateScreenshotProgress_4() { return static_cast<int32_t>(offsetof(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B, ___UpdateScreenshotProgress_4)); }
	inline _UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 * get_UpdateScreenshotProgress_4() const { return ___UpdateScreenshotProgress_4; }
	inline _UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 ** get_address_of_UpdateScreenshotProgress_4() { return &___UpdateScreenshotProgress_4; }
	inline void set_UpdateScreenshotProgress_4(_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 * value)
	{
		___UpdateScreenshotProgress_4 = value;
		Il2CppCodeGenWriteBarrier((&___UpdateScreenshotProgress_4), value);
	}

	inline static int32_t get_offset_of_TakeStereoScreenshot_5() { return static_cast<int32_t>(offsetof(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B, ___TakeStereoScreenshot_5)); }
	inline _TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 * get_TakeStereoScreenshot_5() const { return ___TakeStereoScreenshot_5; }
	inline _TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 ** get_address_of_TakeStereoScreenshot_5() { return &___TakeStereoScreenshot_5; }
	inline void set_TakeStereoScreenshot_5(_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 * value)
	{
		___TakeStereoScreenshot_5 = value;
		Il2CppCodeGenWriteBarrier((&___TakeStereoScreenshot_5), value);
	}

	inline static int32_t get_offset_of_SubmitScreenshot_6() { return static_cast<int32_t>(offsetof(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B, ___SubmitScreenshot_6)); }
	inline _SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 * get_SubmitScreenshot_6() const { return ___SubmitScreenshot_6; }
	inline _SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 ** get_address_of_SubmitScreenshot_6() { return &___SubmitScreenshot_6; }
	inline void set_SubmitScreenshot_6(_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 * value)
	{
		___SubmitScreenshot_6 = value;
		Il2CppCodeGenWriteBarrier((&___SubmitScreenshot_6), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRScreenshots
struct IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshaled_pinvoke
{
	Il2CppMethodPointer ___RequestScreenshot_0;
	Il2CppMethodPointer ___HookScreenshot_1;
	Il2CppMethodPointer ___GetScreenshotPropertyType_2;
	Il2CppMethodPointer ___GetScreenshotPropertyFilename_3;
	Il2CppMethodPointer ___UpdateScreenshotProgress_4;
	Il2CppMethodPointer ___TakeStereoScreenshot_5;
	Il2CppMethodPointer ___SubmitScreenshot_6;
};
// Native definition for COM marshalling of Valve.VR.IVRScreenshots
struct IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshaled_com
{
	Il2CppMethodPointer ___RequestScreenshot_0;
	Il2CppMethodPointer ___HookScreenshot_1;
	Il2CppMethodPointer ___GetScreenshotPropertyType_2;
	Il2CppMethodPointer ___GetScreenshotPropertyFilename_3;
	Il2CppMethodPointer ___UpdateScreenshotProgress_4;
	Il2CppMethodPointer ___TakeStereoScreenshot_5;
	Il2CppMethodPointer ___SubmitScreenshot_6;
};
#endif // IVRSCREENSHOTS_T19042740D8FA1AD853B6282F5222C29D1F83565B_H
#ifndef IVRSETTINGS_T13927753F0B6FF346AC52444B88E0BF8D84C63D5_H
#define IVRSETTINGS_T13927753F0B6FF346AC52444B88E0BF8D84C63D5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings
struct  IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5 
{
public:
	// Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum Valve.VR.IVRSettings::GetSettingsErrorNameFromEnum
	_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA * ___GetSettingsErrorNameFromEnum_0;
	// Valve.VR.IVRSettings__Sync Valve.VR.IVRSettings::Sync
	_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 * ___Sync_1;
	// Valve.VR.IVRSettings__SetBool Valve.VR.IVRSettings::SetBool
	_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 * ___SetBool_2;
	// Valve.VR.IVRSettings__SetInt32 Valve.VR.IVRSettings::SetInt32
	_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 * ___SetInt32_3;
	// Valve.VR.IVRSettings__SetFloat Valve.VR.IVRSettings::SetFloat
	_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD * ___SetFloat_4;
	// Valve.VR.IVRSettings__SetString Valve.VR.IVRSettings::SetString
	_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 * ___SetString_5;
	// Valve.VR.IVRSettings__GetBool Valve.VR.IVRSettings::GetBool
	_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F * ___GetBool_6;
	// Valve.VR.IVRSettings__GetInt32 Valve.VR.IVRSettings::GetInt32
	_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E * ___GetInt32_7;
	// Valve.VR.IVRSettings__GetFloat Valve.VR.IVRSettings::GetFloat
	_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 * ___GetFloat_8;
	// Valve.VR.IVRSettings__GetString Valve.VR.IVRSettings::GetString
	_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 * ___GetString_9;
	// Valve.VR.IVRSettings__RemoveSection Valve.VR.IVRSettings::RemoveSection
	_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 * ___RemoveSection_10;
	// Valve.VR.IVRSettings__RemoveKeyInSection Valve.VR.IVRSettings::RemoveKeyInSection
	_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 * ___RemoveKeyInSection_11;

public:
	inline static int32_t get_offset_of_GetSettingsErrorNameFromEnum_0() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___GetSettingsErrorNameFromEnum_0)); }
	inline _GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA * get_GetSettingsErrorNameFromEnum_0() const { return ___GetSettingsErrorNameFromEnum_0; }
	inline _GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA ** get_address_of_GetSettingsErrorNameFromEnum_0() { return &___GetSettingsErrorNameFromEnum_0; }
	inline void set_GetSettingsErrorNameFromEnum_0(_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA * value)
	{
		___GetSettingsErrorNameFromEnum_0 = value;
		Il2CppCodeGenWriteBarrier((&___GetSettingsErrorNameFromEnum_0), value);
	}

	inline static int32_t get_offset_of_Sync_1() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___Sync_1)); }
	inline _Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 * get_Sync_1() const { return ___Sync_1; }
	inline _Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 ** get_address_of_Sync_1() { return &___Sync_1; }
	inline void set_Sync_1(_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 * value)
	{
		___Sync_1 = value;
		Il2CppCodeGenWriteBarrier((&___Sync_1), value);
	}

	inline static int32_t get_offset_of_SetBool_2() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___SetBool_2)); }
	inline _SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 * get_SetBool_2() const { return ___SetBool_2; }
	inline _SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 ** get_address_of_SetBool_2() { return &___SetBool_2; }
	inline void set_SetBool_2(_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 * value)
	{
		___SetBool_2 = value;
		Il2CppCodeGenWriteBarrier((&___SetBool_2), value);
	}

	inline static int32_t get_offset_of_SetInt32_3() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___SetInt32_3)); }
	inline _SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 * get_SetInt32_3() const { return ___SetInt32_3; }
	inline _SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 ** get_address_of_SetInt32_3() { return &___SetInt32_3; }
	inline void set_SetInt32_3(_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 * value)
	{
		___SetInt32_3 = value;
		Il2CppCodeGenWriteBarrier((&___SetInt32_3), value);
	}

	inline static int32_t get_offset_of_SetFloat_4() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___SetFloat_4)); }
	inline _SetFloat_t98FDC04346EC28577694E439EABA871417670ABD * get_SetFloat_4() const { return ___SetFloat_4; }
	inline _SetFloat_t98FDC04346EC28577694E439EABA871417670ABD ** get_address_of_SetFloat_4() { return &___SetFloat_4; }
	inline void set_SetFloat_4(_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD * value)
	{
		___SetFloat_4 = value;
		Il2CppCodeGenWriteBarrier((&___SetFloat_4), value);
	}

	inline static int32_t get_offset_of_SetString_5() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___SetString_5)); }
	inline _SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 * get_SetString_5() const { return ___SetString_5; }
	inline _SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 ** get_address_of_SetString_5() { return &___SetString_5; }
	inline void set_SetString_5(_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 * value)
	{
		___SetString_5 = value;
		Il2CppCodeGenWriteBarrier((&___SetString_5), value);
	}

	inline static int32_t get_offset_of_GetBool_6() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___GetBool_6)); }
	inline _GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F * get_GetBool_6() const { return ___GetBool_6; }
	inline _GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F ** get_address_of_GetBool_6() { return &___GetBool_6; }
	inline void set_GetBool_6(_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F * value)
	{
		___GetBool_6 = value;
		Il2CppCodeGenWriteBarrier((&___GetBool_6), value);
	}

	inline static int32_t get_offset_of_GetInt32_7() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___GetInt32_7)); }
	inline _GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E * get_GetInt32_7() const { return ___GetInt32_7; }
	inline _GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E ** get_address_of_GetInt32_7() { return &___GetInt32_7; }
	inline void set_GetInt32_7(_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E * value)
	{
		___GetInt32_7 = value;
		Il2CppCodeGenWriteBarrier((&___GetInt32_7), value);
	}

	inline static int32_t get_offset_of_GetFloat_8() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___GetFloat_8)); }
	inline _GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 * get_GetFloat_8() const { return ___GetFloat_8; }
	inline _GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 ** get_address_of_GetFloat_8() { return &___GetFloat_8; }
	inline void set_GetFloat_8(_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 * value)
	{
		___GetFloat_8 = value;
		Il2CppCodeGenWriteBarrier((&___GetFloat_8), value);
	}

	inline static int32_t get_offset_of_GetString_9() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___GetString_9)); }
	inline _GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 * get_GetString_9() const { return ___GetString_9; }
	inline _GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 ** get_address_of_GetString_9() { return &___GetString_9; }
	inline void set_GetString_9(_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 * value)
	{
		___GetString_9 = value;
		Il2CppCodeGenWriteBarrier((&___GetString_9), value);
	}

	inline static int32_t get_offset_of_RemoveSection_10() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___RemoveSection_10)); }
	inline _RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 * get_RemoveSection_10() const { return ___RemoveSection_10; }
	inline _RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 ** get_address_of_RemoveSection_10() { return &___RemoveSection_10; }
	inline void set_RemoveSection_10(_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 * value)
	{
		___RemoveSection_10 = value;
		Il2CppCodeGenWriteBarrier((&___RemoveSection_10), value);
	}

	inline static int32_t get_offset_of_RemoveKeyInSection_11() { return static_cast<int32_t>(offsetof(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5, ___RemoveKeyInSection_11)); }
	inline _RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 * get_RemoveKeyInSection_11() const { return ___RemoveKeyInSection_11; }
	inline _RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 ** get_address_of_RemoveKeyInSection_11() { return &___RemoveKeyInSection_11; }
	inline void set_RemoveKeyInSection_11(_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 * value)
	{
		___RemoveKeyInSection_11 = value;
		Il2CppCodeGenWriteBarrier((&___RemoveKeyInSection_11), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRSettings
struct IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshaled_pinvoke
{
	Il2CppMethodPointer ___GetSettingsErrorNameFromEnum_0;
	Il2CppMethodPointer ___Sync_1;
	Il2CppMethodPointer ___SetBool_2;
	Il2CppMethodPointer ___SetInt32_3;
	Il2CppMethodPointer ___SetFloat_4;
	Il2CppMethodPointer ___SetString_5;
	Il2CppMethodPointer ___GetBool_6;
	Il2CppMethodPointer ___GetInt32_7;
	Il2CppMethodPointer ___GetFloat_8;
	Il2CppMethodPointer ___GetString_9;
	Il2CppMethodPointer ___RemoveSection_10;
	Il2CppMethodPointer ___RemoveKeyInSection_11;
};
// Native definition for COM marshalling of Valve.VR.IVRSettings
struct IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshaled_com
{
	Il2CppMethodPointer ___GetSettingsErrorNameFromEnum_0;
	Il2CppMethodPointer ___Sync_1;
	Il2CppMethodPointer ___SetBool_2;
	Il2CppMethodPointer ___SetInt32_3;
	Il2CppMethodPointer ___SetFloat_4;
	Il2CppMethodPointer ___SetString_5;
	Il2CppMethodPointer ___GetBool_6;
	Il2CppMethodPointer ___GetInt32_7;
	Il2CppMethodPointer ___GetFloat_8;
	Il2CppMethodPointer ___GetString_9;
	Il2CppMethodPointer ___RemoveSection_10;
	Il2CppMethodPointer ___RemoveKeyInSection_11;
};
#endif // IVRSETTINGS_T13927753F0B6FF346AC52444B88E0BF8D84C63D5_H
#ifndef IVRSYSTEM_T2954061947D0BD67FD306586BE5F4A8D7DBFC053_H
#define IVRSYSTEM_T2954061947D0BD67FD306586BE5F4A8D7DBFC053_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem
struct  IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053 
{
public:
	// Valve.VR.IVRSystem__GetRecommendedRenderTargetSize Valve.VR.IVRSystem::GetRecommendedRenderTargetSize
	_GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F * ___GetRecommendedRenderTargetSize_0;
	// Valve.VR.IVRSystem__GetProjectionMatrix Valve.VR.IVRSystem::GetProjectionMatrix
	_GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C * ___GetProjectionMatrix_1;
	// Valve.VR.IVRSystem__GetProjectionRaw Valve.VR.IVRSystem::GetProjectionRaw
	_GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5 * ___GetProjectionRaw_2;
	// Valve.VR.IVRSystem__ComputeDistortion Valve.VR.IVRSystem::ComputeDistortion
	_ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D * ___ComputeDistortion_3;
	// Valve.VR.IVRSystem__GetEyeToHeadTransform Valve.VR.IVRSystem::GetEyeToHeadTransform
	_GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115 * ___GetEyeToHeadTransform_4;
	// Valve.VR.IVRSystem__GetTimeSinceLastVsync Valve.VR.IVRSystem::GetTimeSinceLastVsync
	_GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4 * ___GetTimeSinceLastVsync_5;
	// Valve.VR.IVRSystem__GetD3D9AdapterIndex Valve.VR.IVRSystem::GetD3D9AdapterIndex
	_GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5 * ___GetD3D9AdapterIndex_6;
	// Valve.VR.IVRSystem__GetDXGIOutputInfo Valve.VR.IVRSystem::GetDXGIOutputInfo
	_GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B * ___GetDXGIOutputInfo_7;
	// Valve.VR.IVRSystem__GetOutputDevice Valve.VR.IVRSystem::GetOutputDevice
	_GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA * ___GetOutputDevice_8;
	// Valve.VR.IVRSystem__IsDisplayOnDesktop Valve.VR.IVRSystem::IsDisplayOnDesktop
	_IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332 * ___IsDisplayOnDesktop_9;
	// Valve.VR.IVRSystem__SetDisplayVisibility Valve.VR.IVRSystem::SetDisplayVisibility
	_SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70 * ___SetDisplayVisibility_10;
	// Valve.VR.IVRSystem__GetDeviceToAbsoluteTrackingPose Valve.VR.IVRSystem::GetDeviceToAbsoluteTrackingPose
	_GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5 * ___GetDeviceToAbsoluteTrackingPose_11;
	// Valve.VR.IVRSystem__ResetSeatedZeroPose Valve.VR.IVRSystem::ResetSeatedZeroPose
	_ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560 * ___ResetSeatedZeroPose_12;
	// Valve.VR.IVRSystem__GetSeatedZeroPoseToStandingAbsoluteTrackingPose Valve.VR.IVRSystem::GetSeatedZeroPoseToStandingAbsoluteTrackingPose
	_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347 * ___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13;
	// Valve.VR.IVRSystem__GetRawZeroPoseToStandingAbsoluteTrackingPose Valve.VR.IVRSystem::GetRawZeroPoseToStandingAbsoluteTrackingPose
	_GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198 * ___GetRawZeroPoseToStandingAbsoluteTrackingPose_14;
	// Valve.VR.IVRSystem__GetSortedTrackedDeviceIndicesOfClass Valve.VR.IVRSystem::GetSortedTrackedDeviceIndicesOfClass
	_GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187 * ___GetSortedTrackedDeviceIndicesOfClass_15;
	// Valve.VR.IVRSystem__GetTrackedDeviceActivityLevel Valve.VR.IVRSystem::GetTrackedDeviceActivityLevel
	_GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74 * ___GetTrackedDeviceActivityLevel_16;
	// Valve.VR.IVRSystem__ApplyTransform Valve.VR.IVRSystem::ApplyTransform
	_ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76 * ___ApplyTransform_17;
	// Valve.VR.IVRSystem__GetTrackedDeviceIndexForControllerRole Valve.VR.IVRSystem::GetTrackedDeviceIndexForControllerRole
	_GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062 * ___GetTrackedDeviceIndexForControllerRole_18;
	// Valve.VR.IVRSystem__GetControllerRoleForTrackedDeviceIndex Valve.VR.IVRSystem::GetControllerRoleForTrackedDeviceIndex
	_GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8 * ___GetControllerRoleForTrackedDeviceIndex_19;
	// Valve.VR.IVRSystem__GetTrackedDeviceClass Valve.VR.IVRSystem::GetTrackedDeviceClass
	_GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87 * ___GetTrackedDeviceClass_20;
	// Valve.VR.IVRSystem__IsTrackedDeviceConnected Valve.VR.IVRSystem::IsTrackedDeviceConnected
	_IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9 * ___IsTrackedDeviceConnected_21;
	// Valve.VR.IVRSystem__GetBoolTrackedDeviceProperty Valve.VR.IVRSystem::GetBoolTrackedDeviceProperty
	_GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02 * ___GetBoolTrackedDeviceProperty_22;
	// Valve.VR.IVRSystem__GetFloatTrackedDeviceProperty Valve.VR.IVRSystem::GetFloatTrackedDeviceProperty
	_GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965 * ___GetFloatTrackedDeviceProperty_23;
	// Valve.VR.IVRSystem__GetInt32TrackedDeviceProperty Valve.VR.IVRSystem::GetInt32TrackedDeviceProperty
	_GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0 * ___GetInt32TrackedDeviceProperty_24;
	// Valve.VR.IVRSystem__GetUint64TrackedDeviceProperty Valve.VR.IVRSystem::GetUint64TrackedDeviceProperty
	_GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6 * ___GetUint64TrackedDeviceProperty_25;
	// Valve.VR.IVRSystem__GetMatrix34TrackedDeviceProperty Valve.VR.IVRSystem::GetMatrix34TrackedDeviceProperty
	_GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A * ___GetMatrix34TrackedDeviceProperty_26;
	// Valve.VR.IVRSystem__GetArrayTrackedDeviceProperty Valve.VR.IVRSystem::GetArrayTrackedDeviceProperty
	_GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915 * ___GetArrayTrackedDeviceProperty_27;
	// Valve.VR.IVRSystem__GetStringTrackedDeviceProperty Valve.VR.IVRSystem::GetStringTrackedDeviceProperty
	_GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F * ___GetStringTrackedDeviceProperty_28;
	// Valve.VR.IVRSystem__GetPropErrorNameFromEnum Valve.VR.IVRSystem::GetPropErrorNameFromEnum
	_GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898 * ___GetPropErrorNameFromEnum_29;
	// Valve.VR.IVRSystem__PollNextEvent Valve.VR.IVRSystem::PollNextEvent
	_PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E * ___PollNextEvent_30;
	// Valve.VR.IVRSystem__PollNextEventWithPose Valve.VR.IVRSystem::PollNextEventWithPose
	_PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83 * ___PollNextEventWithPose_31;
	// Valve.VR.IVRSystem__GetEventTypeNameFromEnum Valve.VR.IVRSystem::GetEventTypeNameFromEnum
	_GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837 * ___GetEventTypeNameFromEnum_32;
	// Valve.VR.IVRSystem__GetHiddenAreaMesh Valve.VR.IVRSystem::GetHiddenAreaMesh
	_GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54 * ___GetHiddenAreaMesh_33;
	// Valve.VR.IVRSystem__GetControllerState Valve.VR.IVRSystem::GetControllerState
	_GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407 * ___GetControllerState_34;
	// Valve.VR.IVRSystem__GetControllerStateWithPose Valve.VR.IVRSystem::GetControllerStateWithPose
	_GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32 * ___GetControllerStateWithPose_35;
	// Valve.VR.IVRSystem__TriggerHapticPulse Valve.VR.IVRSystem::TriggerHapticPulse
	_TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046 * ___TriggerHapticPulse_36;
	// Valve.VR.IVRSystem__GetButtonIdNameFromEnum Valve.VR.IVRSystem::GetButtonIdNameFromEnum
	_GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8 * ___GetButtonIdNameFromEnum_37;
	// Valve.VR.IVRSystem__GetControllerAxisTypeNameFromEnum Valve.VR.IVRSystem::GetControllerAxisTypeNameFromEnum
	_GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641 * ___GetControllerAxisTypeNameFromEnum_38;
	// Valve.VR.IVRSystem__IsInputAvailable Valve.VR.IVRSystem::IsInputAvailable
	_IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95 * ___IsInputAvailable_39;
	// Valve.VR.IVRSystem__IsSteamVRDrawingControllers Valve.VR.IVRSystem::IsSteamVRDrawingControllers
	_IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464 * ___IsSteamVRDrawingControllers_40;
	// Valve.VR.IVRSystem__ShouldApplicationPause Valve.VR.IVRSystem::ShouldApplicationPause
	_ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70 * ___ShouldApplicationPause_41;
	// Valve.VR.IVRSystem__ShouldApplicationReduceRenderingWork Valve.VR.IVRSystem::ShouldApplicationReduceRenderingWork
	_ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B * ___ShouldApplicationReduceRenderingWork_42;
	// Valve.VR.IVRSystem__DriverDebugRequest Valve.VR.IVRSystem::DriverDebugRequest
	_DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B * ___DriverDebugRequest_43;
	// Valve.VR.IVRSystem__PerformFirmwareUpdate Valve.VR.IVRSystem::PerformFirmwareUpdate
	_PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F * ___PerformFirmwareUpdate_44;
	// Valve.VR.IVRSystem__AcknowledgeQuit_Exiting Valve.VR.IVRSystem::AcknowledgeQuit_Exiting
	_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F * ___AcknowledgeQuit_Exiting_45;
	// Valve.VR.IVRSystem__AcknowledgeQuit_UserPrompt Valve.VR.IVRSystem::AcknowledgeQuit_UserPrompt
	_AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228 * ___AcknowledgeQuit_UserPrompt_46;

public:
	inline static int32_t get_offset_of_GetRecommendedRenderTargetSize_0() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetRecommendedRenderTargetSize_0)); }
	inline _GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F * get_GetRecommendedRenderTargetSize_0() const { return ___GetRecommendedRenderTargetSize_0; }
	inline _GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F ** get_address_of_GetRecommendedRenderTargetSize_0() { return &___GetRecommendedRenderTargetSize_0; }
	inline void set_GetRecommendedRenderTargetSize_0(_GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F * value)
	{
		___GetRecommendedRenderTargetSize_0 = value;
		Il2CppCodeGenWriteBarrier((&___GetRecommendedRenderTargetSize_0), value);
	}

	inline static int32_t get_offset_of_GetProjectionMatrix_1() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetProjectionMatrix_1)); }
	inline _GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C * get_GetProjectionMatrix_1() const { return ___GetProjectionMatrix_1; }
	inline _GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C ** get_address_of_GetProjectionMatrix_1() { return &___GetProjectionMatrix_1; }
	inline void set_GetProjectionMatrix_1(_GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C * value)
	{
		___GetProjectionMatrix_1 = value;
		Il2CppCodeGenWriteBarrier((&___GetProjectionMatrix_1), value);
	}

	inline static int32_t get_offset_of_GetProjectionRaw_2() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetProjectionRaw_2)); }
	inline _GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5 * get_GetProjectionRaw_2() const { return ___GetProjectionRaw_2; }
	inline _GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5 ** get_address_of_GetProjectionRaw_2() { return &___GetProjectionRaw_2; }
	inline void set_GetProjectionRaw_2(_GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5 * value)
	{
		___GetProjectionRaw_2 = value;
		Il2CppCodeGenWriteBarrier((&___GetProjectionRaw_2), value);
	}

	inline static int32_t get_offset_of_ComputeDistortion_3() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___ComputeDistortion_3)); }
	inline _ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D * get_ComputeDistortion_3() const { return ___ComputeDistortion_3; }
	inline _ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D ** get_address_of_ComputeDistortion_3() { return &___ComputeDistortion_3; }
	inline void set_ComputeDistortion_3(_ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D * value)
	{
		___ComputeDistortion_3 = value;
		Il2CppCodeGenWriteBarrier((&___ComputeDistortion_3), value);
	}

	inline static int32_t get_offset_of_GetEyeToHeadTransform_4() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetEyeToHeadTransform_4)); }
	inline _GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115 * get_GetEyeToHeadTransform_4() const { return ___GetEyeToHeadTransform_4; }
	inline _GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115 ** get_address_of_GetEyeToHeadTransform_4() { return &___GetEyeToHeadTransform_4; }
	inline void set_GetEyeToHeadTransform_4(_GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115 * value)
	{
		___GetEyeToHeadTransform_4 = value;
		Il2CppCodeGenWriteBarrier((&___GetEyeToHeadTransform_4), value);
	}

	inline static int32_t get_offset_of_GetTimeSinceLastVsync_5() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetTimeSinceLastVsync_5)); }
	inline _GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4 * get_GetTimeSinceLastVsync_5() const { return ___GetTimeSinceLastVsync_5; }
	inline _GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4 ** get_address_of_GetTimeSinceLastVsync_5() { return &___GetTimeSinceLastVsync_5; }
	inline void set_GetTimeSinceLastVsync_5(_GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4 * value)
	{
		___GetTimeSinceLastVsync_5 = value;
		Il2CppCodeGenWriteBarrier((&___GetTimeSinceLastVsync_5), value);
	}

	inline static int32_t get_offset_of_GetD3D9AdapterIndex_6() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetD3D9AdapterIndex_6)); }
	inline _GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5 * get_GetD3D9AdapterIndex_6() const { return ___GetD3D9AdapterIndex_6; }
	inline _GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5 ** get_address_of_GetD3D9AdapterIndex_6() { return &___GetD3D9AdapterIndex_6; }
	inline void set_GetD3D9AdapterIndex_6(_GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5 * value)
	{
		___GetD3D9AdapterIndex_6 = value;
		Il2CppCodeGenWriteBarrier((&___GetD3D9AdapterIndex_6), value);
	}

	inline static int32_t get_offset_of_GetDXGIOutputInfo_7() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetDXGIOutputInfo_7)); }
	inline _GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B * get_GetDXGIOutputInfo_7() const { return ___GetDXGIOutputInfo_7; }
	inline _GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B ** get_address_of_GetDXGIOutputInfo_7() { return &___GetDXGIOutputInfo_7; }
	inline void set_GetDXGIOutputInfo_7(_GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B * value)
	{
		___GetDXGIOutputInfo_7 = value;
		Il2CppCodeGenWriteBarrier((&___GetDXGIOutputInfo_7), value);
	}

	inline static int32_t get_offset_of_GetOutputDevice_8() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetOutputDevice_8)); }
	inline _GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA * get_GetOutputDevice_8() const { return ___GetOutputDevice_8; }
	inline _GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA ** get_address_of_GetOutputDevice_8() { return &___GetOutputDevice_8; }
	inline void set_GetOutputDevice_8(_GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA * value)
	{
		___GetOutputDevice_8 = value;
		Il2CppCodeGenWriteBarrier((&___GetOutputDevice_8), value);
	}

	inline static int32_t get_offset_of_IsDisplayOnDesktop_9() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___IsDisplayOnDesktop_9)); }
	inline _IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332 * get_IsDisplayOnDesktop_9() const { return ___IsDisplayOnDesktop_9; }
	inline _IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332 ** get_address_of_IsDisplayOnDesktop_9() { return &___IsDisplayOnDesktop_9; }
	inline void set_IsDisplayOnDesktop_9(_IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332 * value)
	{
		___IsDisplayOnDesktop_9 = value;
		Il2CppCodeGenWriteBarrier((&___IsDisplayOnDesktop_9), value);
	}

	inline static int32_t get_offset_of_SetDisplayVisibility_10() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___SetDisplayVisibility_10)); }
	inline _SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70 * get_SetDisplayVisibility_10() const { return ___SetDisplayVisibility_10; }
	inline _SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70 ** get_address_of_SetDisplayVisibility_10() { return &___SetDisplayVisibility_10; }
	inline void set_SetDisplayVisibility_10(_SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70 * value)
	{
		___SetDisplayVisibility_10 = value;
		Il2CppCodeGenWriteBarrier((&___SetDisplayVisibility_10), value);
	}

	inline static int32_t get_offset_of_GetDeviceToAbsoluteTrackingPose_11() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetDeviceToAbsoluteTrackingPose_11)); }
	inline _GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5 * get_GetDeviceToAbsoluteTrackingPose_11() const { return ___GetDeviceToAbsoluteTrackingPose_11; }
	inline _GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5 ** get_address_of_GetDeviceToAbsoluteTrackingPose_11() { return &___GetDeviceToAbsoluteTrackingPose_11; }
	inline void set_GetDeviceToAbsoluteTrackingPose_11(_GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5 * value)
	{
		___GetDeviceToAbsoluteTrackingPose_11 = value;
		Il2CppCodeGenWriteBarrier((&___GetDeviceToAbsoluteTrackingPose_11), value);
	}

	inline static int32_t get_offset_of_ResetSeatedZeroPose_12() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___ResetSeatedZeroPose_12)); }
	inline _ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560 * get_ResetSeatedZeroPose_12() const { return ___ResetSeatedZeroPose_12; }
	inline _ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560 ** get_address_of_ResetSeatedZeroPose_12() { return &___ResetSeatedZeroPose_12; }
	inline void set_ResetSeatedZeroPose_12(_ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560 * value)
	{
		___ResetSeatedZeroPose_12 = value;
		Il2CppCodeGenWriteBarrier((&___ResetSeatedZeroPose_12), value);
	}

	inline static int32_t get_offset_of_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13)); }
	inline _GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347 * get_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13() const { return ___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13; }
	inline _GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347 ** get_address_of_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13() { return &___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13; }
	inline void set_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13(_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347 * value)
	{
		___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13 = value;
		Il2CppCodeGenWriteBarrier((&___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13), value);
	}

	inline static int32_t get_offset_of_GetRawZeroPoseToStandingAbsoluteTrackingPose_14() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetRawZeroPoseToStandingAbsoluteTrackingPose_14)); }
	inline _GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198 * get_GetRawZeroPoseToStandingAbsoluteTrackingPose_14() const { return ___GetRawZeroPoseToStandingAbsoluteTrackingPose_14; }
	inline _GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198 ** get_address_of_GetRawZeroPoseToStandingAbsoluteTrackingPose_14() { return &___GetRawZeroPoseToStandingAbsoluteTrackingPose_14; }
	inline void set_GetRawZeroPoseToStandingAbsoluteTrackingPose_14(_GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198 * value)
	{
		___GetRawZeroPoseToStandingAbsoluteTrackingPose_14 = value;
		Il2CppCodeGenWriteBarrier((&___GetRawZeroPoseToStandingAbsoluteTrackingPose_14), value);
	}

	inline static int32_t get_offset_of_GetSortedTrackedDeviceIndicesOfClass_15() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetSortedTrackedDeviceIndicesOfClass_15)); }
	inline _GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187 * get_GetSortedTrackedDeviceIndicesOfClass_15() const { return ___GetSortedTrackedDeviceIndicesOfClass_15; }
	inline _GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187 ** get_address_of_GetSortedTrackedDeviceIndicesOfClass_15() { return &___GetSortedTrackedDeviceIndicesOfClass_15; }
	inline void set_GetSortedTrackedDeviceIndicesOfClass_15(_GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187 * value)
	{
		___GetSortedTrackedDeviceIndicesOfClass_15 = value;
		Il2CppCodeGenWriteBarrier((&___GetSortedTrackedDeviceIndicesOfClass_15), value);
	}

	inline static int32_t get_offset_of_GetTrackedDeviceActivityLevel_16() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetTrackedDeviceActivityLevel_16)); }
	inline _GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74 * get_GetTrackedDeviceActivityLevel_16() const { return ___GetTrackedDeviceActivityLevel_16; }
	inline _GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74 ** get_address_of_GetTrackedDeviceActivityLevel_16() { return &___GetTrackedDeviceActivityLevel_16; }
	inline void set_GetTrackedDeviceActivityLevel_16(_GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74 * value)
	{
		___GetTrackedDeviceActivityLevel_16 = value;
		Il2CppCodeGenWriteBarrier((&___GetTrackedDeviceActivityLevel_16), value);
	}

	inline static int32_t get_offset_of_ApplyTransform_17() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___ApplyTransform_17)); }
	inline _ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76 * get_ApplyTransform_17() const { return ___ApplyTransform_17; }
	inline _ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76 ** get_address_of_ApplyTransform_17() { return &___ApplyTransform_17; }
	inline void set_ApplyTransform_17(_ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76 * value)
	{
		___ApplyTransform_17 = value;
		Il2CppCodeGenWriteBarrier((&___ApplyTransform_17), value);
	}

	inline static int32_t get_offset_of_GetTrackedDeviceIndexForControllerRole_18() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetTrackedDeviceIndexForControllerRole_18)); }
	inline _GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062 * get_GetTrackedDeviceIndexForControllerRole_18() const { return ___GetTrackedDeviceIndexForControllerRole_18; }
	inline _GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062 ** get_address_of_GetTrackedDeviceIndexForControllerRole_18() { return &___GetTrackedDeviceIndexForControllerRole_18; }
	inline void set_GetTrackedDeviceIndexForControllerRole_18(_GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062 * value)
	{
		___GetTrackedDeviceIndexForControllerRole_18 = value;
		Il2CppCodeGenWriteBarrier((&___GetTrackedDeviceIndexForControllerRole_18), value);
	}

	inline static int32_t get_offset_of_GetControllerRoleForTrackedDeviceIndex_19() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetControllerRoleForTrackedDeviceIndex_19)); }
	inline _GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8 * get_GetControllerRoleForTrackedDeviceIndex_19() const { return ___GetControllerRoleForTrackedDeviceIndex_19; }
	inline _GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8 ** get_address_of_GetControllerRoleForTrackedDeviceIndex_19() { return &___GetControllerRoleForTrackedDeviceIndex_19; }
	inline void set_GetControllerRoleForTrackedDeviceIndex_19(_GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8 * value)
	{
		___GetControllerRoleForTrackedDeviceIndex_19 = value;
		Il2CppCodeGenWriteBarrier((&___GetControllerRoleForTrackedDeviceIndex_19), value);
	}

	inline static int32_t get_offset_of_GetTrackedDeviceClass_20() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetTrackedDeviceClass_20)); }
	inline _GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87 * get_GetTrackedDeviceClass_20() const { return ___GetTrackedDeviceClass_20; }
	inline _GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87 ** get_address_of_GetTrackedDeviceClass_20() { return &___GetTrackedDeviceClass_20; }
	inline void set_GetTrackedDeviceClass_20(_GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87 * value)
	{
		___GetTrackedDeviceClass_20 = value;
		Il2CppCodeGenWriteBarrier((&___GetTrackedDeviceClass_20), value);
	}

	inline static int32_t get_offset_of_IsTrackedDeviceConnected_21() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___IsTrackedDeviceConnected_21)); }
	inline _IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9 * get_IsTrackedDeviceConnected_21() const { return ___IsTrackedDeviceConnected_21; }
	inline _IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9 ** get_address_of_IsTrackedDeviceConnected_21() { return &___IsTrackedDeviceConnected_21; }
	inline void set_IsTrackedDeviceConnected_21(_IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9 * value)
	{
		___IsTrackedDeviceConnected_21 = value;
		Il2CppCodeGenWriteBarrier((&___IsTrackedDeviceConnected_21), value);
	}

	inline static int32_t get_offset_of_GetBoolTrackedDeviceProperty_22() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetBoolTrackedDeviceProperty_22)); }
	inline _GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02 * get_GetBoolTrackedDeviceProperty_22() const { return ___GetBoolTrackedDeviceProperty_22; }
	inline _GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02 ** get_address_of_GetBoolTrackedDeviceProperty_22() { return &___GetBoolTrackedDeviceProperty_22; }
	inline void set_GetBoolTrackedDeviceProperty_22(_GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02 * value)
	{
		___GetBoolTrackedDeviceProperty_22 = value;
		Il2CppCodeGenWriteBarrier((&___GetBoolTrackedDeviceProperty_22), value);
	}

	inline static int32_t get_offset_of_GetFloatTrackedDeviceProperty_23() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetFloatTrackedDeviceProperty_23)); }
	inline _GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965 * get_GetFloatTrackedDeviceProperty_23() const { return ___GetFloatTrackedDeviceProperty_23; }
	inline _GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965 ** get_address_of_GetFloatTrackedDeviceProperty_23() { return &___GetFloatTrackedDeviceProperty_23; }
	inline void set_GetFloatTrackedDeviceProperty_23(_GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965 * value)
	{
		___GetFloatTrackedDeviceProperty_23 = value;
		Il2CppCodeGenWriteBarrier((&___GetFloatTrackedDeviceProperty_23), value);
	}

	inline static int32_t get_offset_of_GetInt32TrackedDeviceProperty_24() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetInt32TrackedDeviceProperty_24)); }
	inline _GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0 * get_GetInt32TrackedDeviceProperty_24() const { return ___GetInt32TrackedDeviceProperty_24; }
	inline _GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0 ** get_address_of_GetInt32TrackedDeviceProperty_24() { return &___GetInt32TrackedDeviceProperty_24; }
	inline void set_GetInt32TrackedDeviceProperty_24(_GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0 * value)
	{
		___GetInt32TrackedDeviceProperty_24 = value;
		Il2CppCodeGenWriteBarrier((&___GetInt32TrackedDeviceProperty_24), value);
	}

	inline static int32_t get_offset_of_GetUint64TrackedDeviceProperty_25() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetUint64TrackedDeviceProperty_25)); }
	inline _GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6 * get_GetUint64TrackedDeviceProperty_25() const { return ___GetUint64TrackedDeviceProperty_25; }
	inline _GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6 ** get_address_of_GetUint64TrackedDeviceProperty_25() { return &___GetUint64TrackedDeviceProperty_25; }
	inline void set_GetUint64TrackedDeviceProperty_25(_GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6 * value)
	{
		___GetUint64TrackedDeviceProperty_25 = value;
		Il2CppCodeGenWriteBarrier((&___GetUint64TrackedDeviceProperty_25), value);
	}

	inline static int32_t get_offset_of_GetMatrix34TrackedDeviceProperty_26() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetMatrix34TrackedDeviceProperty_26)); }
	inline _GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A * get_GetMatrix34TrackedDeviceProperty_26() const { return ___GetMatrix34TrackedDeviceProperty_26; }
	inline _GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A ** get_address_of_GetMatrix34TrackedDeviceProperty_26() { return &___GetMatrix34TrackedDeviceProperty_26; }
	inline void set_GetMatrix34TrackedDeviceProperty_26(_GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A * value)
	{
		___GetMatrix34TrackedDeviceProperty_26 = value;
		Il2CppCodeGenWriteBarrier((&___GetMatrix34TrackedDeviceProperty_26), value);
	}

	inline static int32_t get_offset_of_GetArrayTrackedDeviceProperty_27() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetArrayTrackedDeviceProperty_27)); }
	inline _GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915 * get_GetArrayTrackedDeviceProperty_27() const { return ___GetArrayTrackedDeviceProperty_27; }
	inline _GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915 ** get_address_of_GetArrayTrackedDeviceProperty_27() { return &___GetArrayTrackedDeviceProperty_27; }
	inline void set_GetArrayTrackedDeviceProperty_27(_GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915 * value)
	{
		___GetArrayTrackedDeviceProperty_27 = value;
		Il2CppCodeGenWriteBarrier((&___GetArrayTrackedDeviceProperty_27), value);
	}

	inline static int32_t get_offset_of_GetStringTrackedDeviceProperty_28() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetStringTrackedDeviceProperty_28)); }
	inline _GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F * get_GetStringTrackedDeviceProperty_28() const { return ___GetStringTrackedDeviceProperty_28; }
	inline _GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F ** get_address_of_GetStringTrackedDeviceProperty_28() { return &___GetStringTrackedDeviceProperty_28; }
	inline void set_GetStringTrackedDeviceProperty_28(_GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F * value)
	{
		___GetStringTrackedDeviceProperty_28 = value;
		Il2CppCodeGenWriteBarrier((&___GetStringTrackedDeviceProperty_28), value);
	}

	inline static int32_t get_offset_of_GetPropErrorNameFromEnum_29() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetPropErrorNameFromEnum_29)); }
	inline _GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898 * get_GetPropErrorNameFromEnum_29() const { return ___GetPropErrorNameFromEnum_29; }
	inline _GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898 ** get_address_of_GetPropErrorNameFromEnum_29() { return &___GetPropErrorNameFromEnum_29; }
	inline void set_GetPropErrorNameFromEnum_29(_GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898 * value)
	{
		___GetPropErrorNameFromEnum_29 = value;
		Il2CppCodeGenWriteBarrier((&___GetPropErrorNameFromEnum_29), value);
	}

	inline static int32_t get_offset_of_PollNextEvent_30() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___PollNextEvent_30)); }
	inline _PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E * get_PollNextEvent_30() const { return ___PollNextEvent_30; }
	inline _PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E ** get_address_of_PollNextEvent_30() { return &___PollNextEvent_30; }
	inline void set_PollNextEvent_30(_PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E * value)
	{
		___PollNextEvent_30 = value;
		Il2CppCodeGenWriteBarrier((&___PollNextEvent_30), value);
	}

	inline static int32_t get_offset_of_PollNextEventWithPose_31() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___PollNextEventWithPose_31)); }
	inline _PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83 * get_PollNextEventWithPose_31() const { return ___PollNextEventWithPose_31; }
	inline _PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83 ** get_address_of_PollNextEventWithPose_31() { return &___PollNextEventWithPose_31; }
	inline void set_PollNextEventWithPose_31(_PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83 * value)
	{
		___PollNextEventWithPose_31 = value;
		Il2CppCodeGenWriteBarrier((&___PollNextEventWithPose_31), value);
	}

	inline static int32_t get_offset_of_GetEventTypeNameFromEnum_32() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetEventTypeNameFromEnum_32)); }
	inline _GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837 * get_GetEventTypeNameFromEnum_32() const { return ___GetEventTypeNameFromEnum_32; }
	inline _GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837 ** get_address_of_GetEventTypeNameFromEnum_32() { return &___GetEventTypeNameFromEnum_32; }
	inline void set_GetEventTypeNameFromEnum_32(_GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837 * value)
	{
		___GetEventTypeNameFromEnum_32 = value;
		Il2CppCodeGenWriteBarrier((&___GetEventTypeNameFromEnum_32), value);
	}

	inline static int32_t get_offset_of_GetHiddenAreaMesh_33() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetHiddenAreaMesh_33)); }
	inline _GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54 * get_GetHiddenAreaMesh_33() const { return ___GetHiddenAreaMesh_33; }
	inline _GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54 ** get_address_of_GetHiddenAreaMesh_33() { return &___GetHiddenAreaMesh_33; }
	inline void set_GetHiddenAreaMesh_33(_GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54 * value)
	{
		___GetHiddenAreaMesh_33 = value;
		Il2CppCodeGenWriteBarrier((&___GetHiddenAreaMesh_33), value);
	}

	inline static int32_t get_offset_of_GetControllerState_34() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetControllerState_34)); }
	inline _GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407 * get_GetControllerState_34() const { return ___GetControllerState_34; }
	inline _GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407 ** get_address_of_GetControllerState_34() { return &___GetControllerState_34; }
	inline void set_GetControllerState_34(_GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407 * value)
	{
		___GetControllerState_34 = value;
		Il2CppCodeGenWriteBarrier((&___GetControllerState_34), value);
	}

	inline static int32_t get_offset_of_GetControllerStateWithPose_35() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetControllerStateWithPose_35)); }
	inline _GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32 * get_GetControllerStateWithPose_35() const { return ___GetControllerStateWithPose_35; }
	inline _GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32 ** get_address_of_GetControllerStateWithPose_35() { return &___GetControllerStateWithPose_35; }
	inline void set_GetControllerStateWithPose_35(_GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32 * value)
	{
		___GetControllerStateWithPose_35 = value;
		Il2CppCodeGenWriteBarrier((&___GetControllerStateWithPose_35), value);
	}

	inline static int32_t get_offset_of_TriggerHapticPulse_36() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___TriggerHapticPulse_36)); }
	inline _TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046 * get_TriggerHapticPulse_36() const { return ___TriggerHapticPulse_36; }
	inline _TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046 ** get_address_of_TriggerHapticPulse_36() { return &___TriggerHapticPulse_36; }
	inline void set_TriggerHapticPulse_36(_TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046 * value)
	{
		___TriggerHapticPulse_36 = value;
		Il2CppCodeGenWriteBarrier((&___TriggerHapticPulse_36), value);
	}

	inline static int32_t get_offset_of_GetButtonIdNameFromEnum_37() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetButtonIdNameFromEnum_37)); }
	inline _GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8 * get_GetButtonIdNameFromEnum_37() const { return ___GetButtonIdNameFromEnum_37; }
	inline _GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8 ** get_address_of_GetButtonIdNameFromEnum_37() { return &___GetButtonIdNameFromEnum_37; }
	inline void set_GetButtonIdNameFromEnum_37(_GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8 * value)
	{
		___GetButtonIdNameFromEnum_37 = value;
		Il2CppCodeGenWriteBarrier((&___GetButtonIdNameFromEnum_37), value);
	}

	inline static int32_t get_offset_of_GetControllerAxisTypeNameFromEnum_38() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___GetControllerAxisTypeNameFromEnum_38)); }
	inline _GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641 * get_GetControllerAxisTypeNameFromEnum_38() const { return ___GetControllerAxisTypeNameFromEnum_38; }
	inline _GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641 ** get_address_of_GetControllerAxisTypeNameFromEnum_38() { return &___GetControllerAxisTypeNameFromEnum_38; }
	inline void set_GetControllerAxisTypeNameFromEnum_38(_GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641 * value)
	{
		___GetControllerAxisTypeNameFromEnum_38 = value;
		Il2CppCodeGenWriteBarrier((&___GetControllerAxisTypeNameFromEnum_38), value);
	}

	inline static int32_t get_offset_of_IsInputAvailable_39() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___IsInputAvailable_39)); }
	inline _IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95 * get_IsInputAvailable_39() const { return ___IsInputAvailable_39; }
	inline _IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95 ** get_address_of_IsInputAvailable_39() { return &___IsInputAvailable_39; }
	inline void set_IsInputAvailable_39(_IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95 * value)
	{
		___IsInputAvailable_39 = value;
		Il2CppCodeGenWriteBarrier((&___IsInputAvailable_39), value);
	}

	inline static int32_t get_offset_of_IsSteamVRDrawingControllers_40() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___IsSteamVRDrawingControllers_40)); }
	inline _IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464 * get_IsSteamVRDrawingControllers_40() const { return ___IsSteamVRDrawingControllers_40; }
	inline _IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464 ** get_address_of_IsSteamVRDrawingControllers_40() { return &___IsSteamVRDrawingControllers_40; }
	inline void set_IsSteamVRDrawingControllers_40(_IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464 * value)
	{
		___IsSteamVRDrawingControllers_40 = value;
		Il2CppCodeGenWriteBarrier((&___IsSteamVRDrawingControllers_40), value);
	}

	inline static int32_t get_offset_of_ShouldApplicationPause_41() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___ShouldApplicationPause_41)); }
	inline _ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70 * get_ShouldApplicationPause_41() const { return ___ShouldApplicationPause_41; }
	inline _ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70 ** get_address_of_ShouldApplicationPause_41() { return &___ShouldApplicationPause_41; }
	inline void set_ShouldApplicationPause_41(_ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70 * value)
	{
		___ShouldApplicationPause_41 = value;
		Il2CppCodeGenWriteBarrier((&___ShouldApplicationPause_41), value);
	}

	inline static int32_t get_offset_of_ShouldApplicationReduceRenderingWork_42() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___ShouldApplicationReduceRenderingWork_42)); }
	inline _ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B * get_ShouldApplicationReduceRenderingWork_42() const { return ___ShouldApplicationReduceRenderingWork_42; }
	inline _ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B ** get_address_of_ShouldApplicationReduceRenderingWork_42() { return &___ShouldApplicationReduceRenderingWork_42; }
	inline void set_ShouldApplicationReduceRenderingWork_42(_ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B * value)
	{
		___ShouldApplicationReduceRenderingWork_42 = value;
		Il2CppCodeGenWriteBarrier((&___ShouldApplicationReduceRenderingWork_42), value);
	}

	inline static int32_t get_offset_of_DriverDebugRequest_43() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___DriverDebugRequest_43)); }
	inline _DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B * get_DriverDebugRequest_43() const { return ___DriverDebugRequest_43; }
	inline _DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B ** get_address_of_DriverDebugRequest_43() { return &___DriverDebugRequest_43; }
	inline void set_DriverDebugRequest_43(_DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B * value)
	{
		___DriverDebugRequest_43 = value;
		Il2CppCodeGenWriteBarrier((&___DriverDebugRequest_43), value);
	}

	inline static int32_t get_offset_of_PerformFirmwareUpdate_44() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___PerformFirmwareUpdate_44)); }
	inline _PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F * get_PerformFirmwareUpdate_44() const { return ___PerformFirmwareUpdate_44; }
	inline _PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F ** get_address_of_PerformFirmwareUpdate_44() { return &___PerformFirmwareUpdate_44; }
	inline void set_PerformFirmwareUpdate_44(_PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F * value)
	{
		___PerformFirmwareUpdate_44 = value;
		Il2CppCodeGenWriteBarrier((&___PerformFirmwareUpdate_44), value);
	}

	inline static int32_t get_offset_of_AcknowledgeQuit_Exiting_45() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___AcknowledgeQuit_Exiting_45)); }
	inline _AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F * get_AcknowledgeQuit_Exiting_45() const { return ___AcknowledgeQuit_Exiting_45; }
	inline _AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F ** get_address_of_AcknowledgeQuit_Exiting_45() { return &___AcknowledgeQuit_Exiting_45; }
	inline void set_AcknowledgeQuit_Exiting_45(_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F * value)
	{
		___AcknowledgeQuit_Exiting_45 = value;
		Il2CppCodeGenWriteBarrier((&___AcknowledgeQuit_Exiting_45), value);
	}

	inline static int32_t get_offset_of_AcknowledgeQuit_UserPrompt_46() { return static_cast<int32_t>(offsetof(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053, ___AcknowledgeQuit_UserPrompt_46)); }
	inline _AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228 * get_AcknowledgeQuit_UserPrompt_46() const { return ___AcknowledgeQuit_UserPrompt_46; }
	inline _AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228 ** get_address_of_AcknowledgeQuit_UserPrompt_46() { return &___AcknowledgeQuit_UserPrompt_46; }
	inline void set_AcknowledgeQuit_UserPrompt_46(_AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228 * value)
	{
		___AcknowledgeQuit_UserPrompt_46 = value;
		Il2CppCodeGenWriteBarrier((&___AcknowledgeQuit_UserPrompt_46), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of Valve.VR.IVRSystem
struct IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshaled_pinvoke
{
	Il2CppMethodPointer ___GetRecommendedRenderTargetSize_0;
	Il2CppMethodPointer ___GetProjectionMatrix_1;
	Il2CppMethodPointer ___GetProjectionRaw_2;
	Il2CppMethodPointer ___ComputeDistortion_3;
	Il2CppMethodPointer ___GetEyeToHeadTransform_4;
	Il2CppMethodPointer ___GetTimeSinceLastVsync_5;
	Il2CppMethodPointer ___GetD3D9AdapterIndex_6;
	Il2CppMethodPointer ___GetDXGIOutputInfo_7;
	Il2CppMethodPointer ___GetOutputDevice_8;
	Il2CppMethodPointer ___IsDisplayOnDesktop_9;
	Il2CppMethodPointer ___SetDisplayVisibility_10;
	Il2CppMethodPointer ___GetDeviceToAbsoluteTrackingPose_11;
	Il2CppMethodPointer ___ResetSeatedZeroPose_12;
	Il2CppMethodPointer ___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13;
	Il2CppMethodPointer ___GetRawZeroPoseToStandingAbsoluteTrackingPose_14;
	Il2CppMethodPointer ___GetSortedTrackedDeviceIndicesOfClass_15;
	Il2CppMethodPointer ___GetTrackedDeviceActivityLevel_16;
	Il2CppMethodPointer ___ApplyTransform_17;
	Il2CppMethodPointer ___GetTrackedDeviceIndexForControllerRole_18;
	Il2CppMethodPointer ___GetControllerRoleForTrackedDeviceIndex_19;
	Il2CppMethodPointer ___GetTrackedDeviceClass_20;
	Il2CppMethodPointer ___IsTrackedDeviceConnected_21;
	Il2CppMethodPointer ___GetBoolTrackedDeviceProperty_22;
	Il2CppMethodPointer ___GetFloatTrackedDeviceProperty_23;
	Il2CppMethodPointer ___GetInt32TrackedDeviceProperty_24;
	Il2CppMethodPointer ___GetUint64TrackedDeviceProperty_25;
	Il2CppMethodPointer ___GetMatrix34TrackedDeviceProperty_26;
	Il2CppMethodPointer ___GetArrayTrackedDeviceProperty_27;
	Il2CppMethodPointer ___GetStringTrackedDeviceProperty_28;
	Il2CppMethodPointer ___GetPropErrorNameFromEnum_29;
	Il2CppMethodPointer ___PollNextEvent_30;
	Il2CppMethodPointer ___PollNextEventWithPose_31;
	Il2CppMethodPointer ___GetEventTypeNameFromEnum_32;
	Il2CppMethodPointer ___GetHiddenAreaMesh_33;
	Il2CppMethodPointer ___GetControllerState_34;
	Il2CppMethodPointer ___GetControllerStateWithPose_35;
	Il2CppMethodPointer ___TriggerHapticPulse_36;
	Il2CppMethodPointer ___GetButtonIdNameFromEnum_37;
	Il2CppMethodPointer ___GetControllerAxisTypeNameFromEnum_38;
	Il2CppMethodPointer ___IsInputAvailable_39;
	Il2CppMethodPointer ___IsSteamVRDrawingControllers_40;
	Il2CppMethodPointer ___ShouldApplicationPause_41;
	Il2CppMethodPointer ___ShouldApplicationReduceRenderingWork_42;
	Il2CppMethodPointer ___DriverDebugRequest_43;
	Il2CppMethodPointer ___PerformFirmwareUpdate_44;
	Il2CppMethodPointer ___AcknowledgeQuit_Exiting_45;
	Il2CppMethodPointer ___AcknowledgeQuit_UserPrompt_46;
};
// Native definition for COM marshalling of Valve.VR.IVRSystem
struct IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshaled_com
{
	Il2CppMethodPointer ___GetRecommendedRenderTargetSize_0;
	Il2CppMethodPointer ___GetProjectionMatrix_1;
	Il2CppMethodPointer ___GetProjectionRaw_2;
	Il2CppMethodPointer ___ComputeDistortion_3;
	Il2CppMethodPointer ___GetEyeToHeadTransform_4;
	Il2CppMethodPointer ___GetTimeSinceLastVsync_5;
	Il2CppMethodPointer ___GetD3D9AdapterIndex_6;
	Il2CppMethodPointer ___GetDXGIOutputInfo_7;
	Il2CppMethodPointer ___GetOutputDevice_8;
	Il2CppMethodPointer ___IsDisplayOnDesktop_9;
	Il2CppMethodPointer ___SetDisplayVisibility_10;
	Il2CppMethodPointer ___GetDeviceToAbsoluteTrackingPose_11;
	Il2CppMethodPointer ___ResetSeatedZeroPose_12;
	Il2CppMethodPointer ___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13;
	Il2CppMethodPointer ___GetRawZeroPoseToStandingAbsoluteTrackingPose_14;
	Il2CppMethodPointer ___GetSortedTrackedDeviceIndicesOfClass_15;
	Il2CppMethodPointer ___GetTrackedDeviceActivityLevel_16;
	Il2CppMethodPointer ___ApplyTransform_17;
	Il2CppMethodPointer ___GetTrackedDeviceIndexForControllerRole_18;
	Il2CppMethodPointer ___GetControllerRoleForTrackedDeviceIndex_19;
	Il2CppMethodPointer ___GetTrackedDeviceClass_20;
	Il2CppMethodPointer ___IsTrackedDeviceConnected_21;
	Il2CppMethodPointer ___GetBoolTrackedDeviceProperty_22;
	Il2CppMethodPointer ___GetFloatTrackedDeviceProperty_23;
	Il2CppMethodPointer ___GetInt32TrackedDeviceProperty_24;
	Il2CppMethodPointer ___GetUint64TrackedDeviceProperty_25;
	Il2CppMethodPointer ___GetMatrix34TrackedDeviceProperty_26;
	Il2CppMethodPointer ___GetArrayTrackedDeviceProperty_27;
	Il2CppMethodPointer ___GetStringTrackedDeviceProperty_28;
	Il2CppMethodPointer ___GetPropErrorNameFromEnum_29;
	Il2CppMethodPointer ___PollNextEvent_30;
	Il2CppMethodPointer ___PollNextEventWithPose_31;
	Il2CppMethodPointer ___GetEventTypeNameFromEnum_32;
	Il2CppMethodPointer ___GetHiddenAreaMesh_33;
	Il2CppMethodPointer ___GetControllerState_34;
	Il2CppMethodPointer ___GetControllerStateWithPose_35;
	Il2CppMethodPointer ___TriggerHapticPulse_36;
	Il2CppMethodPointer ___GetButtonIdNameFromEnum_37;
	Il2CppMethodPointer ___GetControllerAxisTypeNameFromEnum_38;
	Il2CppMethodPointer ___IsInputAvailable_39;
	Il2CppMethodPointer ___IsSteamVRDrawingControllers_40;
	Il2CppMethodPointer ___ShouldApplicationPause_41;
	Il2CppMethodPointer ___ShouldApplicationReduceRenderingWork_42;
	Il2CppMethodPointer ___DriverDebugRequest_43;
	Il2CppMethodPointer ___PerformFirmwareUpdate_44;
	Il2CppMethodPointer ___AcknowledgeQuit_Exiting_45;
	Il2CppMethodPointer ___AcknowledgeQuit_UserPrompt_46;
};
#endif // IVRSYSTEM_T2954061947D0BD67FD306586BE5F4A8D7DBFC053_H
#ifndef INTERSECTIONMASKCIRCLE_T_TCD5731997063808F07FA42C3774ECE5DC9272725_H
#define INTERSECTIONMASKCIRCLE_T_TCD5731997063808F07FA42C3774ECE5DC9272725_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IntersectionMaskCircle_t
struct  IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725 
{
public:
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flCenterX
	float ___m_flCenterX_0;
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flCenterY
	float ___m_flCenterY_1;
	// System.Single Valve.VR.IntersectionMaskCircle_t::m_flRadius
	float ___m_flRadius_2;

public:
	inline static int32_t get_offset_of_m_flCenterX_0() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725, ___m_flCenterX_0)); }
	inline float get_m_flCenterX_0() const { return ___m_flCenterX_0; }
	inline float* get_address_of_m_flCenterX_0() { return &___m_flCenterX_0; }
	inline void set_m_flCenterX_0(float value)
	{
		___m_flCenterX_0 = value;
	}

	inline static int32_t get_offset_of_m_flCenterY_1() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725, ___m_flCenterY_1)); }
	inline float get_m_flCenterY_1() const { return ___m_flCenterY_1; }
	inline float* get_address_of_m_flCenterY_1() { return &___m_flCenterY_1; }
	inline void set_m_flCenterY_1(float value)
	{
		___m_flCenterY_1 = value;
	}

	inline static int32_t get_offset_of_m_flRadius_2() { return static_cast<int32_t>(offsetof(IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725, ___m_flRadius_2)); }
	inline float get_m_flRadius_2() const { return ___m_flRadius_2; }
	inline float* get_address_of_m_flRadius_2() { return &___m_flRadius_2; }
	inline void set_m_flRadius_2(float value)
	{
		___m_flRadius_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // INTERSECTIONMASKCIRCLE_T_TCD5731997063808F07FA42C3774ECE5DC9272725_H
#ifndef INTERSECTIONMASKRECTANGLE_T_T0644AB30C559134DA3794A92E18F2D71ABB948A8_H
#define INTERSECTIONMASKRECTANGLE_T_T0644AB30C559134DA3794A92E18F2D71ABB948A8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IntersectionMaskRectangle_t
struct  IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8 
{
public:
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flTopLeftX
	float ___m_flTopLeftX_0;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flTopLeftY
	float ___m_flTopLeftY_1;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flWidth
	float ___m_flWidth_2;
	// System.Single Valve.VR.IntersectionMaskRectangle_t::m_flHeight
	float ___m_flHeight_3;

public:
	inline static int32_t get_offset_of_m_flTopLeftX_0() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8, ___m_flTopLeftX_0)); }
	inline float get_m_flTopLeftX_0() const { return ___m_flTopLeftX_0; }
	inline float* get_address_of_m_flTopLeftX_0() { return &___m_flTopLeftX_0; }
	inline void set_m_flTopLeftX_0(float value)
	{
		___m_flTopLeftX_0 = value;
	}

	inline static int32_t get_offset_of_m_flTopLeftY_1() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8, ___m_flTopLeftY_1)); }
	inline float get_m_flTopLeftY_1() const { return ___m_flTopLeftY_1; }
	inline float* get_address_of_m_flTopLeftY_1() { return &___m_flTopLeftY_1; }
	inline void set_m_flTopLeftY_1(float value)
	{
		___m_flTopLeftY_1 = value;
	}

	inline static int32_t get_offset_of_m_flWidth_2() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8, ___m_flWidth_2)); }
	inline float get_m_flWidth_2() const { return ___m_flWidth_2; }
	inline float* get_address_of_m_flWidth_2() { return &___m_flWidth_2; }
	inline void set_m_flWidth_2(float value)
	{
		___m_flWidth_2 = value;
	}

	inline static int32_t get_offset_of_m_flHeight_3() { return static_cast<int32_t>(offsetof(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8, ___m_flHeight_3)); }
	inline float get_m_flHeight_3() const { return ___m_flHeight_3; }
	inline float* get_address_of_m_flHeight_3() { return &___m_flHeight_3; }
	inline void set_m_flHeight_3(float value)
	{
		___m_flHeight_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // INTERSECTIONMASKRECTANGLE_T_T0644AB30C559134DA3794A92E18F2D71ABB948A8_H
#ifndef RENDERMODEL_CONTROLLERMODE_STATE_T_TA85A8A7C2EF6B1255669B4886C78275230C68E74_H
#define RENDERMODEL_CONTROLLERMODE_STATE_T_TA85A8A7C2EF6B1255669B4886C78275230C68E74_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.RenderModel_ControllerMode_State_t
struct  RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 
{
public:
	// System.Boolean Valve.VR.RenderModel_ControllerMode_State_t::bScrollWheelVisible
	bool ___bScrollWheelVisible_0;

public:
	inline static int32_t get_offset_of_bScrollWheelVisible_0() { return static_cast<int32_t>(offsetof(RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74, ___bScrollWheelVisible_0)); }
	inline bool get_bScrollWheelVisible_0() const { return ___bScrollWheelVisible_0; }
	inline bool* get_address_of_bScrollWheelVisible_0() { return &___bScrollWheelVisible_0; }
	inline void set_bScrollWheelVisible_0(bool value)
	{
		___bScrollWheelVisible_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // RENDERMODEL_CONTROLLERMODE_STATE_T_TA85A8A7C2EF6B1255669B4886C78275230C68E74_H
#ifndef VRCONTROLLERAXIS_T_TCD3BB32557ACD86666C7DE15C60245C505C48CE0_H
#define VRCONTROLLERAXIS_T_TCD3BB32557ACD86666C7DE15C60245C505C48CE0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VRControllerAxis_t
struct  VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0 
{
public:
	// System.Single Valve.VR.VRControllerAxis_t::x
	float ___x_0;
	// System.Single Valve.VR.VRControllerAxis_t::y
	float ___y_1;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VRCONTROLLERAXIS_T_TCD3BB32557ACD86666C7DE15C60245C505C48CE0_H
#ifndef VREVENT_APPLICATIONLAUNCH_T_T902F35797A687AA43E57703E160C252BE0877DB8_H
#define VREVENT_APPLICATIONLAUNCH_T_T902F35797A687AA43E57703E160C252BE0877DB8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_ApplicationLaunch_t
struct  VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8 
{
public:
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_ApplicationLaunch_t::unArgsHandle
	uint32_t ___unArgsHandle_1;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_unArgsHandle_1() { return static_cast<int32_t>(offsetof(VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8, ___unArgsHandle_1)); }
	inline uint32_t get_unArgsHandle_1() const { return ___unArgsHandle_1; }
	inline uint32_t* get_address_of_unArgsHandle_1() { return &___unArgsHandle_1; }
	inline void set_unArgsHandle_1(uint32_t value)
	{
		___unArgsHandle_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_APPLICATIONLAUNCH_T_T902F35797A687AA43E57703E160C252BE0877DB8_H
#ifndef VREVENT_CHAPERONE_T_T1236967FA48384C188CF6E49C5A991AACC5DF59A_H
#define VREVENT_CHAPERONE_T_T1236967FA48384C188CF6E49C5A991AACC5DF59A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Chaperone_t
struct  VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A 
{
public:
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nPreviousUniverse
	uint64_t ___m_nPreviousUniverse_0;
	// System.UInt64 Valve.VR.VREvent_Chaperone_t::m_nCurrentUniverse
	uint64_t ___m_nCurrentUniverse_1;

public:
	inline static int32_t get_offset_of_m_nPreviousUniverse_0() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A, ___m_nPreviousUniverse_0)); }
	inline uint64_t get_m_nPreviousUniverse_0() const { return ___m_nPreviousUniverse_0; }
	inline uint64_t* get_address_of_m_nPreviousUniverse_0() { return &___m_nPreviousUniverse_0; }
	inline void set_m_nPreviousUniverse_0(uint64_t value)
	{
		___m_nPreviousUniverse_0 = value;
	}

	inline static int32_t get_offset_of_m_nCurrentUniverse_1() { return static_cast<int32_t>(offsetof(VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A, ___m_nCurrentUniverse_1)); }
	inline uint64_t get_m_nCurrentUniverse_1() const { return ___m_nCurrentUniverse_1; }
	inline uint64_t* get_address_of_m_nCurrentUniverse_1() { return &___m_nCurrentUniverse_1; }
	inline void set_m_nCurrentUniverse_1(uint64_t value)
	{
		___m_nCurrentUniverse_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_CHAPERONE_T_T1236967FA48384C188CF6E49C5A991AACC5DF59A_H
#ifndef VREVENT_CONTROLLER_T_TB1FFD48DCBC52E589F9BD9987063A6228CDD21D8_H
#define VREVENT_CONTROLLER_T_TB1FFD48DCBC52E589F9BD9987063A6228CDD21D8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Controller_t
struct  VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8 
{
public:
	// System.UInt32 Valve.VR.VREvent_Controller_t::button
	uint32_t ___button_0;

public:
	inline static int32_t get_offset_of_button_0() { return static_cast<int32_t>(offsetof(VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8, ___button_0)); }
	inline uint32_t get_button_0() const { return ___button_0; }
	inline uint32_t* get_address_of_button_0() { return &___button_0; }
	inline void set_button_0(uint32_t value)
	{
		___button_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_CONTROLLER_T_TB1FFD48DCBC52E589F9BD9987063A6228CDD21D8_H
#ifndef VREVENT_EDITINGCAMERASURFACE_T_T017AA24A092F59E0A165CE5F1E76347CB00C2FD6_H
#define VREVENT_EDITINGCAMERASURFACE_T_T017AA24A092F59E0A165CE5F1E76347CB00C2FD6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_EditingCameraSurface_t
struct  VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6 
{
public:
	// System.UInt64 Valve.VR.VREvent_EditingCameraSurface_t::overlayHandle
	uint64_t ___overlayHandle_0;
	// System.UInt32 Valve.VR.VREvent_EditingCameraSurface_t::nVisualMode
	uint32_t ___nVisualMode_1;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}

	inline static int32_t get_offset_of_nVisualMode_1() { return static_cast<int32_t>(offsetof(VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6, ___nVisualMode_1)); }
	inline uint32_t get_nVisualMode_1() const { return ___nVisualMode_1; }
	inline uint32_t* get_address_of_nVisualMode_1() { return &___nVisualMode_1; }
	inline void set_nVisualMode_1(uint32_t value)
	{
		___nVisualMode_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_EDITINGCAMERASURFACE_T_T017AA24A092F59E0A165CE5F1E76347CB00C2FD6_H
#ifndef VREVENT_HAPTICVIBRATION_T_T786CA5B3A8C34B778835ADDDEBB62831C2C141CF_H
#define VREVENT_HAPTICVIBRATION_T_T786CA5B3A8C34B778835ADDDEBB62831C2C141CF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_HapticVibration_t
struct  VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF 
{
public:
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::containerHandle
	uint64_t ___containerHandle_0;
	// System.UInt64 Valve.VR.VREvent_HapticVibration_t::componentHandle
	uint64_t ___componentHandle_1;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fDurationSeconds
	float ___fDurationSeconds_2;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fFrequency
	float ___fFrequency_3;
	// System.Single Valve.VR.VREvent_HapticVibration_t::fAmplitude
	float ___fAmplitude_4;

public:
	inline static int32_t get_offset_of_containerHandle_0() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___containerHandle_0)); }
	inline uint64_t get_containerHandle_0() const { return ___containerHandle_0; }
	inline uint64_t* get_address_of_containerHandle_0() { return &___containerHandle_0; }
	inline void set_containerHandle_0(uint64_t value)
	{
		___containerHandle_0 = value;
	}

	inline static int32_t get_offset_of_componentHandle_1() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___componentHandle_1)); }
	inline uint64_t get_componentHandle_1() const { return ___componentHandle_1; }
	inline uint64_t* get_address_of_componentHandle_1() { return &___componentHandle_1; }
	inline void set_componentHandle_1(uint64_t value)
	{
		___componentHandle_1 = value;
	}

	inline static int32_t get_offset_of_fDurationSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___fDurationSeconds_2)); }
	inline float get_fDurationSeconds_2() const { return ___fDurationSeconds_2; }
	inline float* get_address_of_fDurationSeconds_2() { return &___fDurationSeconds_2; }
	inline void set_fDurationSeconds_2(float value)
	{
		___fDurationSeconds_2 = value;
	}

	inline static int32_t get_offset_of_fFrequency_3() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___fFrequency_3)); }
	inline float get_fFrequency_3() const { return ___fFrequency_3; }
	inline float* get_address_of_fFrequency_3() { return &___fFrequency_3; }
	inline void set_fFrequency_3(float value)
	{
		___fFrequency_3 = value;
	}

	inline static int32_t get_offset_of_fAmplitude_4() { return static_cast<int32_t>(offsetof(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF, ___fAmplitude_4)); }
	inline float get_fAmplitude_4() const { return ___fAmplitude_4; }
	inline float* get_address_of_fAmplitude_4() { return &___fAmplitude_4; }
	inline void set_fAmplitude_4(float value)
	{
		___fAmplitude_4 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_HAPTICVIBRATION_T_T786CA5B3A8C34B778835ADDDEBB62831C2C141CF_H
#ifndef VREVENT_IPD_T_TAFFEBE073442A4A1326C4464CF1A92C030C22C22_H
#define VREVENT_IPD_T_TAFFEBE073442A4A1326C4464CF1A92C030C22C22_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Ipd_t
struct  VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22 
{
public:
	// System.Single Valve.VR.VREvent_Ipd_t::ipdMeters
	float ___ipdMeters_0;

public:
	inline static int32_t get_offset_of_ipdMeters_0() { return static_cast<int32_t>(offsetof(VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22, ___ipdMeters_0)); }
	inline float get_ipdMeters_0() const { return ___ipdMeters_0; }
	inline float* get_address_of_ipdMeters_0() { return &___ipdMeters_0; }
	inline void set_ipdMeters_0(float value)
	{
		___ipdMeters_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_IPD_T_TAFFEBE073442A4A1326C4464CF1A92C030C22C22_H
#ifndef VREVENT_KEYBOARD_T_T1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE_H
#define VREVENT_KEYBOARD_T_T1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Keyboard_t
struct  VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE 
{
public:
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput0
	uint8_t ___cNewInput0_0;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput1
	uint8_t ___cNewInput1_1;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput2
	uint8_t ___cNewInput2_2;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput3
	uint8_t ___cNewInput3_3;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput4
	uint8_t ___cNewInput4_4;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput5
	uint8_t ___cNewInput5_5;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput6
	uint8_t ___cNewInput6_6;
	// System.Byte Valve.VR.VREvent_Keyboard_t::cNewInput7
	uint8_t ___cNewInput7_7;
	// System.UInt64 Valve.VR.VREvent_Keyboard_t::uUserValue
	uint64_t ___uUserValue_8;

public:
	inline static int32_t get_offset_of_cNewInput0_0() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput0_0)); }
	inline uint8_t get_cNewInput0_0() const { return ___cNewInput0_0; }
	inline uint8_t* get_address_of_cNewInput0_0() { return &___cNewInput0_0; }
	inline void set_cNewInput0_0(uint8_t value)
	{
		___cNewInput0_0 = value;
	}

	inline static int32_t get_offset_of_cNewInput1_1() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput1_1)); }
	inline uint8_t get_cNewInput1_1() const { return ___cNewInput1_1; }
	inline uint8_t* get_address_of_cNewInput1_1() { return &___cNewInput1_1; }
	inline void set_cNewInput1_1(uint8_t value)
	{
		___cNewInput1_1 = value;
	}

	inline static int32_t get_offset_of_cNewInput2_2() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput2_2)); }
	inline uint8_t get_cNewInput2_2() const { return ___cNewInput2_2; }
	inline uint8_t* get_address_of_cNewInput2_2() { return &___cNewInput2_2; }
	inline void set_cNewInput2_2(uint8_t value)
	{
		___cNewInput2_2 = value;
	}

	inline static int32_t get_offset_of_cNewInput3_3() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput3_3)); }
	inline uint8_t get_cNewInput3_3() const { return ___cNewInput3_3; }
	inline uint8_t* get_address_of_cNewInput3_3() { return &___cNewInput3_3; }
	inline void set_cNewInput3_3(uint8_t value)
	{
		___cNewInput3_3 = value;
	}

	inline static int32_t get_offset_of_cNewInput4_4() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput4_4)); }
	inline uint8_t get_cNewInput4_4() const { return ___cNewInput4_4; }
	inline uint8_t* get_address_of_cNewInput4_4() { return &___cNewInput4_4; }
	inline void set_cNewInput4_4(uint8_t value)
	{
		___cNewInput4_4 = value;
	}

	inline static int32_t get_offset_of_cNewInput5_5() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput5_5)); }
	inline uint8_t get_cNewInput5_5() const { return ___cNewInput5_5; }
	inline uint8_t* get_address_of_cNewInput5_5() { return &___cNewInput5_5; }
	inline void set_cNewInput5_5(uint8_t value)
	{
		___cNewInput5_5 = value;
	}

	inline static int32_t get_offset_of_cNewInput6_6() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput6_6)); }
	inline uint8_t get_cNewInput6_6() const { return ___cNewInput6_6; }
	inline uint8_t* get_address_of_cNewInput6_6() { return &___cNewInput6_6; }
	inline void set_cNewInput6_6(uint8_t value)
	{
		___cNewInput6_6 = value;
	}

	inline static int32_t get_offset_of_cNewInput7_7() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___cNewInput7_7)); }
	inline uint8_t get_cNewInput7_7() const { return ___cNewInput7_7; }
	inline uint8_t* get_address_of_cNewInput7_7() { return &___cNewInput7_7; }
	inline void set_cNewInput7_7(uint8_t value)
	{
		___cNewInput7_7 = value;
	}

	inline static int32_t get_offset_of_uUserValue_8() { return static_cast<int32_t>(offsetof(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE, ___uUserValue_8)); }
	inline uint64_t get_uUserValue_8() const { return ___uUserValue_8; }
	inline uint64_t* get_address_of_uUserValue_8() { return &___uUserValue_8; }
	inline void set_uUserValue_8(uint64_t value)
	{
		___uUserValue_8 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_KEYBOARD_T_T1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE_H
#ifndef VREVENT_MESSAGEOVERLAY_T_TD7AE309A410FAFD42C1683CE33E0885E92E296BF_H
#define VREVENT_MESSAGEOVERLAY_T_TD7AE309A410FAFD42C1683CE33E0885E92E296BF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_MessageOverlay_t
struct  VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF 
{
public:
	// System.UInt32 Valve.VR.VREvent_MessageOverlay_t::unVRMessageOverlayResponse
	uint32_t ___unVRMessageOverlayResponse_0;

public:
	inline static int32_t get_offset_of_unVRMessageOverlayResponse_0() { return static_cast<int32_t>(offsetof(VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF, ___unVRMessageOverlayResponse_0)); }
	inline uint32_t get_unVRMessageOverlayResponse_0() const { return ___unVRMessageOverlayResponse_0; }
	inline uint32_t* get_address_of_unVRMessageOverlayResponse_0() { return &___unVRMessageOverlayResponse_0; }
	inline void set_unVRMessageOverlayResponse_0(uint32_t value)
	{
		___unVRMessageOverlayResponse_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_MESSAGEOVERLAY_T_TD7AE309A410FAFD42C1683CE33E0885E92E296BF_H
#ifndef VREVENT_MOUSE_T_TE88D68F4C4CB957B62099C82C7AED290AA0FF267_H
#define VREVENT_MOUSE_T_TE88D68F4C4CB957B62099C82C7AED290AA0FF267_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Mouse_t
struct  VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267 
{
public:
	// System.Single Valve.VR.VREvent_Mouse_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_Mouse_t::y
	float ___y_1;
	// System.UInt32 Valve.VR.VREvent_Mouse_t::button
	uint32_t ___button_2;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_button_2() { return static_cast<int32_t>(offsetof(VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267, ___button_2)); }
	inline uint32_t get_button_2() const { return ___button_2; }
	inline uint32_t* get_address_of_button_2() { return &___button_2; }
	inline void set_button_2(uint32_t value)
	{
		___button_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_MOUSE_T_TE88D68F4C4CB957B62099C82C7AED290AA0FF267_H
#ifndef VREVENT_NOTIFICATION_T_TDBB23936BEDFBB6ED34830252A310DB5B2FE23A9_H
#define VREVENT_NOTIFICATION_T_TDBB23936BEDFBB6ED34830252A310DB5B2FE23A9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Notification_t
struct  VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9 
{
public:
	// System.UInt64 Valve.VR.VREvent_Notification_t::ulUserValue
	uint64_t ___ulUserValue_0;
	// System.UInt32 Valve.VR.VREvent_Notification_t::notificationId
	uint32_t ___notificationId_1;

public:
	inline static int32_t get_offset_of_ulUserValue_0() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9, ___ulUserValue_0)); }
	inline uint64_t get_ulUserValue_0() const { return ___ulUserValue_0; }
	inline uint64_t* get_address_of_ulUserValue_0() { return &___ulUserValue_0; }
	inline void set_ulUserValue_0(uint64_t value)
	{
		___ulUserValue_0 = value;
	}

	inline static int32_t get_offset_of_notificationId_1() { return static_cast<int32_t>(offsetof(VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9, ___notificationId_1)); }
	inline uint32_t get_notificationId_1() const { return ___notificationId_1; }
	inline uint32_t* get_address_of_notificationId_1() { return &___notificationId_1; }
	inline void set_notificationId_1(uint32_t value)
	{
		___notificationId_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_NOTIFICATION_T_TDBB23936BEDFBB6ED34830252A310DB5B2FE23A9_H
#ifndef VREVENT_OVERLAY_T_T909148C3CA59C47163B718FFE65700E4F9680900_H
#define VREVENT_OVERLAY_T_T909148C3CA59C47163B718FFE65700E4F9680900_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Overlay_t
struct  VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900 
{
public:
	// System.UInt64 Valve.VR.VREvent_Overlay_t::overlayHandle
	uint64_t ___overlayHandle_0;

public:
	inline static int32_t get_offset_of_overlayHandle_0() { return static_cast<int32_t>(offsetof(VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900, ___overlayHandle_0)); }
	inline uint64_t get_overlayHandle_0() const { return ___overlayHandle_0; }
	inline uint64_t* get_address_of_overlayHandle_0() { return &___overlayHandle_0; }
	inline void set_overlayHandle_0(uint64_t value)
	{
		___overlayHandle_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_OVERLAY_T_T909148C3CA59C47163B718FFE65700E4F9680900_H
#ifndef VREVENT_PERFORMANCETEST_T_T1E9209C87C10EB6362D3123FF0182CFE4939AD9F_H
#define VREVENT_PERFORMANCETEST_T_T1E9209C87C10EB6362D3123FF0182CFE4939AD9F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_PerformanceTest_t
struct  VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F 
{
public:
	// System.UInt32 Valve.VR.VREvent_PerformanceTest_t::m_nFidelityLevel
	uint32_t ___m_nFidelityLevel_0;

public:
	inline static int32_t get_offset_of_m_nFidelityLevel_0() { return static_cast<int32_t>(offsetof(VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F, ___m_nFidelityLevel_0)); }
	inline uint32_t get_m_nFidelityLevel_0() const { return ___m_nFidelityLevel_0; }
	inline uint32_t* get_address_of_m_nFidelityLevel_0() { return &___m_nFidelityLevel_0; }
	inline void set_m_nFidelityLevel_0(uint32_t value)
	{
		___m_nFidelityLevel_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_PERFORMANCETEST_T_T1E9209C87C10EB6362D3123FF0182CFE4939AD9F_H
#ifndef VREVENT_PROCESS_T_T3D2B492B7F7042AEB6072913B305BE5597343E10_H
#define VREVENT_PROCESS_T_T3D2B492B7F7042AEB6072913B305BE5597343E10_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Process_t
struct  VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10 
{
public:
	// System.UInt32 Valve.VR.VREvent_Process_t::pid
	uint32_t ___pid_0;
	// System.UInt32 Valve.VR.VREvent_Process_t::oldPid
	uint32_t ___oldPid_1;
	// System.Boolean Valve.VR.VREvent_Process_t::bForced
	bool ___bForced_2;

public:
	inline static int32_t get_offset_of_pid_0() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10, ___pid_0)); }
	inline uint32_t get_pid_0() const { return ___pid_0; }
	inline uint32_t* get_address_of_pid_0() { return &___pid_0; }
	inline void set_pid_0(uint32_t value)
	{
		___pid_0 = value;
	}

	inline static int32_t get_offset_of_oldPid_1() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10, ___oldPid_1)); }
	inline uint32_t get_oldPid_1() const { return ___oldPid_1; }
	inline uint32_t* get_address_of_oldPid_1() { return &___oldPid_1; }
	inline void set_oldPid_1(uint32_t value)
	{
		___oldPid_1 = value;
	}

	inline static int32_t get_offset_of_bForced_2() { return static_cast<int32_t>(offsetof(VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10, ___bForced_2)); }
	inline bool get_bForced_2() const { return ___bForced_2; }
	inline bool* get_address_of_bForced_2() { return &___bForced_2; }
	inline void set_bForced_2(bool value)
	{
		___bForced_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_PROCESS_T_T3D2B492B7F7042AEB6072913B305BE5597343E10_H
#ifndef VREVENT_RESERVED_T_T42EADCBC910F8ECC29C85F4E2376E34677EDC23F_H
#define VREVENT_RESERVED_T_T42EADCBC910F8ECC29C85F4E2376E34677EDC23F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Reserved_t
struct  VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F 
{
public:
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved0
	uint64_t ___reserved0_0;
	// System.UInt64 Valve.VR.VREvent_Reserved_t::reserved1
	uint64_t ___reserved1_1;

public:
	inline static int32_t get_offset_of_reserved0_0() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F, ___reserved0_0)); }
	inline uint64_t get_reserved0_0() const { return ___reserved0_0; }
	inline uint64_t* get_address_of_reserved0_0() { return &___reserved0_0; }
	inline void set_reserved0_0(uint64_t value)
	{
		___reserved0_0 = value;
	}

	inline static int32_t get_offset_of_reserved1_1() { return static_cast<int32_t>(offsetof(VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F, ___reserved1_1)); }
	inline uint64_t get_reserved1_1() const { return ___reserved1_1; }
	inline uint64_t* get_address_of_reserved1_1() { return &___reserved1_1; }
	inline void set_reserved1_1(uint64_t value)
	{
		___reserved1_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_RESERVED_T_T42EADCBC910F8ECC29C85F4E2376E34677EDC23F_H
#ifndef VREVENT_SCREENSHOTPROGRESS_T_T72E093E61A1D8FE405A54C66387501EE3506601D_H
#define VREVENT_SCREENSHOTPROGRESS_T_T72E093E61A1D8FE405A54C66387501EE3506601D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_ScreenshotProgress_t
struct  VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D 
{
public:
	// System.Single Valve.VR.VREvent_ScreenshotProgress_t::progress
	float ___progress_0;

public:
	inline static int32_t get_offset_of_progress_0() { return static_cast<int32_t>(offsetof(VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D, ___progress_0)); }
	inline float get_progress_0() const { return ___progress_0; }
	inline float* get_address_of_progress_0() { return &___progress_0; }
	inline void set_progress_0(float value)
	{
		___progress_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_SCREENSHOTPROGRESS_T_T72E093E61A1D8FE405A54C66387501EE3506601D_H
#ifndef VREVENT_SCREENSHOT_T_TBC0F7EE971E9E1DEDD665F664010039718459B11_H
#define VREVENT_SCREENSHOT_T_TBC0F7EE971E9E1DEDD665F664010039718459B11_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Screenshot_t
struct  VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11 
{
public:
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::handle
	uint32_t ___handle_0;
	// System.UInt32 Valve.VR.VREvent_Screenshot_t::type
	uint32_t ___type_1;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11, ___handle_0)); }
	inline uint32_t get_handle_0() const { return ___handle_0; }
	inline uint32_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(uint32_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_type_1() { return static_cast<int32_t>(offsetof(VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11, ___type_1)); }
	inline uint32_t get_type_1() const { return ___type_1; }
	inline uint32_t* get_address_of_type_1() { return &___type_1; }
	inline void set_type_1(uint32_t value)
	{
		___type_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_SCREENSHOT_T_TBC0F7EE971E9E1DEDD665F664010039718459B11_H
#ifndef VREVENT_SCROLL_T_T491F52F7AFAAE972F9F49DAABDB2233A48E33CA5_H
#define VREVENT_SCROLL_T_T491F52F7AFAAE972F9F49DAABDB2233A48E33CA5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Scroll_t
struct  VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5 
{
public:
	// System.Single Valve.VR.VREvent_Scroll_t::xdelta
	float ___xdelta_0;
	// System.Single Valve.VR.VREvent_Scroll_t::ydelta
	float ___ydelta_1;
	// System.UInt32 Valve.VR.VREvent_Scroll_t::repeatCount
	uint32_t ___repeatCount_2;

public:
	inline static int32_t get_offset_of_xdelta_0() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5, ___xdelta_0)); }
	inline float get_xdelta_0() const { return ___xdelta_0; }
	inline float* get_address_of_xdelta_0() { return &___xdelta_0; }
	inline void set_xdelta_0(float value)
	{
		___xdelta_0 = value;
	}

	inline static int32_t get_offset_of_ydelta_1() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5, ___ydelta_1)); }
	inline float get_ydelta_1() const { return ___ydelta_1; }
	inline float* get_address_of_ydelta_1() { return &___ydelta_1; }
	inline void set_ydelta_1(float value)
	{
		___ydelta_1 = value;
	}

	inline static int32_t get_offset_of_repeatCount_2() { return static_cast<int32_t>(offsetof(VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5, ___repeatCount_2)); }
	inline uint32_t get_repeatCount_2() const { return ___repeatCount_2; }
	inline uint32_t* get_address_of_repeatCount_2() { return &___repeatCount_2; }
	inline void set_repeatCount_2(uint32_t value)
	{
		___repeatCount_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_SCROLL_T_T491F52F7AFAAE972F9F49DAABDB2233A48E33CA5_H
#ifndef VREVENT_SEATEDZEROPOSERESET_T_T2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4_H
#define VREVENT_SEATEDZEROPOSERESET_T_T2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_SeatedZeroPoseReset_t
struct  VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4 
{
public:
	// System.Boolean Valve.VR.VREvent_SeatedZeroPoseReset_t::bResetBySystemMenu
	bool ___bResetBySystemMenu_0;

public:
	inline static int32_t get_offset_of_bResetBySystemMenu_0() { return static_cast<int32_t>(offsetof(VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4, ___bResetBySystemMenu_0)); }
	inline bool get_bResetBySystemMenu_0() const { return ___bResetBySystemMenu_0; }
	inline bool* get_address_of_bResetBySystemMenu_0() { return &___bResetBySystemMenu_0; }
	inline void set_bResetBySystemMenu_0(bool value)
	{
		___bResetBySystemMenu_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_SEATEDZEROPOSERESET_T_T2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4_H
#ifndef VREVENT_STATUS_T_T415E997F9090A3C09A62FBF77303E4012CC8D392_H
#define VREVENT_STATUS_T_T415E997F9090A3C09A62FBF77303E4012CC8D392_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Status_t
struct  VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392 
{
public:
	// System.UInt32 Valve.VR.VREvent_Status_t::statusState
	uint32_t ___statusState_0;

public:
	inline static int32_t get_offset_of_statusState_0() { return static_cast<int32_t>(offsetof(VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392, ___statusState_0)); }
	inline uint32_t get_statusState_0() const { return ___statusState_0; }
	inline uint32_t* get_address_of_statusState_0() { return &___statusState_0; }
	inline void set_statusState_0(uint32_t value)
	{
		___statusState_0 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_STATUS_T_T415E997F9090A3C09A62FBF77303E4012CC8D392_H
#ifndef VREVENT_TOUCHPADMOVE_T_T66AC6500BD6C5B370506ED04AADE1C1C5EF98B18_H
#define VREVENT_TOUCHPADMOVE_T_T66AC6500BD6C5B370506ED04AADE1C1C5EF98B18_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_TouchPadMove_t
struct  VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18 
{
public:
	// System.Boolean Valve.VR.VREvent_TouchPadMove_t::bFingerDown
	bool ___bFingerDown_0;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::flSecondsFingerDown
	float ___flSecondsFingerDown_1;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXFirst
	float ___fValueXFirst_2;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYFirst
	float ___fValueYFirst_3;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueXRaw
	float ___fValueXRaw_4;
	// System.Single Valve.VR.VREvent_TouchPadMove_t::fValueYRaw
	float ___fValueYRaw_5;

public:
	inline static int32_t get_offset_of_bFingerDown_0() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___bFingerDown_0)); }
	inline bool get_bFingerDown_0() const { return ___bFingerDown_0; }
	inline bool* get_address_of_bFingerDown_0() { return &___bFingerDown_0; }
	inline void set_bFingerDown_0(bool value)
	{
		___bFingerDown_0 = value;
	}

	inline static int32_t get_offset_of_flSecondsFingerDown_1() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___flSecondsFingerDown_1)); }
	inline float get_flSecondsFingerDown_1() const { return ___flSecondsFingerDown_1; }
	inline float* get_address_of_flSecondsFingerDown_1() { return &___flSecondsFingerDown_1; }
	inline void set_flSecondsFingerDown_1(float value)
	{
		___flSecondsFingerDown_1 = value;
	}

	inline static int32_t get_offset_of_fValueXFirst_2() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___fValueXFirst_2)); }
	inline float get_fValueXFirst_2() const { return ___fValueXFirst_2; }
	inline float* get_address_of_fValueXFirst_2() { return &___fValueXFirst_2; }
	inline void set_fValueXFirst_2(float value)
	{
		___fValueXFirst_2 = value;
	}

	inline static int32_t get_offset_of_fValueYFirst_3() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___fValueYFirst_3)); }
	inline float get_fValueYFirst_3() const { return ___fValueYFirst_3; }
	inline float* get_address_of_fValueYFirst_3() { return &___fValueYFirst_3; }
	inline void set_fValueYFirst_3(float value)
	{
		___fValueYFirst_3 = value;
	}

	inline static int32_t get_offset_of_fValueXRaw_4() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___fValueXRaw_4)); }
	inline float get_fValueXRaw_4() const { return ___fValueXRaw_4; }
	inline float* get_address_of_fValueXRaw_4() { return &___fValueXRaw_4; }
	inline void set_fValueXRaw_4(float value)
	{
		___fValueXRaw_4 = value;
	}

	inline static int32_t get_offset_of_fValueYRaw_5() { return static_cast<int32_t>(offsetof(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18, ___fValueYRaw_5)); }
	inline float get_fValueYRaw_5() const { return ___fValueYRaw_5; }
	inline float* get_address_of_fValueYRaw_5() { return &___fValueYRaw_5; }
	inline void set_fValueYRaw_5(float value)
	{
		___fValueYRaw_5 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_TOUCHPADMOVE_T_T66AC6500BD6C5B370506ED04AADE1C1C5EF98B18_H
#ifndef VRTEXTUREBOUNDS_T_TA84A0B9DA2ED7706E784D3205C9D029C64EB2813_H
#define VRTEXTUREBOUNDS_T_TA84A0B9DA2ED7706E784D3205C9D029C64EB2813_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VRTextureBounds_t
struct  VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 
{
public:
	// System.Single Valve.VR.VRTextureBounds_t::uMin
	float ___uMin_0;
	// System.Single Valve.VR.VRTextureBounds_t::vMin
	float ___vMin_1;
	// System.Single Valve.VR.VRTextureBounds_t::uMax
	float ___uMax_2;
	// System.Single Valve.VR.VRTextureBounds_t::vMax
	float ___vMax_3;

public:
	inline static int32_t get_offset_of_uMin_0() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813, ___uMin_0)); }
	inline float get_uMin_0() const { return ___uMin_0; }
	inline float* get_address_of_uMin_0() { return &___uMin_0; }
	inline void set_uMin_0(float value)
	{
		___uMin_0 = value;
	}

	inline static int32_t get_offset_of_vMin_1() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813, ___vMin_1)); }
	inline float get_vMin_1() const { return ___vMin_1; }
	inline float* get_address_of_vMin_1() { return &___vMin_1; }
	inline void set_vMin_1(float value)
	{
		___vMin_1 = value;
	}

	inline static int32_t get_offset_of_uMax_2() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813, ___uMax_2)); }
	inline float get_uMax_2() const { return ___uMax_2; }
	inline float* get_address_of_uMax_2() { return &___uMax_2; }
	inline void set_uMax_2(float value)
	{
		___uMax_2 = value;
	}

	inline static int32_t get_offset_of_vMax_3() { return static_cast<int32_t>(offsetof(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813, ___vMax_3)); }
	inline float get_vMax_3() const { return ___vMax_3; }
	inline float* get_address_of_vMax_3() { return &___vMax_3; }
	inline void set_vMax_3(float value)
	{
		___vMax_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VRTEXTUREBOUNDS_T_TA84A0B9DA2ED7706E784D3205C9D029C64EB2813_H
#ifndef DELEGATE_T_H
#define DELEGATE_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.Delegate
struct  Delegate_t  : public RuntimeObject
{
public:
	// System.IntPtr System.Delegate::method_ptr
	Il2CppMethodPointer ___method_ptr_0;
	// System.IntPtr System.Delegate::invoke_impl
	intptr_t ___invoke_impl_1;
	// System.Object System.Delegate::m_target
	RuntimeObject * ___m_target_2;
	// System.IntPtr System.Delegate::method
	intptr_t ___method_3;
	// System.IntPtr System.Delegate::delegate_trampoline
	intptr_t ___delegate_trampoline_4;
	// System.IntPtr System.Delegate::extra_arg
	intptr_t ___extra_arg_5;
	// System.IntPtr System.Delegate::method_code
	intptr_t ___method_code_6;
	// System.Reflection.MethodInfo System.Delegate::method_info
	MethodInfo_t * ___method_info_7;
	// System.Reflection.MethodInfo System.Delegate::original_method_info
	MethodInfo_t * ___original_method_info_8;
	// System.DelegateData System.Delegate::data
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	// System.Boolean System.Delegate::method_is_virtual
	bool ___method_is_virtual_10;

public:
	inline static int32_t get_offset_of_method_ptr_0() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_ptr_0)); }
	inline Il2CppMethodPointer get_method_ptr_0() const { return ___method_ptr_0; }
	inline Il2CppMethodPointer* get_address_of_method_ptr_0() { return &___method_ptr_0; }
	inline void set_method_ptr_0(Il2CppMethodPointer value)
	{
		___method_ptr_0 = value;
	}

	inline static int32_t get_offset_of_invoke_impl_1() { return static_cast<int32_t>(offsetof(Delegate_t, ___invoke_impl_1)); }
	inline intptr_t get_invoke_impl_1() const { return ___invoke_impl_1; }
	inline intptr_t* get_address_of_invoke_impl_1() { return &___invoke_impl_1; }
	inline void set_invoke_impl_1(intptr_t value)
	{
		___invoke_impl_1 = value;
	}

	inline static int32_t get_offset_of_m_target_2() { return static_cast<int32_t>(offsetof(Delegate_t, ___m_target_2)); }
	inline RuntimeObject * get_m_target_2() const { return ___m_target_2; }
	inline RuntimeObject ** get_address_of_m_target_2() { return &___m_target_2; }
	inline void set_m_target_2(RuntimeObject * value)
	{
		___m_target_2 = value;
		Il2CppCodeGenWriteBarrier((&___m_target_2), value);
	}

	inline static int32_t get_offset_of_method_3() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_3)); }
	inline intptr_t get_method_3() const { return ___method_3; }
	inline intptr_t* get_address_of_method_3() { return &___method_3; }
	inline void set_method_3(intptr_t value)
	{
		___method_3 = value;
	}

	inline static int32_t get_offset_of_delegate_trampoline_4() { return static_cast<int32_t>(offsetof(Delegate_t, ___delegate_trampoline_4)); }
	inline intptr_t get_delegate_trampoline_4() const { return ___delegate_trampoline_4; }
	inline intptr_t* get_address_of_delegate_trampoline_4() { return &___delegate_trampoline_4; }
	inline void set_delegate_trampoline_4(intptr_t value)
	{
		___delegate_trampoline_4 = value;
	}

	inline static int32_t get_offset_of_extra_arg_5() { return static_cast<int32_t>(offsetof(Delegate_t, ___extra_arg_5)); }
	inline intptr_t get_extra_arg_5() const { return ___extra_arg_5; }
	inline intptr_t* get_address_of_extra_arg_5() { return &___extra_arg_5; }
	inline void set_extra_arg_5(intptr_t value)
	{
		___extra_arg_5 = value;
	}

	inline static int32_t get_offset_of_method_code_6() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_code_6)); }
	inline intptr_t get_method_code_6() const { return ___method_code_6; }
	inline intptr_t* get_address_of_method_code_6() { return &___method_code_6; }
	inline void set_method_code_6(intptr_t value)
	{
		___method_code_6 = value;
	}

	inline static int32_t get_offset_of_method_info_7() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_info_7)); }
	inline MethodInfo_t * get_method_info_7() const { return ___method_info_7; }
	inline MethodInfo_t ** get_address_of_method_info_7() { return &___method_info_7; }
	inline void set_method_info_7(MethodInfo_t * value)
	{
		___method_info_7 = value;
		Il2CppCodeGenWriteBarrier((&___method_info_7), value);
	}

	inline static int32_t get_offset_of_original_method_info_8() { return static_cast<int32_t>(offsetof(Delegate_t, ___original_method_info_8)); }
	inline MethodInfo_t * get_original_method_info_8() const { return ___original_method_info_8; }
	inline MethodInfo_t ** get_address_of_original_method_info_8() { return &___original_method_info_8; }
	inline void set_original_method_info_8(MethodInfo_t * value)
	{
		___original_method_info_8 = value;
		Il2CppCodeGenWriteBarrier((&___original_method_info_8), value);
	}

	inline static int32_t get_offset_of_data_9() { return static_cast<int32_t>(offsetof(Delegate_t, ___data_9)); }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * get_data_9() const { return ___data_9; }
	inline DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE ** get_address_of_data_9() { return &___data_9; }
	inline void set_data_9(DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * value)
	{
		___data_9 = value;
		Il2CppCodeGenWriteBarrier((&___data_9), value);
	}

	inline static int32_t get_offset_of_method_is_virtual_10() { return static_cast<int32_t>(offsetof(Delegate_t, ___method_is_virtual_10)); }
	inline bool get_method_is_virtual_10() const { return ___method_is_virtual_10; }
	inline bool* get_address_of_method_is_virtual_10() { return &___method_is_virtual_10; }
	inline void set_method_is_virtual_10(bool value)
	{
		___method_is_virtual_10 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of System.Delegate
struct Delegate_t_marshaled_pinvoke
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
// Native definition for COM marshalling of System.Delegate
struct Delegate_t_marshaled_com
{
	intptr_t ___method_ptr_0;
	intptr_t ___invoke_impl_1;
	Il2CppIUnknown* ___m_target_2;
	intptr_t ___method_3;
	intptr_t ___delegate_trampoline_4;
	intptr_t ___extra_arg_5;
	intptr_t ___method_code_6;
	MethodInfo_t * ___method_info_7;
	MethodInfo_t * ___original_method_info_8;
	DelegateData_t1BF9F691B56DAE5F8C28C5E084FDE94F15F27BBE * ___data_9;
	int32_t ___method_is_virtual_10;
};
#endif // DELEGATE_T_H
#ifndef ECOLORSPACE_T4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_H
#define ECOLORSPACE_T4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EColorSpace
struct  EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04 
{
public:
	// System.Int32 Valve.VR.EColorSpace::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ECOLORSPACE_T4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_H
#ifndef EDEVICEACTIVITYLEVEL_TC2EFD1F5A4745770950E4403E8CAD1EA1C1CA310_H
#define EDEVICEACTIVITYLEVEL_TC2EFD1F5A4745770950E4403E8CAD1EA1C1CA310_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EDeviceActivityLevel
struct  EDeviceActivityLevel_tC2EFD1F5A4745770950E4403E8CAD1EA1C1CA310 
{
public:
	// System.Int32 Valve.VR.EDeviceActivityLevel::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EDeviceActivityLevel_tC2EFD1F5A4745770950E4403E8CAD1EA1C1CA310, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EDEVICEACTIVITYLEVEL_TC2EFD1F5A4745770950E4403E8CAD1EA1C1CA310_H
#ifndef EDUALANALOGWHICH_T26DB6059FD57DBF15F7F416304BF27A036E14F4C_H
#define EDUALANALOGWHICH_T26DB6059FD57DBF15F7F416304BF27A036E14F4C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EDualAnalogWhich
struct  EDualAnalogWhich_t26DB6059FD57DBF15F7F416304BF27A036E14F4C 
{
public:
	// System.Int32 Valve.VR.EDualAnalogWhich::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EDualAnalogWhich_t26DB6059FD57DBF15F7F416304BF27A036E14F4C, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EDUALANALOGWHICH_T26DB6059FD57DBF15F7F416304BF27A036E14F4C_H
#ifndef EHIDDENAREAMESHTYPE_T3D1DADDD0213C9AA2C3B5EEFA4076E7A23837EDC_H
#define EHIDDENAREAMESHTYPE_T3D1DADDD0213C9AA2C3B5EEFA4076E7A23837EDC_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EHiddenAreaMeshType
struct  EHiddenAreaMeshType_t3D1DADDD0213C9AA2C3B5EEFA4076E7A23837EDC 
{
public:
	// System.Int32 Valve.VR.EHiddenAreaMeshType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EHiddenAreaMeshType_t3D1DADDD0213C9AA2C3B5EEFA4076E7A23837EDC, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EHIDDENAREAMESHTYPE_T3D1DADDD0213C9AA2C3B5EEFA4076E7A23837EDC_H
#ifndef EOVERLAYDIRECTION_T0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_H
#define EOVERLAYDIRECTION_T0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EOverlayDirection
struct  EOverlayDirection_t0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B 
{
public:
	// System.Int32 Valve.VR.EOverlayDirection::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EOverlayDirection_t0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EOVERLAYDIRECTION_T0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_H
#ifndef ETEXTURETYPE_T47A335610F8DC272C02D381BCEEE184C17B0BD17_H
#define ETEXTURETYPE_T47A335610F8DC272C02D381BCEEE184C17B0BD17_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETextureType
struct  ETextureType_t47A335610F8DC272C02D381BCEEE184C17B0BD17 
{
public:
	// System.Int32 Valve.VR.ETextureType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETextureType_t47A335610F8DC272C02D381BCEEE184C17B0BD17, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETEXTURETYPE_T47A335610F8DC272C02D381BCEEE184C17B0BD17_H
#ifndef ETRACKEDCONTROLLERROLE_T8B41B24558976A9DC32325854D65910F446BEF2E_H
#define ETRACKEDCONTROLLERROLE_T8B41B24558976A9DC32325854D65910F446BEF2E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackedControllerRole
struct  ETrackedControllerRole_t8B41B24558976A9DC32325854D65910F446BEF2E 
{
public:
	// System.Int32 Valve.VR.ETrackedControllerRole::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedControllerRole_t8B41B24558976A9DC32325854D65910F446BEF2E, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKEDCONTROLLERROLE_T8B41B24558976A9DC32325854D65910F446BEF2E_H
#ifndef ETRACKEDDEVICECLASS_TED81CE6E8777439AD8DF31025168F061C80EF104_H
#define ETRACKEDDEVICECLASS_TED81CE6E8777439AD8DF31025168F061C80EF104_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackedDeviceClass
struct  ETrackedDeviceClass_tED81CE6E8777439AD8DF31025168F061C80EF104 
{
public:
	// System.Int32 Valve.VR.ETrackedDeviceClass::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedDeviceClass_tED81CE6E8777439AD8DF31025168F061C80EF104, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKEDDEVICECLASS_TED81CE6E8777439AD8DF31025168F061C80EF104_H
#ifndef ETRACKEDDEVICEPROPERTY_T340DF2977F9C0002F9BE6B240D99C3AA55CD2239_H
#define ETRACKEDDEVICEPROPERTY_T340DF2977F9C0002F9BE6B240D99C3AA55CD2239_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackedDeviceProperty
struct  ETrackedDeviceProperty_t340DF2977F9C0002F9BE6B240D99C3AA55CD2239 
{
public:
	// System.Int32 Valve.VR.ETrackedDeviceProperty::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedDeviceProperty_t340DF2977F9C0002F9BE6B240D99C3AA55CD2239, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKEDDEVICEPROPERTY_T340DF2977F9C0002F9BE6B240D99C3AA55CD2239_H
#ifndef ETRACKEDPROPERTYERROR_T6F6EFBF8E5567829F21DCAD27FF2E951E299DF95_H
#define ETRACKEDPROPERTYERROR_T6F6EFBF8E5567829F21DCAD27FF2E951E299DF95_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackedPropertyError
struct  ETrackedPropertyError_t6F6EFBF8E5567829F21DCAD27FF2E951E299DF95 
{
public:
	// System.Int32 Valve.VR.ETrackedPropertyError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackedPropertyError_t6F6EFBF8E5567829F21DCAD27FF2E951E299DF95, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKEDPROPERTYERROR_T6F6EFBF8E5567829F21DCAD27FF2E951E299DF95_H
#ifndef ETRACKINGRESULT_TD4ECC9648BB93C106B2DD11743A874DA81612F60_H
#define ETRACKINGRESULT_TD4ECC9648BB93C106B2DD11743A874DA81612F60_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackingResult
struct  ETrackingResult_tD4ECC9648BB93C106B2DD11743A874DA81612F60 
{
public:
	// System.Int32 Valve.VR.ETrackingResult::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingResult_tD4ECC9648BB93C106B2DD11743A874DA81612F60, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKINGRESULT_TD4ECC9648BB93C106B2DD11743A874DA81612F60_H
#ifndef ETRACKINGUNIVERSEORIGIN_T56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_H
#define ETRACKINGUNIVERSEORIGIN_T56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.ETrackingUniverseOrigin
struct  ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6 
{
public:
	// System.Int32 Valve.VR.ETrackingUniverseOrigin::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ETRACKINGUNIVERSEORIGIN_T56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_H
#ifndef EVRBUTTONID_T3A30094F6626406D0D52D2DFE96109EE0EE9C3E0_H
#define EVRBUTTONID_T3A30094F6626406D0D52D2DFE96109EE0EE9C3E0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRButtonId
struct  EVRButtonId_t3A30094F6626406D0D52D2DFE96109EE0EE9C3E0 
{
public:
	// System.Int32 Valve.VR.EVRButtonId::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRButtonId_t3A30094F6626406D0D52D2DFE96109EE0EE9C3E0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRBUTTONID_T3A30094F6626406D0D52D2DFE96109EE0EE9C3E0_H
#ifndef EVRCONTROLLERAXISTYPE_T7A41D53CAA89050AD33D363CB35699D9B41350C1_H
#define EVRCONTROLLERAXISTYPE_T7A41D53CAA89050AD33D363CB35699D9B41350C1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRControllerAxisType
struct  EVRControllerAxisType_t7A41D53CAA89050AD33D363CB35699D9B41350C1 
{
public:
	// System.Int32 Valve.VR.EVRControllerAxisType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRControllerAxisType_t7A41D53CAA89050AD33D363CB35699D9B41350C1, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRCONTROLLERAXISTYPE_T7A41D53CAA89050AD33D363CB35699D9B41350C1_H
#ifndef EVREVENTTYPE_T6F8AAF223567C0C79264F33A4F1BADF5E5F22B55_H
#define EVREVENTTYPE_T6F8AAF223567C0C79264F33A4F1BADF5E5F22B55_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVREventType
struct  EVREventType_t6F8AAF223567C0C79264F33A4F1BADF5E5F22B55 
{
public:
	// System.Int32 Valve.VR.EVREventType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREventType_t6F8AAF223567C0C79264F33A4F1BADF5E5F22B55, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVREVENTTYPE_T6F8AAF223567C0C79264F33A4F1BADF5E5F22B55_H
#ifndef EVREYE_T4097B73599986F5B774296C51091EF53A629C2FD_H
#define EVREYE_T4097B73599986F5B774296C51091EF53A629C2FD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVREye
struct  EVREye_t4097B73599986F5B774296C51091EF53A629C2FD 
{
public:
	// System.Int32 Valve.VR.EVREye::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVREye_t4097B73599986F5B774296C51091EF53A629C2FD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVREYE_T4097B73599986F5B774296C51091EF53A629C2FD_H
#ifndef EVRFIRMWAREERROR_TC56AAD07E44F6B99B86646103838808F133116C0_H
#define EVRFIRMWAREERROR_TC56AAD07E44F6B99B86646103838808F133116C0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRFirmwareError
struct  EVRFirmwareError_tC56AAD07E44F6B99B86646103838808F133116C0 
{
public:
	// System.Int32 Valve.VR.EVRFirmwareError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRFirmwareError_tC56AAD07E44F6B99B86646103838808F133116C0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRFIRMWAREERROR_TC56AAD07E44F6B99B86646103838808F133116C0_H
#ifndef EVROVERLAYERROR_TE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_H
#define EVROVERLAYERROR_TE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVROverlayError
struct  EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B 
{
public:
	// System.Int32 Valve.VR.EVROverlayError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVROverlayError_tE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVROVERLAYERROR_TE3AFE70F1299AE25EFE2AB05DBED48B1A6D1917B_H
#ifndef EVROVERLAYINTERSECTIONMASKPRIMITIVETYPE_TC5E427CA3995B08A80950275C761E59F38D39BFB_H
#define EVROVERLAYINTERSECTIONMASKPRIMITIVETYPE_TC5E427CA3995B08A80950275C761E59F38D39BFB_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVROverlayIntersectionMaskPrimitiveType
struct  EVROverlayIntersectionMaskPrimitiveType_tC5E427CA3995B08A80950275C761E59F38D39BFB 
{
public:
	// System.Int32 Valve.VR.EVROverlayIntersectionMaskPrimitiveType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVROverlayIntersectionMaskPrimitiveType_tC5E427CA3995B08A80950275C761E59F38D39BFB, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVROVERLAYINTERSECTIONMASKPRIMITIVETYPE_TC5E427CA3995B08A80950275C761E59F38D39BFB_H
#ifndef EVRRENDERMODELERROR_TA672F337FD77711AE2FEDB922DB393EAC3A78BB6_H
#define EVRRENDERMODELERROR_TA672F337FD77711AE2FEDB922DB393EAC3A78BB6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRRenderModelError
struct  EVRRenderModelError_tA672F337FD77711AE2FEDB922DB393EAC3A78BB6 
{
public:
	// System.Int32 Valve.VR.EVRRenderModelError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRRenderModelError_tA672F337FD77711AE2FEDB922DB393EAC3A78BB6, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRRENDERMODELERROR_TA672F337FD77711AE2FEDB922DB393EAC3A78BB6_H
#ifndef EVRSCREENSHOTERROR_T6112ECF0757A423E1EE66777030BBCC64F9A28DD_H
#define EVRSCREENSHOTERROR_T6112ECF0757A423E1EE66777030BBCC64F9A28DD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRScreenshotError
struct  EVRScreenshotError_t6112ECF0757A423E1EE66777030BBCC64F9A28DD 
{
public:
	// System.Int32 Valve.VR.EVRScreenshotError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRScreenshotError_t6112ECF0757A423E1EE66777030BBCC64F9A28DD, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRSCREENSHOTERROR_T6112ECF0757A423E1EE66777030BBCC64F9A28DD_H
#ifndef EVRSCREENSHOTPROPERTYFILENAMES_T8BC7049F6171FCE1DD57E4BB3EC0A4FAAC254CE0_H
#define EVRSCREENSHOTPROPERTYFILENAMES_T8BC7049F6171FCE1DD57E4BB3EC0A4FAAC254CE0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRScreenshotPropertyFilenames
struct  EVRScreenshotPropertyFilenames_t8BC7049F6171FCE1DD57E4BB3EC0A4FAAC254CE0 
{
public:
	// System.Int32 Valve.VR.EVRScreenshotPropertyFilenames::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRScreenshotPropertyFilenames_t8BC7049F6171FCE1DD57E4BB3EC0A4FAAC254CE0, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRSCREENSHOTPROPERTYFILENAMES_T8BC7049F6171FCE1DD57E4BB3EC0A4FAAC254CE0_H
#ifndef EVRSCREENSHOTTYPE_TC97F6F8AE73B25181938CCF81FD07D5F13A98D4D_H
#define EVRSCREENSHOTTYPE_TC97F6F8AE73B25181938CCF81FD07D5F13A98D4D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRScreenshotType
struct  EVRScreenshotType_tC97F6F8AE73B25181938CCF81FD07D5F13A98D4D 
{
public:
	// System.Int32 Valve.VR.EVRScreenshotType::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRScreenshotType_tC97F6F8AE73B25181938CCF81FD07D5F13A98D4D, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRSCREENSHOTTYPE_TC97F6F8AE73B25181938CCF81FD07D5F13A98D4D_H
#ifndef EVRSETTINGSERROR_T0BBBAAB0B224C428FD6B5056E950B35EEDE64915_H
#define EVRSETTINGSERROR_T0BBBAAB0B224C428FD6B5056E950B35EEDE64915_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.EVRSettingsError
struct  EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915 
{
public:
	// System.Int32 Valve.VR.EVRSettingsError::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // EVRSETTINGSERROR_T0BBBAAB0B224C428FD6B5056E950B35EEDE64915_H
#ifndef HIDDENAREAMESH_T_TDDB7A70E803DC4E368213B3E6E00FCBAFF13A747_H
#define HIDDENAREAMESH_T_TDDB7A70E803DC4E368213B3E6E00FCBAFF13A747_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HiddenAreaMesh_t
struct  HiddenAreaMesh_t_tDDB7A70E803DC4E368213B3E6E00FCBAFF13A747 
{
public:
	// System.IntPtr Valve.VR.HiddenAreaMesh_t::pVertexData
	intptr_t ___pVertexData_0;
	// System.UInt32 Valve.VR.HiddenAreaMesh_t::unTriangleCount
	uint32_t ___unTriangleCount_1;

public:
	inline static int32_t get_offset_of_pVertexData_0() { return static_cast<int32_t>(offsetof(HiddenAreaMesh_t_tDDB7A70E803DC4E368213B3E6E00FCBAFF13A747, ___pVertexData_0)); }
	inline intptr_t get_pVertexData_0() const { return ___pVertexData_0; }
	inline intptr_t* get_address_of_pVertexData_0() { return &___pVertexData_0; }
	inline void set_pVertexData_0(intptr_t value)
	{
		___pVertexData_0 = value;
	}

	inline static int32_t get_offset_of_unTriangleCount_1() { return static_cast<int32_t>(offsetof(HiddenAreaMesh_t_tDDB7A70E803DC4E368213B3E6E00FCBAFF13A747, ___unTriangleCount_1)); }
	inline uint32_t get_unTriangleCount_1() const { return ___unTriangleCount_1; }
	inline uint32_t* get_address_of_unTriangleCount_1() { return &___unTriangleCount_1; }
	inline void set_unTriangleCount_1(uint32_t value)
	{
		___unTriangleCount_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HIDDENAREAMESH_T_TDDB7A70E803DC4E368213B3E6E00FCBAFF13A747_H
#ifndef HMDRECT2_T_T26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7_H
#define HMDRECT2_T_T26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.HmdRect2_t
struct  HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 
{
public:
	// Valve.VR.HmdVector2_t Valve.VR.HmdRect2_t::vTopLeft
	HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  ___vTopLeft_0;
	// Valve.VR.HmdVector2_t Valve.VR.HmdRect2_t::vBottomRight
	HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  ___vBottomRight_1;

public:
	inline static int32_t get_offset_of_vTopLeft_0() { return static_cast<int32_t>(offsetof(HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7, ___vTopLeft_0)); }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  get_vTopLeft_0() const { return ___vTopLeft_0; }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * get_address_of_vTopLeft_0() { return &___vTopLeft_0; }
	inline void set_vTopLeft_0(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  value)
	{
		___vTopLeft_0 = value;
	}

	inline static int32_t get_offset_of_vBottomRight_1() { return static_cast<int32_t>(offsetof(HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7, ___vBottomRight_1)); }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  get_vBottomRight_1() const { return ___vBottomRight_1; }
	inline HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * get_address_of_vBottomRight_1() { return &___vBottomRight_1; }
	inline void set_vBottomRight_1(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  value)
	{
		___vBottomRight_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // HMDRECT2_T_T26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7_H
#ifndef RENDERMODEL_COMPONENTSTATE_T_T387CA09B1F3C279E7A79975DC4547D309A057397_H
#define RENDERMODEL_COMPONENTSTATE_T_T387CA09B1F3C279E7A79975DC4547D309A057397_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.RenderModel_ComponentState_t
struct  RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.RenderModel_ComponentState_t::mTrackingToComponentRenderModel
	HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  ___mTrackingToComponentRenderModel_0;
	// Valve.VR.HmdMatrix34_t Valve.VR.RenderModel_ComponentState_t::mTrackingToComponentLocal
	HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  ___mTrackingToComponentLocal_1;
	// System.UInt32 Valve.VR.RenderModel_ComponentState_t::uProperties
	uint32_t ___uProperties_2;

public:
	inline static int32_t get_offset_of_mTrackingToComponentRenderModel_0() { return static_cast<int32_t>(offsetof(RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397, ___mTrackingToComponentRenderModel_0)); }
	inline HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  get_mTrackingToComponentRenderModel_0() const { return ___mTrackingToComponentRenderModel_0; }
	inline HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * get_address_of_mTrackingToComponentRenderModel_0() { return &___mTrackingToComponentRenderModel_0; }
	inline void set_mTrackingToComponentRenderModel_0(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  value)
	{
		___mTrackingToComponentRenderModel_0 = value;
	}

	inline static int32_t get_offset_of_mTrackingToComponentLocal_1() { return static_cast<int32_t>(offsetof(RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397, ___mTrackingToComponentLocal_1)); }
	inline HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  get_mTrackingToComponentLocal_1() const { return ___mTrackingToComponentLocal_1; }
	inline HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * get_address_of_mTrackingToComponentLocal_1() { return &___mTrackingToComponentLocal_1; }
	inline void set_mTrackingToComponentLocal_1(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  value)
	{
		___mTrackingToComponentLocal_1 = value;
	}

	inline static int32_t get_offset_of_uProperties_2() { return static_cast<int32_t>(offsetof(RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397, ___uProperties_2)); }
	inline uint32_t get_uProperties_2() const { return ___uProperties_2; }
	inline uint32_t* get_address_of_uProperties_2() { return &___uProperties_2; }
	inline void set_uProperties_2(uint32_t value)
	{
		___uProperties_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // RENDERMODEL_COMPONENTSTATE_T_T387CA09B1F3C279E7A79975DC4547D309A057397_H
#ifndef VRCONTROLLERSTATE_T_TFD7AD57DEF7C3F3B38C1A84F19C729653C570E35_H
#define VRCONTROLLERSTATE_T_TFD7AD57DEF7C3F3B38C1A84F19C729653C570E35_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VRControllerState_t
struct  VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 
{
public:
	// System.UInt32 Valve.VR.VRControllerState_t::unPacketNum
	uint32_t ___unPacketNum_0;
	// System.UInt64 Valve.VR.VRControllerState_t::ulButtonPressed
	uint64_t ___ulButtonPressed_1;
	// System.UInt64 Valve.VR.VRControllerState_t::ulButtonTouched
	uint64_t ___ulButtonTouched_2;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis0
	VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  ___rAxis0_3;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis1
	VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  ___rAxis1_4;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis2
	VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  ___rAxis2_5;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis3
	VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  ___rAxis3_6;
	// Valve.VR.VRControllerAxis_t Valve.VR.VRControllerState_t::rAxis4
	VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  ___rAxis4_7;

public:
	inline static int32_t get_offset_of_unPacketNum_0() { return static_cast<int32_t>(offsetof(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35, ___unPacketNum_0)); }
	inline uint32_t get_unPacketNum_0() const { return ___unPacketNum_0; }
	inline uint32_t* get_address_of_unPacketNum_0() { return &___unPacketNum_0; }
	inline void set_unPacketNum_0(uint32_t value)
	{
		___unPacketNum_0 = value;
	}

	inline static int32_t get_offset_of_ulButtonPressed_1() { return static_cast<int32_t>(offsetof(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35, ___ulButtonPressed_1)); }
	inline uint64_t get_ulButtonPressed_1() const { return ___ulButtonPressed_1; }
	inline uint64_t* get_address_of_ulButtonPressed_1() { return &___ulButtonPressed_1; }
	inline void set_ulButtonPressed_1(uint64_t value)
	{
		___ulButtonPressed_1 = value;
	}

	inline static int32_t get_offset_of_ulButtonTouched_2() { return static_cast<int32_t>(offsetof(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35, ___ulButtonTouched_2)); }
	inline uint64_t get_ulButtonTouched_2() const { return ___ulButtonTouched_2; }
	inline uint64_t* get_address_of_ulButtonTouched_2() { return &___ulButtonTouched_2; }
	inline void set_ulButtonTouched_2(uint64_t value)
	{
		___ulButtonTouched_2 = value;
	}

	inline static int32_t get_offset_of_rAxis0_3() { return static_cast<int32_t>(offsetof(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35, ___rAxis0_3)); }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  get_rAxis0_3() const { return ___rAxis0_3; }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0 * get_address_of_rAxis0_3() { return &___rAxis0_3; }
	inline void set_rAxis0_3(VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  value)
	{
		___rAxis0_3 = value;
	}

	inline static int32_t get_offset_of_rAxis1_4() { return static_cast<int32_t>(offsetof(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35, ___rAxis1_4)); }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  get_rAxis1_4() const { return ___rAxis1_4; }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0 * get_address_of_rAxis1_4() { return &___rAxis1_4; }
	inline void set_rAxis1_4(VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  value)
	{
		___rAxis1_4 = value;
	}

	inline static int32_t get_offset_of_rAxis2_5() { return static_cast<int32_t>(offsetof(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35, ___rAxis2_5)); }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  get_rAxis2_5() const { return ___rAxis2_5; }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0 * get_address_of_rAxis2_5() { return &___rAxis2_5; }
	inline void set_rAxis2_5(VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  value)
	{
		___rAxis2_5 = value;
	}

	inline static int32_t get_offset_of_rAxis3_6() { return static_cast<int32_t>(offsetof(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35, ___rAxis3_6)); }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  get_rAxis3_6() const { return ___rAxis3_6; }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0 * get_address_of_rAxis3_6() { return &___rAxis3_6; }
	inline void set_rAxis3_6(VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  value)
	{
		___rAxis3_6 = value;
	}

	inline static int32_t get_offset_of_rAxis4_7() { return static_cast<int32_t>(offsetof(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35, ___rAxis4_7)); }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  get_rAxis4_7() const { return ___rAxis4_7; }
	inline VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0 * get_address_of_rAxis4_7() { return &___rAxis4_7; }
	inline void set_rAxis4_7(VRControllerAxis_t_tCD3BB32557ACD86666C7DE15C60245C505C48CE0  value)
	{
		___rAxis4_7 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VRCONTROLLERSTATE_T_TFD7AD57DEF7C3F3B38C1A84F19C729653C570E35_H
#ifndef VRMESSAGEOVERLAYRESPONSE_T6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9_H
#define VRMESSAGEOVERLAYRESPONSE_T6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VRMessageOverlayResponse
struct  VRMessageOverlayResponse_t6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9 
{
public:
	// System.Int32 Valve.VR.VRMessageOverlayResponse::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VRMessageOverlayResponse_t6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VRMESSAGEOVERLAYRESPONSE_T6D6858395E5AA65C455B4B9BD5C6C7BBEDC566D9_H
#ifndef VROVERLAYFLAGS_T00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_H
#define VROVERLAYFLAGS_T00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayFlags
struct  VROverlayFlags_t00FDF5B61DD41CC0BFB93B882D56F55412FC3A08 
{
public:
	// System.Int32 Valve.VR.VROverlayFlags::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VROverlayFlags_t00FDF5B61DD41CC0BFB93B882D56F55412FC3A08, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYFLAGS_T00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_H
#ifndef VROVERLAYINPUTMETHOD_T92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_H
#define VROVERLAYINPUTMETHOD_T92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayInputMethod
struct  VROverlayInputMethod_t92DF5A3C8C399B2C7BCFA8CFABBC882C20265407 
{
public:
	// System.Int32 Valve.VR.VROverlayInputMethod::value__
	int32_t ___value___2;

public:
	inline static int32_t get_offset_of_value___2() { return static_cast<int32_t>(offsetof(VROverlayInputMethod_t92DF5A3C8C399B2C7BCFA8CFABBC882C20265407, ___value___2)); }
	inline int32_t get_value___2() const { return ___value___2; }
	inline int32_t* get_address_of_value___2() { return &___value___2; }
	inline void set_value___2(int32_t value)
	{
		___value___2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYINPUTMETHOD_T92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_H
#ifndef VROVERLAYINTERSECTIONMASKPRIMITIVE_DATA_T_TB7E1117C9C23976D0E6300DF16C455F46720EEE2_H
#define VROVERLAYINTERSECTIONMASKPRIMITIVE_DATA_T_TB7E1117C9C23976D0E6300DF16C455F46720EEE2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t
struct  VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.IntersectionMaskRectangle_t Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t::m_Rectangle
			IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8  ___m_Rectangle_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8  ___m_Rectangle_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.IntersectionMaskCircle_t Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t::m_Circle
			IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725  ___m_Circle_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725  ___m_Circle_1_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_m_Rectangle_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2, ___m_Rectangle_0)); }
	inline IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8  get_m_Rectangle_0() const { return ___m_Rectangle_0; }
	inline IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8 * get_address_of_m_Rectangle_0() { return &___m_Rectangle_0; }
	inline void set_m_Rectangle_0(IntersectionMaskRectangle_t_t0644AB30C559134DA3794A92E18F2D71ABB948A8  value)
	{
		___m_Rectangle_0 = value;
	}

	inline static int32_t get_offset_of_m_Circle_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2, ___m_Circle_1)); }
	inline IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725  get_m_Circle_1() const { return ___m_Circle_1; }
	inline IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725 * get_address_of_m_Circle_1() { return &___m_Circle_1; }
	inline void set_m_Circle_1(IntersectionMaskCircle_t_tCD5731997063808F07FA42C3774ECE5DC9272725  value)
	{
		___m_Circle_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYINTERSECTIONMASKPRIMITIVE_DATA_T_TB7E1117C9C23976D0E6300DF16C455F46720EEE2_H
#ifndef MULTICASTDELEGATE_T_H
#define MULTICASTDELEGATE_T_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.MulticastDelegate
struct  MulticastDelegate_t  : public Delegate_t
{
public:
	// System.Delegate[] System.MulticastDelegate::delegates
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* ___delegates_11;

public:
	inline static int32_t get_offset_of_delegates_11() { return static_cast<int32_t>(offsetof(MulticastDelegate_t, ___delegates_11)); }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* get_delegates_11() const { return ___delegates_11; }
	inline DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86** get_address_of_delegates_11() { return &___delegates_11; }
	inline void set_delegates_11(DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* value)
	{
		___delegates_11 = value;
		Il2CppCodeGenWriteBarrier((&___delegates_11), value);
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
// Native definition for P/Invoke marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_pinvoke : public Delegate_t_marshaled_pinvoke
{
	Delegate_t_marshaled_pinvoke** ___delegates_11;
};
// Native definition for COM marshalling of System.MulticastDelegate
struct MulticastDelegate_t_marshaled_com : public Delegate_t_marshaled_com
{
	Delegate_t_marshaled_com** ___delegates_11;
};
#endif // MULTICASTDELEGATE_T_H
#ifndef TEXTURE_T_TBBD7CD2974A80205F362D98F631A21D85330120D_H
#define TEXTURE_T_TBBD7CD2974A80205F362D98F631A21D85330120D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.Texture_t
struct  Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D 
{
public:
	// System.IntPtr Valve.VR.Texture_t::handle
	intptr_t ___handle_0;
	// Valve.VR.ETextureType Valve.VR.Texture_t::eType
	int32_t ___eType_1;
	// Valve.VR.EColorSpace Valve.VR.Texture_t::eColorSpace
	int32_t ___eColorSpace_2;

public:
	inline static int32_t get_offset_of_handle_0() { return static_cast<int32_t>(offsetof(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D, ___handle_0)); }
	inline intptr_t get_handle_0() const { return ___handle_0; }
	inline intptr_t* get_address_of_handle_0() { return &___handle_0; }
	inline void set_handle_0(intptr_t value)
	{
		___handle_0 = value;
	}

	inline static int32_t get_offset_of_eType_1() { return static_cast<int32_t>(offsetof(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D, ___eType_1)); }
	inline int32_t get_eType_1() const { return ___eType_1; }
	inline int32_t* get_address_of_eType_1() { return &___eType_1; }
	inline void set_eType_1(int32_t value)
	{
		___eType_1 = value;
	}

	inline static int32_t get_offset_of_eColorSpace_2() { return static_cast<int32_t>(offsetof(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D, ___eColorSpace_2)); }
	inline int32_t get_eColorSpace_2() const { return ___eColorSpace_2; }
	inline int32_t* get_address_of_eColorSpace_2() { return &___eColorSpace_2; }
	inline void set_eColorSpace_2(int32_t value)
	{
		___eColorSpace_2 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // TEXTURE_T_TBBD7CD2974A80205F362D98F631A21D85330120D_H
#ifndef TRACKEDDEVICEPOSE_T_T8749211F1556D3E333E784315E857A7C7F83FCA6_H
#define TRACKEDDEVICEPOSE_T_T8749211F1556D3E333E784315E857A7C7F83FCA6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.TrackedDevicePose_t
struct  TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6 
{
public:
	// Valve.VR.HmdMatrix34_t Valve.VR.TrackedDevicePose_t::mDeviceToAbsoluteTracking
	HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  ___mDeviceToAbsoluteTracking_0;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vVelocity
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vVelocity_1;
	// Valve.VR.HmdVector3_t Valve.VR.TrackedDevicePose_t::vAngularVelocity
	HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  ___vAngularVelocity_2;
	// Valve.VR.ETrackingResult Valve.VR.TrackedDevicePose_t::eTrackingResult
	int32_t ___eTrackingResult_3;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bPoseIsValid
	bool ___bPoseIsValid_4;
	// System.Boolean Valve.VR.TrackedDevicePose_t::bDeviceIsConnected
	bool ___bDeviceIsConnected_5;

public:
	inline static int32_t get_offset_of_mDeviceToAbsoluteTracking_0() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___mDeviceToAbsoluteTracking_0)); }
	inline HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  get_mDeviceToAbsoluteTracking_0() const { return ___mDeviceToAbsoluteTracking_0; }
	inline HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * get_address_of_mDeviceToAbsoluteTracking_0() { return &___mDeviceToAbsoluteTracking_0; }
	inline void set_mDeviceToAbsoluteTracking_0(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504  value)
	{
		___mDeviceToAbsoluteTracking_0 = value;
	}

	inline static int32_t get_offset_of_vVelocity_1() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___vVelocity_1)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vVelocity_1() const { return ___vVelocity_1; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vVelocity_1() { return &___vVelocity_1; }
	inline void set_vVelocity_1(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vVelocity_1 = value;
	}

	inline static int32_t get_offset_of_vAngularVelocity_2() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___vAngularVelocity_2)); }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  get_vAngularVelocity_2() const { return ___vAngularVelocity_2; }
	inline HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4 * get_address_of_vAngularVelocity_2() { return &___vAngularVelocity_2; }
	inline void set_vAngularVelocity_2(HmdVector3_t_t328BE5DB61119553896A869823C4CC07FF8169E4  value)
	{
		___vAngularVelocity_2 = value;
	}

	inline static int32_t get_offset_of_eTrackingResult_3() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___eTrackingResult_3)); }
	inline int32_t get_eTrackingResult_3() const { return ___eTrackingResult_3; }
	inline int32_t* get_address_of_eTrackingResult_3() { return &___eTrackingResult_3; }
	inline void set_eTrackingResult_3(int32_t value)
	{
		___eTrackingResult_3 = value;
	}

	inline static int32_t get_offset_of_bPoseIsValid_4() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___bPoseIsValid_4)); }
	inline bool get_bPoseIsValid_4() const { return ___bPoseIsValid_4; }
	inline bool* get_address_of_bPoseIsValid_4() { return &___bPoseIsValid_4; }
	inline void set_bPoseIsValid_4(bool value)
	{
		___bPoseIsValid_4 = value;
	}

	inline static int32_t get_offset_of_bDeviceIsConnected_5() { return static_cast<int32_t>(offsetof(TrackedDevicePose_t_t8749211F1556D3E333E784315E857A7C7F83FCA6, ___bDeviceIsConnected_5)); }
	inline bool get_bDeviceIsConnected_5() const { return ___bDeviceIsConnected_5; }
	inline bool* get_address_of_bDeviceIsConnected_5() { return &___bDeviceIsConnected_5; }
	inline void set_bDeviceIsConnected_5(bool value)
	{
		___bDeviceIsConnected_5 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // TRACKEDDEVICEPOSE_T_T8749211F1556D3E333E784315E857A7C7F83FCA6_H
#ifndef VREVENT_DUALANALOG_T_T072CCA0F7E98A2BC185E3C647868E50BD62D5FF2_H
#define VREVENT_DUALANALOG_T_T072CCA0F7E98A2BC185E3C647868E50BD62D5FF2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_DualAnalog_t
struct  VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2 
{
public:
	// System.Single Valve.VR.VREvent_DualAnalog_t::x
	float ___x_0;
	// System.Single Valve.VR.VREvent_DualAnalog_t::y
	float ___y_1;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedX
	float ___transformedX_2;
	// System.Single Valve.VR.VREvent_DualAnalog_t::transformedY
	float ___transformedY_3;
	// Valve.VR.EDualAnalogWhich Valve.VR.VREvent_DualAnalog_t::which
	int32_t ___which_4;

public:
	inline static int32_t get_offset_of_x_0() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___x_0)); }
	inline float get_x_0() const { return ___x_0; }
	inline float* get_address_of_x_0() { return &___x_0; }
	inline void set_x_0(float value)
	{
		___x_0 = value;
	}

	inline static int32_t get_offset_of_y_1() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___y_1)); }
	inline float get_y_1() const { return ___y_1; }
	inline float* get_address_of_y_1() { return &___y_1; }
	inline void set_y_1(float value)
	{
		___y_1 = value;
	}

	inline static int32_t get_offset_of_transformedX_2() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___transformedX_2)); }
	inline float get_transformedX_2() const { return ___transformedX_2; }
	inline float* get_address_of_transformedX_2() { return &___transformedX_2; }
	inline void set_transformedX_2(float value)
	{
		___transformedX_2 = value;
	}

	inline static int32_t get_offset_of_transformedY_3() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___transformedY_3)); }
	inline float get_transformedY_3() const { return ___transformedY_3; }
	inline float* get_address_of_transformedY_3() { return &___transformedY_3; }
	inline void set_transformedY_3(float value)
	{
		___transformedY_3 = value;
	}

	inline static int32_t get_offset_of_which_4() { return static_cast<int32_t>(offsetof(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2, ___which_4)); }
	inline int32_t get_which_4() const { return ___which_4; }
	inline int32_t* get_address_of_which_4() { return &___which_4; }
	inline void set_which_4(int32_t value)
	{
		___which_4 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_DUALANALOG_T_T072CCA0F7E98A2BC185E3C647868E50BD62D5FF2_H
#ifndef VREVENT_PROPERTY_T_T8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD_H
#define VREVENT_PROPERTY_T_T8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Property_t
struct  VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD 
{
public:
	// System.UInt64 Valve.VR.VREvent_Property_t::container
	uint64_t ___container_0;
	// Valve.VR.ETrackedDeviceProperty Valve.VR.VREvent_Property_t::prop
	int32_t ___prop_1;

public:
	inline static int32_t get_offset_of_container_0() { return static_cast<int32_t>(offsetof(VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD, ___container_0)); }
	inline uint64_t get_container_0() const { return ___container_0; }
	inline uint64_t* get_address_of_container_0() { return &___container_0; }
	inline void set_container_0(uint64_t value)
	{
		___container_0 = value;
	}

	inline static int32_t get_offset_of_prop_1() { return static_cast<int32_t>(offsetof(VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD, ___prop_1)); }
	inline int32_t get_prop_1() const { return ___prop_1; }
	inline int32_t* get_address_of_prop_1() { return &___prop_1; }
	inline void set_prop_1(int32_t value)
	{
		___prop_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_PROPERTY_T_T8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD_H
#ifndef VROVERLAYINTERSECTIONMASKPRIMITIVE_T_T386711BC0E265B2991704FD98FFC953435B01A40_H
#define VROVERLAYINTERSECTIONMASKPRIMITIVE_T_T386711BC0E265B2991704FD98FFC953435B01A40_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VROverlayIntersectionMaskPrimitive_t
struct  VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 
{
public:
	// Valve.VR.EVROverlayIntersectionMaskPrimitiveType Valve.VR.VROverlayIntersectionMaskPrimitive_t::m_nPrimitiveType
	int32_t ___m_nPrimitiveType_0;
	// Valve.VR.VROverlayIntersectionMaskPrimitive_Data_t Valve.VR.VROverlayIntersectionMaskPrimitive_t::m_Primitive
	VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2  ___m_Primitive_1;

public:
	inline static int32_t get_offset_of_m_nPrimitiveType_0() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40, ___m_nPrimitiveType_0)); }
	inline int32_t get_m_nPrimitiveType_0() const { return ___m_nPrimitiveType_0; }
	inline int32_t* get_address_of_m_nPrimitiveType_0() { return &___m_nPrimitiveType_0; }
	inline void set_m_nPrimitiveType_0(int32_t value)
	{
		___m_nPrimitiveType_0 = value;
	}

	inline static int32_t get_offset_of_m_Primitive_1() { return static_cast<int32_t>(offsetof(VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40, ___m_Primitive_1)); }
	inline VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2  get_m_Primitive_1() const { return ___m_Primitive_1; }
	inline VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2 * get_address_of_m_Primitive_1() { return &___m_Primitive_1; }
	inline void set_m_Primitive_1(VROverlayIntersectionMaskPrimitive_Data_t_tB7E1117C9C23976D0E6300DF16C455F46720EEE2  value)
	{
		___m_Primitive_1 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VROVERLAYINTERSECTIONMASKPRIMITIVE_T_T386711BC0E265B2991704FD98FFC953435B01A40_H
#ifndef ASYNCCALLBACK_T3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4_H
#define ASYNCCALLBACK_T3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// System.AsyncCallback
struct  AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // ASYNCCALLBACK_T3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4_H
#ifndef _GETTRANSFORMFOROVERLAYCOORDINATES_T8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_H
#define _GETTRANSFORMFOROVERLAYCOORDINATES_T8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__GetTransformForOverlayCoordinates
struct  _GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETTRANSFORMFOROVERLAYCOORDINATES_T8A10BA749202F389085CC7FD58EF1AA46B4EAEFA_H
#ifndef _HIDEKEYBOARD_T6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_H
#define _HIDEKEYBOARD_T6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__HideKeyboard
struct  _HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _HIDEKEYBOARD_T6F6C468A785625C1601F34E23EFC6E1D77ED0AB9_H
#ifndef _HIDEOVERLAY_T8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_H
#define _HIDEOVERLAY_T8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__HideOverlay
struct  _HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _HIDEOVERLAY_T8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC_H
#ifndef _ISACTIVEDASHBOARDOVERLAY_TC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_H
#define _ISACTIVEDASHBOARDOVERLAY_TC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__IsActiveDashboardOverlay
struct  _IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISACTIVEDASHBOARDOVERLAY_TC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B_H
#ifndef _ISDASHBOARDVISIBLE_T741766EC3150DD69074A428CD81C8CDBCAE44E7C_H
#define _ISDASHBOARDVISIBLE_T741766EC3150DD69074A428CD81C8CDBCAE44E7C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__IsDashboardVisible
struct  _IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISDASHBOARDVISIBLE_T741766EC3150DD69074A428CD81C8CDBCAE44E7C_H
#ifndef _ISHOVERTARGETOVERLAY_TD55266AC207D082B50A7D838152C4C3EC1775692_H
#define _ISHOVERTARGETOVERLAY_TD55266AC207D082B50A7D838152C4C3EC1775692_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__IsHoverTargetOverlay
struct  _IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISHOVERTARGETOVERLAY_TD55266AC207D082B50A7D838152C4C3EC1775692_H
#ifndef _ISOVERLAYVISIBLE_T6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_H
#define _ISOVERLAYVISIBLE_T6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__IsOverlayVisible
struct  _IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISOVERLAYVISIBLE_T6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6_H
#ifndef _MOVEGAMEPADFOCUSTONEIGHBOR_TE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_H
#define _MOVEGAMEPADFOCUSTONEIGHBOR_TE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__MoveGamepadFocusToNeighbor
struct  _MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _MOVEGAMEPADFOCUSTONEIGHBOR_TE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F_H
#ifndef _RELEASENATIVEOVERLAYHANDLE_T0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_H
#define _RELEASENATIVEOVERLAYHANDLE_T0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ReleaseNativeOverlayHandle
struct  _ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _RELEASENATIVEOVERLAYHANDLE_T0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98_H
#ifndef _SETDASHBOARDOVERLAYSCENEPROCESS_T73617E1AD33F7DB7867655E9B856EBF17D4D079C_H
#define _SETDASHBOARDOVERLAYSCENEPROCESS_T73617E1AD33F7DB7867655E9B856EBF17D4D079C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess
struct  _SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETDASHBOARDOVERLAYSCENEPROCESS_T73617E1AD33F7DB7867655E9B856EBF17D4D079C_H
#ifndef _SETGAMEPADFOCUSOVERLAY_T862FF713656DB21533A29376D2E8B1C6DBB2D377_H
#define _SETGAMEPADFOCUSOVERLAY_T862FF713656DB21533A29376D2E8B1C6DBB2D377_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetGamepadFocusOverlay
struct  _SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETGAMEPADFOCUSOVERLAY_T862FF713656DB21533A29376D2E8B1C6DBB2D377_H
#ifndef _SETHIGHQUALITYOVERLAY_TCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_H
#define _SETHIGHQUALITYOVERLAY_TCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetHighQualityOverlay
struct  _SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETHIGHQUALITYOVERLAY_TCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C_H
#ifndef _SETKEYBOARDPOSITIONFOROVERLAY_TE8F751444C6D3D63D22133C7B1098D5B0F785BEF_H
#define _SETKEYBOARDPOSITIONFOROVERLAY_TE8F751444C6D3D63D22133C7B1098D5B0F785BEF_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetKeyboardPositionForOverlay
struct  _SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETKEYBOARDPOSITIONFOROVERLAY_TE8F751444C6D3D63D22133C7B1098D5B0F785BEF_H
#ifndef _SETKEYBOARDTRANSFORMABSOLUTE_T68E6F1E376F670491B768122B8E3BA90E41910AA_H
#define _SETKEYBOARDTRANSFORMABSOLUTE_T68E6F1E376F670491B768122B8E3BA90E41910AA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetKeyboardTransformAbsolute
struct  _SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETKEYBOARDTRANSFORMABSOLUTE_T68E6F1E376F670491B768122B8E3BA90E41910AA_H
#ifndef _SETOVERLAYALPHA_T485092656D099136AF21444C52E3779992BE64D2_H
#define _SETOVERLAYALPHA_T485092656D099136AF21444C52E3779992BE64D2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayAlpha
struct  _SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYALPHA_T485092656D099136AF21444C52E3779992BE64D2_H
#ifndef _SETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T664208DE44E4EFDC426F4F4ECB21B15E113C3963_H
#define _SETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T664208DE44E4EFDC426F4F4ECB21B15E113C3963_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters
struct  _SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYAUTOCURVEDISTANCERANGEINMETERS_T664208DE44E4EFDC426F4F4ECB21B15E113C3963_H
#ifndef _SETOVERLAYCOLOR_T90C788015A90396E9666A35A3981194651C06063_H
#define _SETOVERLAYCOLOR_T90C788015A90396E9666A35A3981194651C06063_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayColor
struct  _SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYCOLOR_T90C788015A90396E9666A35A3981194651C06063_H
#ifndef _SETOVERLAYDUALANALOGTRANSFORM_TA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_H
#define _SETOVERLAYDUALANALOGTRANSFORM_TA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayDualAnalogTransform
struct  _SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYDUALANALOGTRANSFORM_TA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A_H
#ifndef _SETOVERLAYFLAG_T8340752FA12C60B8B3D81026326144433AB9F43E_H
#define _SETOVERLAYFLAG_T8340752FA12C60B8B3D81026326144433AB9F43E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayFlag
struct  _SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYFLAG_T8340752FA12C60B8B3D81026326144433AB9F43E_H
#ifndef _SETOVERLAYFROMFILE_TA470386180ABEA823FD793D89CA113245128625F_H
#define _SETOVERLAYFROMFILE_TA470386180ABEA823FD793D89CA113245128625F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayFromFile
struct  _SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYFROMFILE_TA470386180ABEA823FD793D89CA113245128625F_H
#ifndef _SETOVERLAYINPUTMETHOD_T03517D167879BABD5CBE89B900B0E5C32CEDDA12_H
#define _SETOVERLAYINPUTMETHOD_T03517D167879BABD5CBE89B900B0E5C32CEDDA12_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayInputMethod
struct  _SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYINPUTMETHOD_T03517D167879BABD5CBE89B900B0E5C32CEDDA12_H
#ifndef _SETOVERLAYINTERSECTIONMASK_T0D69FC3AE16874D52B32C3E86924F8969457CA04_H
#define _SETOVERLAYINTERSECTIONMASK_T0D69FC3AE16874D52B32C3E86924F8969457CA04_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayIntersectionMask
struct  _SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYINTERSECTIONMASK_T0D69FC3AE16874D52B32C3E86924F8969457CA04_H
#ifndef _SETOVERLAYMOUSESCALE_TF34E6D516BC82CA6EB05A343FE289C8681F2AE65_H
#define _SETOVERLAYMOUSESCALE_TF34E6D516BC82CA6EB05A343FE289C8681F2AE65_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayMouseScale
struct  _SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYMOUSESCALE_TF34E6D516BC82CA6EB05A343FE289C8681F2AE65_H
#ifndef _SETOVERLAYNAME_TAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_H
#define _SETOVERLAYNAME_TAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayName
struct  _SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYNAME_TAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C_H
#ifndef _SETOVERLAYNEIGHBOR_T7F066F4586C0872919A9741765D453AFC507732D_H
#define _SETOVERLAYNEIGHBOR_T7F066F4586C0872919A9741765D453AFC507732D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayNeighbor
struct  _SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYNEIGHBOR_T7F066F4586C0872919A9741765D453AFC507732D_H
#ifndef _SETOVERLAYRAW_TD973F0869128EFB0A62790AABF40382B2024A2D9_H
#define _SETOVERLAYRAW_TD973F0869128EFB0A62790AABF40382B2024A2D9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayRaw
struct  _SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYRAW_TD973F0869128EFB0A62790AABF40382B2024A2D9_H
#ifndef _SETOVERLAYRENDERMODEL_TAA25B4B28E325453AF64C5A6E4321AB18A4AE050_H
#define _SETOVERLAYRENDERMODEL_TAA25B4B28E325453AF64C5A6E4321AB18A4AE050_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayRenderModel
struct  _SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYRENDERMODEL_TAA25B4B28E325453AF64C5A6E4321AB18A4AE050_H
#ifndef _SETOVERLAYRENDERINGPID_T99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_H
#define _SETOVERLAYRENDERINGPID_T99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayRenderingPid
struct  _SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYRENDERINGPID_T99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46_H
#ifndef _SETOVERLAYSORTORDER_T8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_H
#define _SETOVERLAYSORTORDER_T8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlaySortOrder
struct  _SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYSORTORDER_T8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43_H
#ifndef _SETOVERLAYTEXELASPECT_TF826B2248194D16DB5CED1FC87D8901442627F8E_H
#define _SETOVERLAYTEXELASPECT_TF826B2248194D16DB5CED1FC87D8901442627F8E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTexelAspect
struct  _SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTEXELASPECT_TF826B2248194D16DB5CED1FC87D8901442627F8E_H
#ifndef _SETOVERLAYTEXTURE_T86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_H
#define _SETOVERLAYTEXTURE_T86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTexture
struct  _SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTEXTURE_T86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C_H
#ifndef _SETOVERLAYTEXTUREBOUNDS_T16950882A226DFCCAA95E54A7A5254DE1EC13C0E_H
#define _SETOVERLAYTEXTUREBOUNDS_T16950882A226DFCCAA95E54A7A5254DE1EC13C0E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTextureBounds
struct  _SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTEXTUREBOUNDS_T16950882A226DFCCAA95E54A7A5254DE1EC13C0E_H
#ifndef _SETOVERLAYTEXTURECOLORSPACE_T93BBC2DC0669C640680D180010362DA29418A61F_H
#define _SETOVERLAYTEXTURECOLORSPACE_T93BBC2DC0669C640680D180010362DA29418A61F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTextureColorSpace
struct  _SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTEXTURECOLORSPACE_T93BBC2DC0669C640680D180010362DA29418A61F_H
#ifndef _SETOVERLAYTRANSFORMABSOLUTE_T31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_H
#define _SETOVERLAYTRANSFORMABSOLUTE_T31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTransformAbsolute
struct  _SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTRANSFORMABSOLUTE_T31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06_H
#ifndef _SETOVERLAYTRANSFORMOVERLAYRELATIVE_TBE2D34EC83522675BF338A661C8BF8F2AD0B1171_H
#define _SETOVERLAYTRANSFORMOVERLAYRELATIVE_TBE2D34EC83522675BF338A661C8BF8F2AD0B1171_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative
struct  _SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTRANSFORMOVERLAYRELATIVE_TBE2D34EC83522675BF338A661C8BF8F2AD0B1171_H
#ifndef _SETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF9FD4F36D296D043ABC5DE202269E6EF46D305B8_H
#define _SETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF9FD4F36D296D043ABC5DE202269E6EF46D305B8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent
struct  _SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTRANSFORMTRACKEDDEVICECOMPONENT_TF9FD4F36D296D043ABC5DE202269E6EF46D305B8_H
#ifndef _SETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_T113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_H
#define _SETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_T113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative
struct  _SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYTRANSFORMTRACKEDDEVICERELATIVE_T113CEE4F38A0778EDB08EB9688A42870EBCB5FA7_H
#ifndef _SETOVERLAYWIDTHINMETERS_T590B196060154801B6899FCCABFC5E2E7891E184_H
#define _SETOVERLAYWIDTHINMETERS_T590B196060154801B6899FCCABFC5E2E7891E184_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__SetOverlayWidthInMeters
struct  _SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETOVERLAYWIDTHINMETERS_T590B196060154801B6899FCCABFC5E2E7891E184_H
#ifndef _SHOWDASHBOARD_TBEED079CB61043D20B473B16CC4A983D38180911_H
#define _SHOWDASHBOARD_TBEED079CB61043D20B473B16CC4A983D38180911_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowDashboard
struct  _ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWDASHBOARD_TBEED079CB61043D20B473B16CC4A983D38180911_H
#ifndef _SHOWKEYBOARD_T98D2EB25B0D614804A982C0620341AD5B9ED17A1_H
#define _SHOWKEYBOARD_T98D2EB25B0D614804A982C0620341AD5B9ED17A1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowKeyboard
struct  _ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWKEYBOARD_T98D2EB25B0D614804A982C0620341AD5B9ED17A1_H
#ifndef _SHOWKEYBOARDFOROVERLAY_TCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_H
#define _SHOWKEYBOARDFOROVERLAY_TCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowKeyboardForOverlay
struct  _ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWKEYBOARDFOROVERLAY_TCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6_H
#ifndef _SHOWMESSAGEOVERLAY_T897BD5AA22E792AE7F7BB67EE7932C772034F94F_H
#define _SHOWMESSAGEOVERLAY_T897BD5AA22E792AE7F7BB67EE7932C772034F94F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowMessageOverlay
struct  _ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWMESSAGEOVERLAY_T897BD5AA22E792AE7F7BB67EE7932C772034F94F_H
#ifndef _SHOWOVERLAY_TC32FAC5415BB980F11111857B4CC787DB5F5AE61_H
#define _SHOWOVERLAY_TC32FAC5415BB980F11111857B4CC787DB5F5AE61_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__ShowOverlay
struct  _ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOWOVERLAY_TC32FAC5415BB980F11111857B4CC787DB5F5AE61_H
#ifndef _FREERENDERMODEL_T10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA_H
#define _FREERENDERMODEL_T10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__FreeRenderModel
struct  _FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _FREERENDERMODEL_T10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA_H
#ifndef _FREETEXTURE_TDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A_H
#define _FREETEXTURE_TDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__FreeTexture
struct  _FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _FREETEXTURE_TDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A_H
#ifndef _FREETEXTURED3D11_T26231928AFA89BE5FD4C6DCA33BB71B1E36BA415_H
#define _FREETEXTURED3D11_T26231928AFA89BE5FD4C6DCA33BB71B1E36BA415_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__FreeTextureD3D11
struct  _FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _FREETEXTURED3D11_T26231928AFA89BE5FD4C6DCA33BB71B1E36BA415_H
#ifndef _GETCOMPONENTBUTTONMASK_T573A15D358AF2581E2FB1AAD9DA4CF101149A834_H
#define _GETCOMPONENTBUTTONMASK_T573A15D358AF2581E2FB1AAD9DA4CF101149A834_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetComponentButtonMask
struct  _GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCOMPONENTBUTTONMASK_T573A15D358AF2581E2FB1AAD9DA4CF101149A834_H
#ifndef _GETCOMPONENTCOUNT_TB702B386A5D2A7BD4515BA1A56703F1FA479C983_H
#define _GETCOMPONENTCOUNT_TB702B386A5D2A7BD4515BA1A56703F1FA479C983_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetComponentCount
struct  _GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCOMPONENTCOUNT_TB702B386A5D2A7BD4515BA1A56703F1FA479C983_H
#ifndef _GETCOMPONENTNAME_T08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1_H
#define _GETCOMPONENTNAME_T08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetComponentName
struct  _GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCOMPONENTNAME_T08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1_H
#ifndef _GETCOMPONENTRENDERMODELNAME_T33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15_H
#define _GETCOMPONENTRENDERMODELNAME_T33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetComponentRenderModelName
struct  _GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCOMPONENTRENDERMODELNAME_T33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15_H
#ifndef _GETCOMPONENTSTATE_T31DA301BC3D88C8CC077B3921542EC845DEFD545_H
#define _GETCOMPONENTSTATE_T31DA301BC3D88C8CC077B3921542EC845DEFD545_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetComponentState
struct  _GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCOMPONENTSTATE_T31DA301BC3D88C8CC077B3921542EC845DEFD545_H
#ifndef _GETRENDERMODELCOUNT_TBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D_H
#define _GETRENDERMODELCOUNT_TBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetRenderModelCount
struct  _GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETRENDERMODELCOUNT_TBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D_H
#ifndef _GETRENDERMODELERRORNAMEFROMENUM_T183ECD0C71D8214D6197DB341A0347E86D65BD51_H
#define _GETRENDERMODELERRORNAMEFROMENUM_T183ECD0C71D8214D6197DB341A0347E86D65BD51_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum
struct  _GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETRENDERMODELERRORNAMEFROMENUM_T183ECD0C71D8214D6197DB341A0347E86D65BD51_H
#ifndef _GETRENDERMODELNAME_TD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5_H
#define _GETRENDERMODELNAME_TD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetRenderModelName
struct  _GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETRENDERMODELNAME_TD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5_H
#ifndef _GETRENDERMODELORIGINALPATH_TA21488F5C507318314DFD81798ED701F1CCC5EC2_H
#define _GETRENDERMODELORIGINALPATH_TA21488F5C507318314DFD81798ED701F1CCC5EC2_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetRenderModelOriginalPath
struct  _GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETRENDERMODELORIGINALPATH_TA21488F5C507318314DFD81798ED701F1CCC5EC2_H
#ifndef _GETRENDERMODELTHUMBNAILURL_T84EC690CF92A1DC6D528C793E90B69F893100982_H
#define _GETRENDERMODELTHUMBNAILURL_T84EC690CF92A1DC6D528C793E90B69F893100982_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL
struct  _GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETRENDERMODELTHUMBNAILURL_T84EC690CF92A1DC6D528C793E90B69F893100982_H
#ifndef _LOADINTOTEXTURED3D11_ASYNC_T9514CC1D83C4CF05BB067BD7613265625F85085A_H
#define _LOADINTOTEXTURED3D11_ASYNC_T9514CC1D83C4CF05BB067BD7613265625F85085A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async
struct  _LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _LOADINTOTEXTURED3D11_ASYNC_T9514CC1D83C4CF05BB067BD7613265625F85085A_H
#ifndef _LOADRENDERMODEL_ASYNC_T9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C_H
#define _LOADRENDERMODEL_ASYNC_T9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__LoadRenderModel_Async
struct  _LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _LOADRENDERMODEL_ASYNC_T9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C_H
#ifndef _LOADTEXTURED3D11_ASYNC_TFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB_H
#define _LOADTEXTURED3D11_ASYNC_TFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__LoadTextureD3D11_Async
struct  _LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _LOADTEXTURED3D11_ASYNC_TFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB_H
#ifndef _LOADTEXTURE_ASYNC_TD9A35E9E7994826897A8AB66D72734D764E3EFDA_H
#define _LOADTEXTURE_ASYNC_TD9A35E9E7994826897A8AB66D72734D764E3EFDA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__LoadTexture_Async
struct  _LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _LOADTEXTURE_ASYNC_TD9A35E9E7994826897A8AB66D72734D764E3EFDA_H
#ifndef _RENDERMODELHASCOMPONENT_T24FA87527C7E03D2B5E54F9429C39745D98A696A_H
#define _RENDERMODELHASCOMPONENT_T24FA87527C7E03D2B5E54F9429C39745D98A696A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRRenderModels__RenderModelHasComponent
struct  _RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _RENDERMODELHASCOMPONENT_T24FA87527C7E03D2B5E54F9429C39745D98A696A_H
#ifndef _GETRESOURCEFULLPATH_T6DCDC464D809E225668441D3758C64FBAF75A2CB_H
#define _GETRESOURCEFULLPATH_T6DCDC464D809E225668441D3758C64FBAF75A2CB_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRResources__GetResourceFullPath
struct  _GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETRESOURCEFULLPATH_T6DCDC464D809E225668441D3758C64FBAF75A2CB_H
#ifndef _LOADSHAREDRESOURCE_T2D29ACF4445A51D42576CCC317FA02104F7BEC0E_H
#define _LOADSHAREDRESOURCE_T2D29ACF4445A51D42576CCC317FA02104F7BEC0E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRResources__LoadSharedResource
struct  _LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _LOADSHAREDRESOURCE_T2D29ACF4445A51D42576CCC317FA02104F7BEC0E_H
#ifndef _GETSCREENSHOTPROPERTYFILENAME_TE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064_H
#define _GETSCREENSHOTPROPERTYFILENAME_TE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename
struct  _GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETSCREENSHOTPROPERTYFILENAME_TE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064_H
#ifndef _GETSCREENSHOTPROPERTYTYPE_TA269FC02ABEC6B772D9A46292D87059086C6C7EC_H
#define _GETSCREENSHOTPROPERTYTYPE_TA269FC02ABEC6B772D9A46292D87059086C6C7EC_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRScreenshots__GetScreenshotPropertyType
struct  _GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETSCREENSHOTPROPERTYTYPE_TA269FC02ABEC6B772D9A46292D87059086C6C7EC_H
#ifndef _HOOKSCREENSHOT_T3C8814D81A807E69E2200378050F381A2D541CA8_H
#define _HOOKSCREENSHOT_T3C8814D81A807E69E2200378050F381A2D541CA8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRScreenshots__HookScreenshot
struct  _HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _HOOKSCREENSHOT_T3C8814D81A807E69E2200378050F381A2D541CA8_H
#ifndef _REQUESTSCREENSHOT_TECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0_H
#define _REQUESTSCREENSHOT_TECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRScreenshots__RequestScreenshot
struct  _RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _REQUESTSCREENSHOT_TECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0_H
#ifndef _SUBMITSCREENSHOT_T1E00B7C4ECA42A33F2F546C8D94FB5E62B789791_H
#define _SUBMITSCREENSHOT_T1E00B7C4ECA42A33F2F546C8D94FB5E62B789791_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRScreenshots__SubmitScreenshot
struct  _SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SUBMITSCREENSHOT_T1E00B7C4ECA42A33F2F546C8D94FB5E62B789791_H
#ifndef _TAKESTEREOSCREENSHOT_TC32CA06B67910327C53EDA471CDD03F314901B33_H
#define _TAKESTEREOSCREENSHOT_TC32CA06B67910327C53EDA471CDD03F314901B33_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRScreenshots__TakeStereoScreenshot
struct  _TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _TAKESTEREOSCREENSHOT_TC32CA06B67910327C53EDA471CDD03F314901B33_H
#ifndef _UPDATESCREENSHOTPROGRESS_TF83D10722F5140A9A3BD5A76BD49EB040BC1EA11_H
#define _UPDATESCREENSHOTPROGRESS_TF83D10722F5140A9A3BD5A76BD49EB040BC1EA11_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRScreenshots__UpdateScreenshotProgress
struct  _UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _UPDATESCREENSHOTPROGRESS_TF83D10722F5140A9A3BD5A76BD49EB040BC1EA11_H
#ifndef _GETBOOL_T64D45876D73CF3CA5245A66AAF51032EC62BD02F_H
#define _GETBOOL_T64D45876D73CF3CA5245A66AAF51032EC62BD02F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__GetBool
struct  _GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETBOOL_T64D45876D73CF3CA5245A66AAF51032EC62BD02F_H
#ifndef _GETFLOAT_T0A42CAB57E1EF62A0C45A96992DACF5173E2D791_H
#define _GETFLOAT_T0A42CAB57E1EF62A0C45A96992DACF5173E2D791_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__GetFloat
struct  _GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETFLOAT_T0A42CAB57E1EF62A0C45A96992DACF5173E2D791_H
#ifndef _GETINT32_T9F1C3CAB16FC947A62EA84C87F83380CB076BC0E_H
#define _GETINT32_T9F1C3CAB16FC947A62EA84C87F83380CB076BC0E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__GetInt32
struct  _GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETINT32_T9F1C3CAB16FC947A62EA84C87F83380CB076BC0E_H
#ifndef _GETSETTINGSERRORNAMEFROMENUM_T5064A00817639B21F390F0B6973E59FBE66D26EA_H
#define _GETSETTINGSERRORNAMEFROMENUM_T5064A00817639B21F390F0B6973E59FBE66D26EA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum
struct  _GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETSETTINGSERRORNAMEFROMENUM_T5064A00817639B21F390F0B6973E59FBE66D26EA_H
#ifndef _GETSTRING_T6509C95102A4B9166181B31B42ACBF306C44CEE6_H
#define _GETSTRING_T6509C95102A4B9166181B31B42ACBF306C44CEE6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__GetString
struct  _GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETSTRING_T6509C95102A4B9166181B31B42ACBF306C44CEE6_H
#ifndef _REMOVEKEYINSECTION_TA6E2D240A9D54EA9D706AD203A18A6799AC38728_H
#define _REMOVEKEYINSECTION_TA6E2D240A9D54EA9D706AD203A18A6799AC38728_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__RemoveKeyInSection
struct  _RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _REMOVEKEYINSECTION_TA6E2D240A9D54EA9D706AD203A18A6799AC38728_H
#ifndef _REMOVESECTION_TC2B83203BBBD7F1210E759ED4F43AD768A764222_H
#define _REMOVESECTION_TC2B83203BBBD7F1210E759ED4F43AD768A764222_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__RemoveSection
struct  _RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _REMOVESECTION_TC2B83203BBBD7F1210E759ED4F43AD768A764222_H
#ifndef _SETBOOL_T15C8F5808A57FDE1F1BA144E8793C8BF4720E514_H
#define _SETBOOL_T15C8F5808A57FDE1F1BA144E8793C8BF4720E514_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__SetBool
struct  _SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETBOOL_T15C8F5808A57FDE1F1BA144E8793C8BF4720E514_H
#ifndef _SETFLOAT_T98FDC04346EC28577694E439EABA871417670ABD_H
#define _SETFLOAT_T98FDC04346EC28577694E439EABA871417670ABD_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__SetFloat
struct  _SetFloat_t98FDC04346EC28577694E439EABA871417670ABD  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETFLOAT_T98FDC04346EC28577694E439EABA871417670ABD_H
#ifndef _SETINT32_TADE17CEED5267D4F3010F174334CCD0A04E71297_H
#define _SETINT32_TADE17CEED5267D4F3010F174334CCD0A04E71297_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__SetInt32
struct  _SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETINT32_TADE17CEED5267D4F3010F174334CCD0A04E71297_H
#ifndef _SETSTRING_T4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35_H
#define _SETSTRING_T4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__SetString
struct  _SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETSTRING_T4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35_H
#ifndef _SYNC_T1B3FC51C0137C7F85441751561F8EC70D7357C14_H
#define _SYNC_T1B3FC51C0137C7F85441751561F8EC70D7357C14_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSettings__Sync
struct  _Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SYNC_T1B3FC51C0137C7F85441751561F8EC70D7357C14_H
#ifndef _ACKNOWLEDGEQUIT_EXITING_T35B0F20632A8118F94E183D58585BE8242D0CB1F_H
#define _ACKNOWLEDGEQUIT_EXITING_T35B0F20632A8118F94E183D58585BE8242D0CB1F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__AcknowledgeQuit_Exiting
struct  _AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ACKNOWLEDGEQUIT_EXITING_T35B0F20632A8118F94E183D58585BE8242D0CB1F_H
#ifndef _ACKNOWLEDGEQUIT_USERPROMPT_T9721938A93B41A5D82277388A6E5FDB89DA3A228_H
#define _ACKNOWLEDGEQUIT_USERPROMPT_T9721938A93B41A5D82277388A6E5FDB89DA3A228_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__AcknowledgeQuit_UserPrompt
struct  _AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ACKNOWLEDGEQUIT_USERPROMPT_T9721938A93B41A5D82277388A6E5FDB89DA3A228_H
#ifndef _APPLYTRANSFORM_T1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76_H
#define _APPLYTRANSFORM_T1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__ApplyTransform
struct  _ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _APPLYTRANSFORM_T1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76_H
#ifndef _COMPUTEDISTORTION_TCB43F770A84C35E6B0CE19A136B7F9506B74079D_H
#define _COMPUTEDISTORTION_TCB43F770A84C35E6B0CE19A136B7F9506B74079D_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__ComputeDistortion
struct  _ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _COMPUTEDISTORTION_TCB43F770A84C35E6B0CE19A136B7F9506B74079D_H
#ifndef _DRIVERDEBUGREQUEST_T8456E250FF029B787D6B20D6A6ED9CB61871215B_H
#define _DRIVERDEBUGREQUEST_T8456E250FF029B787D6B20D6A6ED9CB61871215B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__DriverDebugRequest
struct  _DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _DRIVERDEBUGREQUEST_T8456E250FF029B787D6B20D6A6ED9CB61871215B_H
#ifndef _GETARRAYTRACKEDDEVICEPROPERTY_T280E7668A9CBD9DB728E850BE2CB6AD3A0A94915_H
#define _GETARRAYTRACKEDDEVICEPROPERTY_T280E7668A9CBD9DB728E850BE2CB6AD3A0A94915_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetArrayTrackedDeviceProperty
struct  _GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETARRAYTRACKEDDEVICEPROPERTY_T280E7668A9CBD9DB728E850BE2CB6AD3A0A94915_H
#ifndef _GETBOOLTRACKEDDEVICEPROPERTY_T301972016CB66909D0CC44B4F7DAD1CF4577CF02_H
#define _GETBOOLTRACKEDDEVICEPROPERTY_T301972016CB66909D0CC44B4F7DAD1CF4577CF02_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetBoolTrackedDeviceProperty
struct  _GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETBOOLTRACKEDDEVICEPROPERTY_T301972016CB66909D0CC44B4F7DAD1CF4577CF02_H
#ifndef _GETBUTTONIDNAMEFROMENUM_T0945D2B4CF0AF04B15C662C0D890D672411A20F8_H
#define _GETBUTTONIDNAMEFROMENUM_T0945D2B4CF0AF04B15C662C0D890D672411A20F8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetButtonIdNameFromEnum
struct  _GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETBUTTONIDNAMEFROMENUM_T0945D2B4CF0AF04B15C662C0D890D672411A20F8_H
#ifndef _GETCONTROLLERAXISTYPENAMEFROMENUM_T1A26DE3CC54353C1A8A7C5F270486E116B2EB641_H
#define _GETCONTROLLERAXISTYPENAMEFROMENUM_T1A26DE3CC54353C1A8A7C5F270486E116B2EB641_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetControllerAxisTypeNameFromEnum
struct  _GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCONTROLLERAXISTYPENAMEFROMENUM_T1A26DE3CC54353C1A8A7C5F270486E116B2EB641_H
#ifndef _GETCONTROLLERROLEFORTRACKEDDEVICEINDEX_T9A97F4D32C1AECF503F033091B1955D1766E4AA8_H
#define _GETCONTROLLERROLEFORTRACKEDDEVICEINDEX_T9A97F4D32C1AECF503F033091B1955D1766E4AA8_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetControllerRoleForTrackedDeviceIndex
struct  _GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCONTROLLERROLEFORTRACKEDDEVICEINDEX_T9A97F4D32C1AECF503F033091B1955D1766E4AA8_H
#ifndef _GETCONTROLLERSTATE_TA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407_H
#define _GETCONTROLLERSTATE_TA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetControllerState
struct  _GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCONTROLLERSTATE_TA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407_H
#ifndef _GETCONTROLLERSTATEWITHPOSE_T2D58CA60321CBD32ECFB9CB8628C097373AD3E32_H
#define _GETCONTROLLERSTATEWITHPOSE_T2D58CA60321CBD32ECFB9CB8628C097373AD3E32_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetControllerStateWithPose
struct  _GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETCONTROLLERSTATEWITHPOSE_T2D58CA60321CBD32ECFB9CB8628C097373AD3E32_H
#ifndef _GETD3D9ADAPTERINDEX_T24AD480249B575FB2400E3218A08B1CFBFC295D5_H
#define _GETD3D9ADAPTERINDEX_T24AD480249B575FB2400E3218A08B1CFBFC295D5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetD3D9AdapterIndex
struct  _GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETD3D9ADAPTERINDEX_T24AD480249B575FB2400E3218A08B1CFBFC295D5_H
#ifndef _GETDXGIOUTPUTINFO_TD04AB6C2F71E8FAAB89A329F8458CB081C9B388B_H
#define _GETDXGIOUTPUTINFO_TD04AB6C2F71E8FAAB89A329F8458CB081C9B388B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetDXGIOutputInfo
struct  _GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETDXGIOUTPUTINFO_TD04AB6C2F71E8FAAB89A329F8458CB081C9B388B_H
#ifndef _GETDEVICETOABSOLUTETRACKINGPOSE_T36788F566223DD44B11275FC49598F76E12CADD5_H
#define _GETDEVICETOABSOLUTETRACKINGPOSE_T36788F566223DD44B11275FC49598F76E12CADD5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetDeviceToAbsoluteTrackingPose
struct  _GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETDEVICETOABSOLUTETRACKINGPOSE_T36788F566223DD44B11275FC49598F76E12CADD5_H
#ifndef _GETEVENTTYPENAMEFROMENUM_TB1D22CBA2072C6DCA380441303754A362DBC1837_H
#define _GETEVENTTYPENAMEFROMENUM_TB1D22CBA2072C6DCA380441303754A362DBC1837_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetEventTypeNameFromEnum
struct  _GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETEVENTTYPENAMEFROMENUM_TB1D22CBA2072C6DCA380441303754A362DBC1837_H
#ifndef _GETEYETOHEADTRANSFORM_T0FC02D7480B1DD1786900485CFCB659BED2F1115_H
#define _GETEYETOHEADTRANSFORM_T0FC02D7480B1DD1786900485CFCB659BED2F1115_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetEyeToHeadTransform
struct  _GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETEYETOHEADTRANSFORM_T0FC02D7480B1DD1786900485CFCB659BED2F1115_H
#ifndef _GETFLOATTRACKEDDEVICEPROPERTY_TEC7AB86B3780F7FB800F8CDDC61D457C93D7D965_H
#define _GETFLOATTRACKEDDEVICEPROPERTY_TEC7AB86B3780F7FB800F8CDDC61D457C93D7D965_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetFloatTrackedDeviceProperty
struct  _GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETFLOATTRACKEDDEVICEPROPERTY_TEC7AB86B3780F7FB800F8CDDC61D457C93D7D965_H
#ifndef _GETHIDDENAREAMESH_T6FABEBC040D165530799B76F4169975FB14A8E54_H
#define _GETHIDDENAREAMESH_T6FABEBC040D165530799B76F4169975FB14A8E54_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetHiddenAreaMesh
struct  _GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETHIDDENAREAMESH_T6FABEBC040D165530799B76F4169975FB14A8E54_H
#ifndef _GETINT32TRACKEDDEVICEPROPERTY_T1C62153B8A07058D752B0850116551A999B9DCB0_H
#define _GETINT32TRACKEDDEVICEPROPERTY_T1C62153B8A07058D752B0850116551A999B9DCB0_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetInt32TrackedDeviceProperty
struct  _GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETINT32TRACKEDDEVICEPROPERTY_T1C62153B8A07058D752B0850116551A999B9DCB0_H
#ifndef _GETMATRIX34TRACKEDDEVICEPROPERTY_T04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A_H
#define _GETMATRIX34TRACKEDDEVICEPROPERTY_T04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetMatrix34TrackedDeviceProperty
struct  _GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETMATRIX34TRACKEDDEVICEPROPERTY_T04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A_H
#ifndef _GETOUTPUTDEVICE_T705D7B6FA3CE80D6271F618EE85F9B3B57120EDA_H
#define _GETOUTPUTDEVICE_T705D7B6FA3CE80D6271F618EE85F9B3B57120EDA_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetOutputDevice
struct  _GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETOUTPUTDEVICE_T705D7B6FA3CE80D6271F618EE85F9B3B57120EDA_H
#ifndef _GETPROJECTIONMATRIX_TEF06293015A6A270C3C255D7D5C20BED43A0451C_H
#define _GETPROJECTIONMATRIX_TEF06293015A6A270C3C255D7D5C20BED43A0451C_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetProjectionMatrix
struct  _GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETPROJECTIONMATRIX_TEF06293015A6A270C3C255D7D5C20BED43A0451C_H
#ifndef _GETPROJECTIONRAW_T624E56D7670994FA5B0D4ADF9437B5271705B9C5_H
#define _GETPROJECTIONRAW_T624E56D7670994FA5B0D4ADF9437B5271705B9C5_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetProjectionRaw
struct  _GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETPROJECTIONRAW_T624E56D7670994FA5B0D4ADF9437B5271705B9C5_H
#ifndef _GETPROPERRORNAMEFROMENUM_T8394C3ED1CA5EC4DEBED7C36E5B37629297F1898_H
#define _GETPROPERRORNAMEFROMENUM_T8394C3ED1CA5EC4DEBED7C36E5B37629297F1898_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetPropErrorNameFromEnum
struct  _GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETPROPERRORNAMEFROMENUM_T8394C3ED1CA5EC4DEBED7C36E5B37629297F1898_H
#ifndef _GETRAWZEROPOSETOSTANDINGABSOLUTETRACKINGPOSE_T40DD486655675AFF1C192E6F0A714FF8900E9198_H
#define _GETRAWZEROPOSETOSTANDINGABSOLUTETRACKINGPOSE_T40DD486655675AFF1C192E6F0A714FF8900E9198_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetRawZeroPoseToStandingAbsoluteTrackingPose
struct  _GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETRAWZEROPOSETOSTANDINGABSOLUTETRACKINGPOSE_T40DD486655675AFF1C192E6F0A714FF8900E9198_H
#ifndef _GETRECOMMENDEDRENDERTARGETSIZE_TE791BA5E28B30F2D451B02A8179972E4469BDD9F_H
#define _GETRECOMMENDEDRENDERTARGETSIZE_TE791BA5E28B30F2D451B02A8179972E4469BDD9F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetRecommendedRenderTargetSize
struct  _GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETRECOMMENDEDRENDERTARGETSIZE_TE791BA5E28B30F2D451B02A8179972E4469BDD9F_H
#ifndef _GETSEATEDZEROPOSETOSTANDINGABSOLUTETRACKINGPOSE_T5AB5A4FEBB84429E620DFAC3FBE046B655E38347_H
#define _GETSEATEDZEROPOSETOSTANDINGABSOLUTETRACKINGPOSE_T5AB5A4FEBB84429E620DFAC3FBE046B655E38347_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetSeatedZeroPoseToStandingAbsoluteTrackingPose
struct  _GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETSEATEDZEROPOSETOSTANDINGABSOLUTETRACKINGPOSE_T5AB5A4FEBB84429E620DFAC3FBE046B655E38347_H
#ifndef _GETSORTEDTRACKEDDEVICEINDICESOFCLASS_T59B375BD64378C6BECE1682772A5F6F01BC35187_H
#define _GETSORTEDTRACKEDDEVICEINDICESOFCLASS_T59B375BD64378C6BECE1682772A5F6F01BC35187_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetSortedTrackedDeviceIndicesOfClass
struct  _GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETSORTEDTRACKEDDEVICEINDICESOFCLASS_T59B375BD64378C6BECE1682772A5F6F01BC35187_H
#ifndef _GETSTRINGTRACKEDDEVICEPROPERTY_T5259E8053E04306F8DCF6510F84CCF4E2036560F_H
#define _GETSTRINGTRACKEDDEVICEPROPERTY_T5259E8053E04306F8DCF6510F84CCF4E2036560F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetStringTrackedDeviceProperty
struct  _GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETSTRINGTRACKEDDEVICEPROPERTY_T5259E8053E04306F8DCF6510F84CCF4E2036560F_H
#ifndef _GETTIMESINCELASTVSYNC_T3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4_H
#define _GETTIMESINCELASTVSYNC_T3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetTimeSinceLastVsync
struct  _GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETTIMESINCELASTVSYNC_T3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4_H
#ifndef _GETTRACKEDDEVICEACTIVITYLEVEL_TD3678794945B8222F818EF55BF99E6F1FD7E8F74_H
#define _GETTRACKEDDEVICEACTIVITYLEVEL_TD3678794945B8222F818EF55BF99E6F1FD7E8F74_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetTrackedDeviceActivityLevel
struct  _GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETTRACKEDDEVICEACTIVITYLEVEL_TD3678794945B8222F818EF55BF99E6F1FD7E8F74_H
#ifndef _GETTRACKEDDEVICECLASS_TA5E45FD6984DB8CB2E15272B556C4B212DE33C87_H
#define _GETTRACKEDDEVICECLASS_TA5E45FD6984DB8CB2E15272B556C4B212DE33C87_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetTrackedDeviceClass
struct  _GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETTRACKEDDEVICECLASS_TA5E45FD6984DB8CB2E15272B556C4B212DE33C87_H
#ifndef _GETTRACKEDDEVICEINDEXFORCONTROLLERROLE_T450622E9D588B0547D1C6A7992F46342E2DC5062_H
#define _GETTRACKEDDEVICEINDEXFORCONTROLLERROLE_T450622E9D588B0547D1C6A7992F46342E2DC5062_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetTrackedDeviceIndexForControllerRole
struct  _GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETTRACKEDDEVICEINDEXFORCONTROLLERROLE_T450622E9D588B0547D1C6A7992F46342E2DC5062_H
#ifndef _GETUINT64TRACKEDDEVICEPROPERTY_T0399565D84A6C4D9507F4C05D744828C80FB0AC6_H
#define _GETUINT64TRACKEDDEVICEPROPERTY_T0399565D84A6C4D9507F4C05D744828C80FB0AC6_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__GetUint64TrackedDeviceProperty
struct  _GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _GETUINT64TRACKEDDEVICEPROPERTY_T0399565D84A6C4D9507F4C05D744828C80FB0AC6_H
#ifndef _ISDISPLAYONDESKTOP_T4BA5255E9D01D04F0BEA2076062394EB19366332_H
#define _ISDISPLAYONDESKTOP_T4BA5255E9D01D04F0BEA2076062394EB19366332_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__IsDisplayOnDesktop
struct  _IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISDISPLAYONDESKTOP_T4BA5255E9D01D04F0BEA2076062394EB19366332_H
#ifndef _ISINPUTAVAILABLE_T28BFFC93AFEBA3FCA2132CDED5502DDA41947E95_H
#define _ISINPUTAVAILABLE_T28BFFC93AFEBA3FCA2132CDED5502DDA41947E95_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__IsInputAvailable
struct  _IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISINPUTAVAILABLE_T28BFFC93AFEBA3FCA2132CDED5502DDA41947E95_H
#ifndef _ISSTEAMVRDRAWINGCONTROLLERS_T0AB1B8ADC0B8302F4FE503F0907EC176629DA464_H
#define _ISSTEAMVRDRAWINGCONTROLLERS_T0AB1B8ADC0B8302F4FE503F0907EC176629DA464_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__IsSteamVRDrawingControllers
struct  _IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISSTEAMVRDRAWINGCONTROLLERS_T0AB1B8ADC0B8302F4FE503F0907EC176629DA464_H
#ifndef _ISTRACKEDDEVICECONNECTED_TFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9_H
#define _ISTRACKEDDEVICECONNECTED_TFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__IsTrackedDeviceConnected
struct  _IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _ISTRACKEDDEVICECONNECTED_TFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9_H
#ifndef _PERFORMFIRMWAREUPDATE_T9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F_H
#define _PERFORMFIRMWAREUPDATE_T9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__PerformFirmwareUpdate
struct  _PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _PERFORMFIRMWAREUPDATE_T9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F_H
#ifndef _RESETSEATEDZEROPOSE_T3D4EFB0F0966F941AC52310481E802810DA38560_H
#define _RESETSEATEDZEROPOSE_T3D4EFB0F0966F941AC52310481E802810DA38560_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__ResetSeatedZeroPose
struct  _ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _RESETSEATEDZEROPOSE_T3D4EFB0F0966F941AC52310481E802810DA38560_H
#ifndef _SETDISPLAYVISIBILITY_T0C386C40D949F28C2DA348D77525A074539ABF70_H
#define _SETDISPLAYVISIBILITY_T0C386C40D949F28C2DA348D77525A074539ABF70_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__SetDisplayVisibility
struct  _SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SETDISPLAYVISIBILITY_T0C386C40D949F28C2DA348D77525A074539ABF70_H
#ifndef _SHOULDAPPLICATIONPAUSE_T6A050B499A5F14155CA0903274091F13A35B2A70_H
#define _SHOULDAPPLICATIONPAUSE_T6A050B499A5F14155CA0903274091F13A35B2A70_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__ShouldApplicationPause
struct  _ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOULDAPPLICATIONPAUSE_T6A050B499A5F14155CA0903274091F13A35B2A70_H
#ifndef _SHOULDAPPLICATIONREDUCERENDERINGWORK_T9113213A7CBA57254A368217C661D23448831C4B_H
#define _SHOULDAPPLICATIONREDUCERENDERINGWORK_T9113213A7CBA57254A368217C661D23448831C4B_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__ShouldApplicationReduceRenderingWork
struct  _ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _SHOULDAPPLICATIONREDUCERENDERINGWORK_T9113213A7CBA57254A368217C661D23448831C4B_H
#ifndef _TRIGGERHAPTICPULSE_TE62C158A0D4FDDC78C89F076EFCA8795AD45E046_H
#define _TRIGGERHAPTICPULSE_TE62C158A0D4FDDC78C89F076EFCA8795AD45E046_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__TriggerHapticPulse
struct  _TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _TRIGGERHAPTICPULSE_TE62C158A0D4FDDC78C89F076EFCA8795AD45E046_H
#ifndef VREVENT_DATA_T_T710EFDC2A0B6CE3CA661E952D5052E6F85E852AC_H
#define VREVENT_DATA_T_T710EFDC2A0B6CE3CA661E952D5052E6F85E852AC_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_Data_t
struct  VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC 
{
public:
	union
	{
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Reserved_t Valve.VR.VREvent_Data_t::reserved
			VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F  ___reserved_0;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F  ___reserved_0_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Controller_t Valve.VR.VREvent_Data_t::controller
			VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8  ___controller_1;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8  ___controller_1_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Mouse_t Valve.VR.VREvent_Data_t::mouse
			VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267  ___mouse_2;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267  ___mouse_2_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Scroll_t Valve.VR.VREvent_Data_t::scroll
			VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5  ___scroll_3;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5  ___scroll_3_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Process_t Valve.VR.VREvent_Data_t::process
			VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10  ___process_4;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10  ___process_4_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Notification_t Valve.VR.VREvent_Data_t::notification
			VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9  ___notification_5;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9  ___notification_5_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Overlay_t Valve.VR.VREvent_Data_t::overlay
			VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900  ___overlay_6;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900  ___overlay_6_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Status_t Valve.VR.VREvent_Data_t::status
			VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392  ___status_7;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392  ___status_7_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Ipd_t Valve.VR.VREvent_Data_t::ipd
			VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22  ___ipd_8;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22  ___ipd_8_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Chaperone_t Valve.VR.VREvent_Data_t::chaperone
			VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A  ___chaperone_9;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A  ___chaperone_9_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_PerformanceTest_t Valve.VR.VREvent_Data_t::performanceTest
			VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F  ___performanceTest_10;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F  ___performanceTest_10_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_TouchPadMove_t Valve.VR.VREvent_Data_t::touchPadMove
			VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18  ___touchPadMove_11;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18  ___touchPadMove_11_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_SeatedZeroPoseReset_t Valve.VR.VREvent_Data_t::seatedZeroPoseReset
			VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4  ___seatedZeroPoseReset_12;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4  ___seatedZeroPoseReset_12_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Screenshot_t Valve.VR.VREvent_Data_t::screenshot
			VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11  ___screenshot_13;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11  ___screenshot_13_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ScreenshotProgress_t Valve.VR.VREvent_Data_t::screenshotProgress
			VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D  ___screenshotProgress_14;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D  ___screenshotProgress_14_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_ApplicationLaunch_t Valve.VR.VREvent_Data_t::applicationLaunch
			VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8  ___applicationLaunch_15;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8  ___applicationLaunch_15_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_EditingCameraSurface_t Valve.VR.VREvent_Data_t::cameraSurface
			VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6  ___cameraSurface_16;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6  ___cameraSurface_16_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_MessageOverlay_t Valve.VR.VREvent_Data_t::messageOverlay
			VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF  ___messageOverlay_17;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF  ___messageOverlay_17_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Property_t Valve.VR.VREvent_Data_t::property
			VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD  ___property_18;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD  ___property_18_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_DualAnalog_t Valve.VR.VREvent_Data_t::dualAnalog
			VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2  ___dualAnalog_19;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2  ___dualAnalog_19_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_HapticVibration_t Valve.VR.VREvent_Data_t::hapticVibration
			VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF  ___hapticVibration_20;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF  ___hapticVibration_20_forAlignmentOnly;
		};
		#pragma pack(push, tp, 1)
		struct
		{
			// Valve.VR.VREvent_Keyboard_t Valve.VR.VREvent_Data_t::keyboard
			VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE  ___keyboard_21;
		};
		#pragma pack(pop, tp)
		struct
		{
			VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE  ___keyboard_21_forAlignmentOnly;
		};
	};

public:
	inline static int32_t get_offset_of_reserved_0() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___reserved_0)); }
	inline VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F  get_reserved_0() const { return ___reserved_0; }
	inline VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F * get_address_of_reserved_0() { return &___reserved_0; }
	inline void set_reserved_0(VREvent_Reserved_t_t42EADCBC910F8ECC29C85F4E2376E34677EDC23F  value)
	{
		___reserved_0 = value;
	}

	inline static int32_t get_offset_of_controller_1() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___controller_1)); }
	inline VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8  get_controller_1() const { return ___controller_1; }
	inline VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8 * get_address_of_controller_1() { return &___controller_1; }
	inline void set_controller_1(VREvent_Controller_t_tB1FFD48DCBC52E589F9BD9987063A6228CDD21D8  value)
	{
		___controller_1 = value;
	}

	inline static int32_t get_offset_of_mouse_2() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___mouse_2)); }
	inline VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267  get_mouse_2() const { return ___mouse_2; }
	inline VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267 * get_address_of_mouse_2() { return &___mouse_2; }
	inline void set_mouse_2(VREvent_Mouse_t_tE88D68F4C4CB957B62099C82C7AED290AA0FF267  value)
	{
		___mouse_2 = value;
	}

	inline static int32_t get_offset_of_scroll_3() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___scroll_3)); }
	inline VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5  get_scroll_3() const { return ___scroll_3; }
	inline VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5 * get_address_of_scroll_3() { return &___scroll_3; }
	inline void set_scroll_3(VREvent_Scroll_t_t491F52F7AFAAE972F9F49DAABDB2233A48E33CA5  value)
	{
		___scroll_3 = value;
	}

	inline static int32_t get_offset_of_process_4() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___process_4)); }
	inline VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10  get_process_4() const { return ___process_4; }
	inline VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10 * get_address_of_process_4() { return &___process_4; }
	inline void set_process_4(VREvent_Process_t_t3D2B492B7F7042AEB6072913B305BE5597343E10  value)
	{
		___process_4 = value;
	}

	inline static int32_t get_offset_of_notification_5() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___notification_5)); }
	inline VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9  get_notification_5() const { return ___notification_5; }
	inline VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9 * get_address_of_notification_5() { return &___notification_5; }
	inline void set_notification_5(VREvent_Notification_t_tDBB23936BEDFBB6ED34830252A310DB5B2FE23A9  value)
	{
		___notification_5 = value;
	}

	inline static int32_t get_offset_of_overlay_6() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___overlay_6)); }
	inline VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900  get_overlay_6() const { return ___overlay_6; }
	inline VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900 * get_address_of_overlay_6() { return &___overlay_6; }
	inline void set_overlay_6(VREvent_Overlay_t_t909148C3CA59C47163B718FFE65700E4F9680900  value)
	{
		___overlay_6 = value;
	}

	inline static int32_t get_offset_of_status_7() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___status_7)); }
	inline VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392  get_status_7() const { return ___status_7; }
	inline VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392 * get_address_of_status_7() { return &___status_7; }
	inline void set_status_7(VREvent_Status_t_t415E997F9090A3C09A62FBF77303E4012CC8D392  value)
	{
		___status_7 = value;
	}

	inline static int32_t get_offset_of_ipd_8() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___ipd_8)); }
	inline VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22  get_ipd_8() const { return ___ipd_8; }
	inline VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22 * get_address_of_ipd_8() { return &___ipd_8; }
	inline void set_ipd_8(VREvent_Ipd_t_tAFFEBE073442A4A1326C4464CF1A92C030C22C22  value)
	{
		___ipd_8 = value;
	}

	inline static int32_t get_offset_of_chaperone_9() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___chaperone_9)); }
	inline VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A  get_chaperone_9() const { return ___chaperone_9; }
	inline VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A * get_address_of_chaperone_9() { return &___chaperone_9; }
	inline void set_chaperone_9(VREvent_Chaperone_t_t1236967FA48384C188CF6E49C5A991AACC5DF59A  value)
	{
		___chaperone_9 = value;
	}

	inline static int32_t get_offset_of_performanceTest_10() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___performanceTest_10)); }
	inline VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F  get_performanceTest_10() const { return ___performanceTest_10; }
	inline VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F * get_address_of_performanceTest_10() { return &___performanceTest_10; }
	inline void set_performanceTest_10(VREvent_PerformanceTest_t_t1E9209C87C10EB6362D3123FF0182CFE4939AD9F  value)
	{
		___performanceTest_10 = value;
	}

	inline static int32_t get_offset_of_touchPadMove_11() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___touchPadMove_11)); }
	inline VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18  get_touchPadMove_11() const { return ___touchPadMove_11; }
	inline VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18 * get_address_of_touchPadMove_11() { return &___touchPadMove_11; }
	inline void set_touchPadMove_11(VREvent_TouchPadMove_t_t66AC6500BD6C5B370506ED04AADE1C1C5EF98B18  value)
	{
		___touchPadMove_11 = value;
	}

	inline static int32_t get_offset_of_seatedZeroPoseReset_12() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___seatedZeroPoseReset_12)); }
	inline VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4  get_seatedZeroPoseReset_12() const { return ___seatedZeroPoseReset_12; }
	inline VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4 * get_address_of_seatedZeroPoseReset_12() { return &___seatedZeroPoseReset_12; }
	inline void set_seatedZeroPoseReset_12(VREvent_SeatedZeroPoseReset_t_t2A63DCD4D8AEA7E3198F3F96F9D8087506CD06E4  value)
	{
		___seatedZeroPoseReset_12 = value;
	}

	inline static int32_t get_offset_of_screenshot_13() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___screenshot_13)); }
	inline VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11  get_screenshot_13() const { return ___screenshot_13; }
	inline VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11 * get_address_of_screenshot_13() { return &___screenshot_13; }
	inline void set_screenshot_13(VREvent_Screenshot_t_tBC0F7EE971E9E1DEDD665F664010039718459B11  value)
	{
		___screenshot_13 = value;
	}

	inline static int32_t get_offset_of_screenshotProgress_14() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___screenshotProgress_14)); }
	inline VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D  get_screenshotProgress_14() const { return ___screenshotProgress_14; }
	inline VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D * get_address_of_screenshotProgress_14() { return &___screenshotProgress_14; }
	inline void set_screenshotProgress_14(VREvent_ScreenshotProgress_t_t72E093E61A1D8FE405A54C66387501EE3506601D  value)
	{
		___screenshotProgress_14 = value;
	}

	inline static int32_t get_offset_of_applicationLaunch_15() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___applicationLaunch_15)); }
	inline VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8  get_applicationLaunch_15() const { return ___applicationLaunch_15; }
	inline VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8 * get_address_of_applicationLaunch_15() { return &___applicationLaunch_15; }
	inline void set_applicationLaunch_15(VREvent_ApplicationLaunch_t_t902F35797A687AA43E57703E160C252BE0877DB8  value)
	{
		___applicationLaunch_15 = value;
	}

	inline static int32_t get_offset_of_cameraSurface_16() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___cameraSurface_16)); }
	inline VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6  get_cameraSurface_16() const { return ___cameraSurface_16; }
	inline VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6 * get_address_of_cameraSurface_16() { return &___cameraSurface_16; }
	inline void set_cameraSurface_16(VREvent_EditingCameraSurface_t_t017AA24A092F59E0A165CE5F1E76347CB00C2FD6  value)
	{
		___cameraSurface_16 = value;
	}

	inline static int32_t get_offset_of_messageOverlay_17() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___messageOverlay_17)); }
	inline VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF  get_messageOverlay_17() const { return ___messageOverlay_17; }
	inline VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF * get_address_of_messageOverlay_17() { return &___messageOverlay_17; }
	inline void set_messageOverlay_17(VREvent_MessageOverlay_t_tD7AE309A410FAFD42C1683CE33E0885E92E296BF  value)
	{
		___messageOverlay_17 = value;
	}

	inline static int32_t get_offset_of_property_18() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___property_18)); }
	inline VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD  get_property_18() const { return ___property_18; }
	inline VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD * get_address_of_property_18() { return &___property_18; }
	inline void set_property_18(VREvent_Property_t_t8F6B2A797D4B4B2EFF5001F0BA75EC856CDD32DD  value)
	{
		___property_18 = value;
	}

	inline static int32_t get_offset_of_dualAnalog_19() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___dualAnalog_19)); }
	inline VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2  get_dualAnalog_19() const { return ___dualAnalog_19; }
	inline VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2 * get_address_of_dualAnalog_19() { return &___dualAnalog_19; }
	inline void set_dualAnalog_19(VREvent_DualAnalog_t_t072CCA0F7E98A2BC185E3C647868E50BD62D5FF2  value)
	{
		___dualAnalog_19 = value;
	}

	inline static int32_t get_offset_of_hapticVibration_20() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___hapticVibration_20)); }
	inline VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF  get_hapticVibration_20() const { return ___hapticVibration_20; }
	inline VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF * get_address_of_hapticVibration_20() { return &___hapticVibration_20; }
	inline void set_hapticVibration_20(VREvent_HapticVibration_t_t786CA5B3A8C34B778835ADDDEBB62831C2C141CF  value)
	{
		___hapticVibration_20 = value;
	}

	inline static int32_t get_offset_of_keyboard_21() { return static_cast<int32_t>(offsetof(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC, ___keyboard_21)); }
	inline VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE  get_keyboard_21() const { return ___keyboard_21; }
	inline VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE * get_address_of_keyboard_21() { return &___keyboard_21; }
	inline void set_keyboard_21(VREvent_Keyboard_t_t1A42E858A4AF1CBDBCB6C8F2494FE951E4BFD1CE  value)
	{
		___keyboard_21 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_DATA_T_T710EFDC2A0B6CE3CA661E952D5052E6F85E852AC_H
#ifndef VREVENT_T_T464E913D25D159DF914A71C00CB0097700E4F63F_H
#define VREVENT_T_T464E913D25D159DF914A71C00CB0097700E4F63F_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.VREvent_t
struct  VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F 
{
public:
	// System.UInt32 Valve.VR.VREvent_t::eventType
	uint32_t ___eventType_0;
	// System.UInt32 Valve.VR.VREvent_t::trackedDeviceIndex
	uint32_t ___trackedDeviceIndex_1;
	// System.Single Valve.VR.VREvent_t::eventAgeSeconds
	float ___eventAgeSeconds_2;
	// Valve.VR.VREvent_Data_t Valve.VR.VREvent_t::data
	VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC  ___data_3;

public:
	inline static int32_t get_offset_of_eventType_0() { return static_cast<int32_t>(offsetof(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F, ___eventType_0)); }
	inline uint32_t get_eventType_0() const { return ___eventType_0; }
	inline uint32_t* get_address_of_eventType_0() { return &___eventType_0; }
	inline void set_eventType_0(uint32_t value)
	{
		___eventType_0 = value;
	}

	inline static int32_t get_offset_of_trackedDeviceIndex_1() { return static_cast<int32_t>(offsetof(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F, ___trackedDeviceIndex_1)); }
	inline uint32_t get_trackedDeviceIndex_1() const { return ___trackedDeviceIndex_1; }
	inline uint32_t* get_address_of_trackedDeviceIndex_1() { return &___trackedDeviceIndex_1; }
	inline void set_trackedDeviceIndex_1(uint32_t value)
	{
		___trackedDeviceIndex_1 = value;
	}

	inline static int32_t get_offset_of_eventAgeSeconds_2() { return static_cast<int32_t>(offsetof(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F, ___eventAgeSeconds_2)); }
	inline float get_eventAgeSeconds_2() const { return ___eventAgeSeconds_2; }
	inline float* get_address_of_eventAgeSeconds_2() { return &___eventAgeSeconds_2; }
	inline void set_eventAgeSeconds_2(float value)
	{
		___eventAgeSeconds_2 = value;
	}

	inline static int32_t get_offset_of_data_3() { return static_cast<int32_t>(offsetof(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F, ___data_3)); }
	inline VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC  get_data_3() const { return ___data_3; }
	inline VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC * get_address_of_data_3() { return &___data_3; }
	inline void set_data_3(VREvent_Data_t_t710EFDC2A0B6CE3CA661E952D5052E6F85E852AC  value)
	{
		___data_3 = value;
	}
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // VREVENT_T_T464E913D25D159DF914A71C00CB0097700E4F63F_H
#ifndef _POLLNEXTOVERLAYEVENT_TE221884826791F6104F82275F46F4CCDA01D6399_H
#define _POLLNEXTOVERLAYEVENT_TE221884826791F6104F82275F46F4CCDA01D6399_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVROverlay__PollNextOverlayEvent
struct  _PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _POLLNEXTOVERLAYEVENT_TE221884826791F6104F82275F46F4CCDA01D6399_H
#ifndef _POLLNEXTEVENT_T9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E_H
#define _POLLNEXTEVENT_T9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__PollNextEvent
struct  _PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _POLLNEXTEVENT_T9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E_H
#ifndef _POLLNEXTEVENTWITHPOSE_T40CAFD39917DF051B650847B56B4E15407001A83_H
#define _POLLNEXTEVENTWITHPOSE_T40CAFD39917DF051B650847B56B4E15407001A83_H
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif

// Valve.VR.IVRSystem__PollNextEventWithPose
struct  _PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83  : public MulticastDelegate_t
{
public:

public:
};

#ifdef __clang__
#pragma clang diagnostic pop
#endif
#endif // _POLLNEXTEVENTWITHPOSE_T40CAFD39917DF051B650847B56B4E15407001A83_H
// System.Delegate[]
struct DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) Delegate_t * m_Items[1];

public:
	inline Delegate_t * GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, Delegate_t * value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier(m_Items + index, value);
	}
	inline Delegate_t * GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline Delegate_t ** GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, Delegate_t * value)
	{
		m_Items[index] = value;
		Il2CppCodeGenWriteBarrier(m_Items + index, value);
	}
};
// Valve.VR.EVRScreenshotType[]
struct EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319  : public RuntimeArray
{
public:
	ALIGN_FIELD (8) int32_t m_Items[1];

public:
	inline int32_t GetAt(il2cpp_array_size_t index) const
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items[index];
	}
	inline int32_t* GetAddressAt(il2cpp_array_size_t index)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		return m_Items + index;
	}
	inline void SetAt(il2cpp_array_size_t index, int32_t value)
	{
		IL2CPP_ARRAY_BOUNDS_CHECK(index, (uint32_t)(this)->max_length);
		m_Items[index] = value;
	}
	inline int32_t GetAtUnchecked(il2cpp_array_size_t index) const
	{
		return m_Items[index];
	}
	inline int32_t* GetAddressAtUnchecked(il2cpp_array_size_t index)
	{
		return m_Items + index;
	}
	inline void SetAtUnchecked(il2cpp_array_size_t index, int32_t value)
	{
		m_Items[index] = value;
	}
};



#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA (_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  ___coordinatesInOverlay2, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTransform3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__GetTransformForOverlayCoordinates::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetTransformForOverlayCoordinates__ctor_m03BED5F8D0F46D09C30504F62A0CD8E9D70DCD57 (_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetTransformForOverlayCoordinates::Invoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdVector2_t,Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetTransformForOverlayCoordinates_Invoke_mF03E5FBFB1AB9A300F3EA055CABFC3DD7D6F6F0F (_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  ___coordinatesInOverlay2, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTransform3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
							else
								result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
						else
							result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 , HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___coordinatesInOverlay2, ___pmatTransform3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__GetTransformForOverlayCoordinates::BeginInvoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdVector2_t,Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetTransformForOverlayCoordinates_BeginInvoke_m5531B9239586D84762A087408E1B1B665BF8933A (_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0  ___coordinatesInOverlay2, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTransform3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetTransformForOverlayCoordinates_BeginInvoke_m5531B9239586D84762A087408E1B1B665BF8933A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_il2cpp_TypeInfo_var, &___eTrackingOrigin1);
	__d_args[2] = Box(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_il2cpp_TypeInfo_var, &___coordinatesInOverlay2);
	__d_args[3] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pmatTransform3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__GetTransformForOverlayCoordinates::EndInvoke(Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetTransformForOverlayCoordinates_EndInvoke_m0A5DAC2C464680BB25171665584D10623D481D7A (_GetTransformForOverlayCoordinates_t8A10BA749202F389085CC7FD58EF1AA46B4EAEFA * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatTransform0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 (_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVROverlay__HideKeyboard::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _HideKeyboard__ctor_m2AF5A6FEBC82CD87A76F749AD21AE2D015333181 (_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__HideKeyboard::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _HideKeyboard_Invoke_m6DEA7A858A880F9B79D6E1344803AD1DFF2E9764 (_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__HideKeyboard::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _HideKeyboard_BeginInvoke_mFABCC68041F0CD23EF829A63A05B67704F828781 (_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVROverlay__HideKeyboard::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _HideKeyboard_EndInvoke_m87CDC0B7EB0187B1BD39F3B397B94C2904F9652E (_HideKeyboard_t6F6C468A785625C1601F34E23EFC6E1D77ED0AB9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC (_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__HideOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _HideOverlay__ctor_m4A5AE01C108EF1A174E30AACF04ABE337EC8E10A (_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__HideOverlay::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _HideOverlay_Invoke_m513EA1A6C0670ABC58946DD28FE16AFC056D5951 (_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__HideOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _HideOverlay_BeginInvoke_mA0D74B2955B20A2BD226D8EC79B375703D2DE9AB (_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_HideOverlay_BeginInvoke_mA0D74B2955B20A2BD226D8EC79B375703D2DE9AB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__HideOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _HideOverlay_EndInvoke_m57C76D3160068969C06E537405C26B9BE39BEB33 (_HideOverlay_t8C7A77EC9D0D82CE39FE08F594C7F43C78C304CC * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B (_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__IsActiveDashboardOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _IsActiveDashboardOverlay__ctor_m9109215FE3DB6BA99B5A94D476B871550FCAE52D (_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__IsActiveDashboardOverlay::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR bool _IsActiveDashboardOverlay_Invoke_m37CC6E13376FD780EE24ADEB9A6819A1A5D6CCD0 (_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__IsActiveDashboardOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _IsActiveDashboardOverlay_BeginInvoke_m7BF6933576020B0A79CC4309F02D48AE0AFCA269 (_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_IsActiveDashboardOverlay_BeginInvoke_m7BF6933576020B0A79CC4309F02D48AE0AFCA269_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Boolean Valve.VR.IVROverlay__IsActiveDashboardOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _IsActiveDashboardOverlay_EndInvoke_mEE385E86C19208B914DBB5C0C19728F2359CED27 (_IsActiveDashboardOverlay_tC4E78FFEAD2E8504B06B3BEB0229CFBE960FE99B * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C (_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C * __this, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc();

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__IsDashboardVisible::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _IsDashboardVisible__ctor_m4F13A654A42DEE92265C179AB20E5F5ECBC98155 (_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__IsDashboardVisible::Invoke()
extern "C" IL2CPP_METHOD_ATTR bool _IsDashboardVisible_Invoke_m8EDD1E27E66DECC2B211204916C73EBD540AE3BF (_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C * __this, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef bool (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef bool (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< bool >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__IsDashboardVisible::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _IsDashboardVisible_BeginInvoke_mE89062494E68BE193CECBFC34F800FA46D886BE8 (_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Boolean Valve.VR.IVROverlay__IsDashboardVisible::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _IsDashboardVisible_EndInvoke_mE554EBE1A0113685B637867CABAF7BC6B18BC7F0 (_IsDashboardVisible_t741766EC3150DD69074A428CD81C8CDBCAE44E7C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 (_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__IsHoverTargetOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _IsHoverTargetOverlay__ctor_mDE6A9514631738D6AEF66467EBAD8722DE5F99E7 (_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__IsHoverTargetOverlay::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR bool _IsHoverTargetOverlay_Invoke_mD97682C41C776D485D07471CEAAE2775D39BDFB2 (_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__IsHoverTargetOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _IsHoverTargetOverlay_BeginInvoke_m6FE118B4DA1E5D9834B63FD88A92D3718E9B77DC (_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_IsHoverTargetOverlay_BeginInvoke_m6FE118B4DA1E5D9834B63FD88A92D3718E9B77DC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Boolean Valve.VR.IVROverlay__IsHoverTargetOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _IsHoverTargetOverlay_EndInvoke_m55B3C180FE9CA6770F40759D5D04750ABE977B40 (_IsHoverTargetOverlay_tD55266AC207D082B50A7D838152C4C3EC1775692 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 (_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__IsOverlayVisible::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _IsOverlayVisible__ctor_m393500A8AA77220B6DB7F0C21F4CDBEC4F9DD858 (_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__IsOverlayVisible::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR bool _IsOverlayVisible_Invoke_mE63946E361BEAAEF9BBBE35FFBDBAE019C91606E (_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__IsOverlayVisible::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _IsOverlayVisible_BeginInvoke_mCC4198D9B66FB9DA3D5EA177314DA2C1B4CA291A (_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_IsOverlayVisible_BeginInvoke_mCC4198D9B66FB9DA3D5EA177314DA2C1B4CA291A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Boolean Valve.VR.IVROverlay__IsOverlayVisible::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _IsOverlayVisible_EndInvoke_m99252E86BC68AE271037098FA4431C63D8E1D07B (_IsOverlayVisible_t6BA29842E29CDA351FA3EBBC7DC88B2A8D8EA0A6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F (_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F * __this, int32_t ___eDirection0, uint64_t ___ulFrom1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___eDirection0, ___ulFrom1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__MoveGamepadFocusToNeighbor::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _MoveGamepadFocusToNeighbor__ctor_m59E2E0174885F755BBE087334E7B995E22989D50 (_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__MoveGamepadFocusToNeighbor::Invoke(Valve.VR.EOverlayDirection,System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _MoveGamepadFocusToNeighbor_Invoke_m2D87D462C1C1AE3DA38D1773487224F393CF1EE8 (_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F * __this, int32_t ___eDirection0, uint64_t ___ulFrom1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eDirection0, ___ulFrom1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eDirection0, ___ulFrom1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___eDirection0, ___ulFrom1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___eDirection0, ___ulFrom1);
							else
								result = GenericVirtFuncInvoker2< int32_t, int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___eDirection0, ___ulFrom1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eDirection0, ___ulFrom1);
							else
								result = VirtFuncInvoker2< int32_t, int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eDirection0, ___ulFrom1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eDirection0, ___ulFrom1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eDirection0, ___ulFrom1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eDirection0, ___ulFrom1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___eDirection0, ___ulFrom1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___eDirection0, ___ulFrom1);
						else
							result = GenericVirtFuncInvoker2< int32_t, int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___eDirection0, ___ulFrom1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eDirection0, ___ulFrom1);
						else
							result = VirtFuncInvoker2< int32_t, int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eDirection0, ___ulFrom1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eDirection0, ___ulFrom1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__MoveGamepadFocusToNeighbor::BeginInvoke(Valve.VR.EOverlayDirection,System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _MoveGamepadFocusToNeighbor_BeginInvoke_m455EB6038247AF620AC7D5F65E2370B1D998ABCB (_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F * __this, int32_t ___eDirection0, uint64_t ___ulFrom1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_MoveGamepadFocusToNeighbor_BeginInvoke_m455EB6038247AF620AC7D5F65E2370B1D998ABCB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(EOverlayDirection_t0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_il2cpp_TypeInfo_var, &___eDirection0);
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulFrom1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__MoveGamepadFocusToNeighbor::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _MoveGamepadFocusToNeighbor_EndInvoke_m18E8EA5E383E26F77FBA7D9F4ABFBDB669916028 (_MoveGamepadFocusToNeighbor_tE76B9DE65D14061F0532BBE1638AA6F6AD7A6B4F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 (_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 * __this, uint64_t ___ulOverlayHandle0, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F * ___pEvent1, uint32_t ___uncbVREvent2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVROverlay__PollNextOverlayEvent::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _PollNextOverlayEvent__ctor_m72F5339A5364E8EB8AB1FA024B669ADFC2D729A5 (_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVROverlay__PollNextOverlayEvent::Invoke(System.UInt64,Valve.VR.VREvent_tU26,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR bool _PollNextOverlayEvent_Invoke_m2ECB54C6694014D26BC1D70CBB669C43063B5029 (_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 * __this, uint64_t ___ulOverlayHandle0, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F * ___pEvent1, uint32_t ___uncbVREvent2, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef bool (*FunctionPointerType) (uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< bool, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
							else
								result = GenericVirtFuncInvoker3< bool, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< bool, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
							else
								result = VirtFuncInvoker3< bool, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef bool (*FunctionPointerType) (uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< bool, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
						else
							result = GenericVirtFuncInvoker3< bool, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< bool, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
						else
							result = VirtFuncInvoker3< bool, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, uint64_t, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pEvent1, ___uncbVREvent2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__PollNextOverlayEvent::BeginInvoke(System.UInt64,Valve.VR.VREvent_tU26,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _PollNextOverlayEvent_BeginInvoke_mB5A69E356B4C3277C7004913BE4899BC069F4A30 (_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 * __this, uint64_t ___ulOverlayHandle0, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F * ___pEvent1, uint32_t ___uncbVREvent2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_PollNextOverlayEvent_BeginInvoke_mB5A69E356B4C3277C7004913BE4899BC069F4A30_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F_il2cpp_TypeInfo_var, &*___pEvent1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___uncbVREvent2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Boolean Valve.VR.IVROverlay__PollNextOverlayEvent::EndInvoke(Valve.VR.VREvent_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _PollNextOverlayEvent_EndInvoke_m6C19FC1A4D428F501D6BB87904FC2D1DF25EA249 (_PollNextOverlayEvent_tE221884826791F6104F82275F46F4CCDA01D6399 * __this, VREvent_t_t464E913D25D159DF914A71C00CB0097700E4F63F * ___pEvent0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pEvent0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 (_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pNativeTextureHandle1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pNativeTextureHandle1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ReleaseNativeOverlayHandle::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ReleaseNativeOverlayHandle__ctor_mC5A4ADC2D2B55380637B0239BDE10A1E4B741752 (_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ReleaseNativeOverlayHandle::Invoke(System.UInt64,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR int32_t _ReleaseNativeOverlayHandle_Invoke_m7E34342DA1EFB629A3158A2054F226703D72A1EC (_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pNativeTextureHandle1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pNativeTextureHandle1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ReleaseNativeOverlayHandle::BeginInvoke(System.UInt64,System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ReleaseNativeOverlayHandle_BeginInvoke_m3971D4BCD313A41C2EEA1957DF64CF1A46EE0509 (_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pNativeTextureHandle1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ReleaseNativeOverlayHandle_BeginInvoke_m3971D4BCD313A41C2EEA1957DF64CF1A46EE0509_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pNativeTextureHandle1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ReleaseNativeOverlayHandle::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _ReleaseNativeOverlayHandle_EndInvoke_mD25BAB8C1C9B6041A14CA8EAE2117E06CB32FBEA (_ReleaseNativeOverlayHandle_t0973261B8D54E2EBC6099B40A2A3FE01F3A4FA98 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C (_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unProcessId1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unProcessId1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetDashboardOverlaySceneProcess__ctor_m15B56C2191FEC130C153A8F2819338E0DE5ED337 (_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess::Invoke(System.UInt64,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetDashboardOverlaySceneProcess_Invoke_m6E49CB753A2DDFFDFF25EAE75EC40F353D5E0F44 (_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unProcessId1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unProcessId1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unProcessId1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unProcessId1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unProcessId1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unProcessId1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unProcessId1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unProcessId1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unProcessId1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unProcessId1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unProcessId1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unProcessId1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unProcessId1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unProcessId1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unProcessId1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unProcessId1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unProcessId1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess::BeginInvoke(System.UInt64,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetDashboardOverlaySceneProcess_BeginInvoke_m97F190EC1FC18F358B9501F428442F6E57142BEC (_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unProcessId1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetDashboardOverlaySceneProcess_BeginInvoke_m97F190EC1FC18F358B9501F428442F6E57142BEC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unProcessId1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetDashboardOverlaySceneProcess::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetDashboardOverlaySceneProcess_EndInvoke_m065EB606C61BD77C1D1B70983D49F95E2CD27221 (_SetDashboardOverlaySceneProcess_t73617E1AD33F7DB7867655E9B856EBF17D4D079C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 (_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 * __this, uint64_t ___ulNewFocusOverlay0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulNewFocusOverlay0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetGamepadFocusOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetGamepadFocusOverlay__ctor_m1D8A9C673C4C38E5FB21CBFAFC81FE2CE9A6C0D5 (_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetGamepadFocusOverlay::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetGamepadFocusOverlay_Invoke_mED1207594B739D424C31763997D7DD15F1EDC6A7 (_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 * __this, uint64_t ___ulNewFocusOverlay0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulNewFocusOverlay0, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulNewFocusOverlay0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulNewFocusOverlay0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulNewFocusOverlay0);
							else
								result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulNewFocusOverlay0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulNewFocusOverlay0);
							else
								result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulNewFocusOverlay0);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulNewFocusOverlay0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulNewFocusOverlay0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulNewFocusOverlay0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulNewFocusOverlay0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulNewFocusOverlay0);
						else
							result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulNewFocusOverlay0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulNewFocusOverlay0);
						else
							result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulNewFocusOverlay0);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulNewFocusOverlay0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetGamepadFocusOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetGamepadFocusOverlay_BeginInvoke_mF0D4B84C6E908147C606E1C5A70C9C5E07E5E0FA (_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 * __this, uint64_t ___ulNewFocusOverlay0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetGamepadFocusOverlay_BeginInvoke_mF0D4B84C6E908147C606E1C5A70C9C5E07E5E0FA_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulNewFocusOverlay0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetGamepadFocusOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetGamepadFocusOverlay_EndInvoke_m5A14A3CF2E52EDB4DC6F1D985AE0284EB66C5F23 (_SetGamepadFocusOverlay_t862FF713656DB21533A29376D2E8B1C6DBB2D377 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C (_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetHighQualityOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetHighQualityOverlay__ctor_mFE8CA2D18A189A922FF20A6F0E4BF8681A97FDF6 (_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetHighQualityOverlay::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetHighQualityOverlay_Invoke_mD8078760A741BE175E1B2224E7E067B93F89D240 (_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetHighQualityOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetHighQualityOverlay_BeginInvoke_m94A017D4AB129CCAF56C7DF05AB3EE8F1C8CC3D1 (_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetHighQualityOverlay_BeginInvoke_m94A017D4AB129CCAF56C7DF05AB3EE8F1C8CC3D1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetHighQualityOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetHighQualityOverlay_EndInvoke_m58C68E63A00E261841AD8DF103C17846F2FA58FA (_SetHighQualityOverlay_tCF1B7EA724A950EDC55FD6E76A20F3ABC15BFA3C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF (_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF * __this, uint64_t ___ulOverlayHandle0, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  ___avoidRect1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 );
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___ulOverlayHandle0, ___avoidRect1);

}
// System.Void Valve.VR.IVROverlay__SetKeyboardPositionForOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetKeyboardPositionForOverlay__ctor_m967309F3FBD88D72E65EC01824329A7AC3598D33 (_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__SetKeyboardPositionForOverlay::Invoke(System.UInt64,Valve.VR.HmdRect2_t)
extern "C" IL2CPP_METHOD_ATTR void _SetKeyboardPositionForOverlay_Invoke_mC60EF3EE9EA3B022F48003AAAC43A326A9435030 (_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF * __this, uint64_t ___ulOverlayHandle0, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  ___avoidRect1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef void (*FunctionPointerType) (uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___avoidRect1, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___avoidRect1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 , const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___avoidRect1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___avoidRect1);
							else
								GenericVirtActionInvoker2< uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___avoidRect1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___avoidRect1);
							else
								VirtActionInvoker2< uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___avoidRect1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 , const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___avoidRect1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___avoidRect1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___avoidRect1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 , const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___avoidRect1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___avoidRect1);
						else
							GenericVirtActionInvoker2< uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___avoidRect1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___avoidRect1);
						else
							VirtActionInvoker2< uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___avoidRect1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, uint64_t, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7 , const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___avoidRect1, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__SetKeyboardPositionForOverlay::BeginInvoke(System.UInt64,Valve.VR.HmdRect2_t,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetKeyboardPositionForOverlay_BeginInvoke_m34AB241FE5969F86B641FE313D9E9A9725D56406 (_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF * __this, uint64_t ___ulOverlayHandle0, HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7  ___avoidRect1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetKeyboardPositionForOverlay_BeginInvoke_m34AB241FE5969F86B641FE313D9E9A9725D56406_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(HmdRect2_t_t26B9809BFB69D6D96089D6AE84FA0BB7D1951FF7_il2cpp_TypeInfo_var, &___avoidRect1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVROverlay__SetKeyboardPositionForOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetKeyboardPositionForOverlay_EndInvoke_m71D51A1D6F59E3F314D99E38F1827B36DC4DC7D2 (_SetKeyboardPositionForOverlay_tE8F751444C6D3D63D22133C7B1098D5B0F785BEF * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA (_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA * __this, int32_t ___eTrackingOrigin0, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToKeyboardTransform1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);

}
// System.Void Valve.VR.IVROverlay__SetKeyboardTransformAbsolute::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetKeyboardTransformAbsolute__ctor_mC0D1522A37AB38A5D1A7E68FE9F8504ECC84E848 (_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__SetKeyboardTransformAbsolute::Invoke(Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR void _SetKeyboardTransformAbsolute_Invoke_m3BFA3F61168E229B7AD21D5FDB2492461641ADB9 (_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA * __this, int32_t ___eTrackingOrigin0, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToKeyboardTransform1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef void (*FunctionPointerType) (int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
							else
								GenericVirtActionInvoker2< int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
							else
								VirtActionInvoker2< int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
						else
							GenericVirtActionInvoker2< int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
						else
							VirtActionInvoker2< int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___eTrackingOrigin0, ___pmatTrackingOriginToKeyboardTransform1, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__SetKeyboardTransformAbsolute::BeginInvoke(Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetKeyboardTransformAbsolute_BeginInvoke_mA6626C12320276EEFA102120F5EA7FC9F2D9E9B1 (_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA * __this, int32_t ___eTrackingOrigin0, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToKeyboardTransform1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetKeyboardTransformAbsolute_BeginInvoke_mA6626C12320276EEFA102120F5EA7FC9F2D9E9B1_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_il2cpp_TypeInfo_var, &___eTrackingOrigin0);
	__d_args[1] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pmatTrackingOriginToKeyboardTransform1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVROverlay__SetKeyboardTransformAbsolute::EndInvoke(Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetKeyboardTransformAbsolute_EndInvoke_m46996C32ACEA7E645013C2E58D300E5687162EFF (_SetKeyboardTransformAbsolute_t68E6F1E376F670491B768122B8E3BA90E41910AA * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToKeyboardTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatTrackingOriginToKeyboardTransform0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 (_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 * __this, uint64_t ___ulOverlayHandle0, float ___fAlpha1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fAlpha1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayAlpha::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayAlpha__ctor_mB1C4BEB958C2F21E837CE7CA6E9160F2A52DFD28 (_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayAlpha::Invoke(System.UInt64,System.Single)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayAlpha_Invoke_m41C725C56C1A1EE6F3F1D12832663F5CED3E21BE (_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 * __this, uint64_t ___ulOverlayHandle0, float ___fAlpha1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fAlpha1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fAlpha1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fAlpha1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fAlpha1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fAlpha1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fAlpha1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fAlpha1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fAlpha1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fAlpha1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fAlpha1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fAlpha1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fAlpha1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fAlpha1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fAlpha1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fAlpha1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fAlpha1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayAlpha::BeginInvoke(System.UInt64,System.Single,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayAlpha_BeginInvoke_m6E8CF232055AF047C20E9A3E8924DD24692A8FDF (_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 * __this, uint64_t ___ulOverlayHandle0, float ___fAlpha1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayAlpha_BeginInvoke_m6E8CF232055AF047C20E9A3E8924DD24692A8FDF_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fAlpha1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayAlpha::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayAlpha_EndInvoke_mE506B8120EBA91A239D1611F67E259BF1238CAC3 (_SetOverlayAlpha_t485092656D099136AF21444C52E3779992BE64D2 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 (_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 * __this, uint64_t ___ulOverlayHandle0, float ___fMinDistanceInMeters1, float ___fMaxDistanceInMeters2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayAutoCurveDistanceRangeInMeters__ctor_mEEC29E037D75CACF104934B37E46E441589837CF (_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters::Invoke(System.UInt64,System.Single,System.Single)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayAutoCurveDistanceRangeInMeters_Invoke_mAF6F1EC19C6E071D00980C8155A78584B630711F (_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 * __this, uint64_t ___ulOverlayHandle0, float ___fMinDistanceInMeters1, float ___fMaxDistanceInMeters2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float, float, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float, float, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fMinDistanceInMeters1, ___fMaxDistanceInMeters2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters::BeginInvoke(System.UInt64,System.Single,System.Single,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayAutoCurveDistanceRangeInMeters_BeginInvoke_m1429BDE336895BDC1A0FFF148956D7D312774AF7 (_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 * __this, uint64_t ___ulOverlayHandle0, float ___fMinDistanceInMeters1, float ___fMaxDistanceInMeters2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayAutoCurveDistanceRangeInMeters_BeginInvoke_m1429BDE336895BDC1A0FFF148956D7D312774AF7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fMinDistanceInMeters1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fMaxDistanceInMeters2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayAutoCurveDistanceRangeInMeters::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayAutoCurveDistanceRangeInMeters_EndInvoke_m1695F83D1D5576E736E04490641631C1B682C8CD (_SetOverlayAutoCurveDistanceRangeInMeters_t664208DE44E4EFDC426F4F4ECB21B15E113C3963 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 (_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 * __this, uint64_t ___ulOverlayHandle0, float ___fRed1, float ___fGreen2, float ___fBlue3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float, float, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayColor::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayColor__ctor_mD852CAD6D48578C5753DBBC7D266E4DBCBAB5EB7 (_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayColor::Invoke(System.UInt64,System.Single,System.Single,System.Single)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayColor_Invoke_mF92D5F3F4AA8922B0CEF9C34FBFCCBA274F2BA63 (_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 * __this, uint64_t ___ulOverlayHandle0, float ___fRed1, float ___fGreen2, float ___fBlue3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float, float, float, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
							else
								result = VirtFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, float, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float, float, float, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
						else
							result = VirtFuncInvoker4< int32_t, uint64_t, float, float, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, float, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fRed1, ___fGreen2, ___fBlue3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayColor::BeginInvoke(System.UInt64,System.Single,System.Single,System.Single,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayColor_BeginInvoke_m09C2FC3945D315C3D34762C3E9090D648DB150A4 (_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 * __this, uint64_t ___ulOverlayHandle0, float ___fRed1, float ___fGreen2, float ___fBlue3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayColor_BeginInvoke_m09C2FC3945D315C3D34762C3E9090D648DB150A4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fRed1);
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fGreen2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fBlue3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayColor::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayColor_EndInvoke_m9150D889D242D0778C9E1FC1F4A69F29132AAEA1 (_SetOverlayColor_t90C788015A90396E9666A35A3981194651C06063 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A (_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, intptr_t ___vCenter2, float ___fRadius3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, intptr_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayDualAnalogTransform::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayDualAnalogTransform__ctor_m01DD7109B6808EFADC2753F7AD02FBF3612EC209 (_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayDualAnalogTransform::Invoke(System.UInt64,Valve.VR.EDualAnalogWhich,System.IntPtr,System.Single)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayDualAnalogTransform_Invoke_m2F64111023D5D976741EA905E03C5554637819CA (_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, intptr_t ___vCenter2, float ___fRadius3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, intptr_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, intptr_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, intptr_t, float, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, intptr_t, float >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, intptr_t, float >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, intptr_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);
							else
								result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, intptr_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, intptr_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, intptr_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, intptr_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, intptr_t, float, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, int32_t, intptr_t, float >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint64_t, int32_t, intptr_t, float >::Invoke(targetMethod, targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint64_t, int32_t, intptr_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);
						else
							result = VirtFuncInvoker4< int32_t, uint64_t, int32_t, intptr_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, intptr_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlay0, ___eWhich1, ___vCenter2, ___fRadius3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayDualAnalogTransform::BeginInvoke(System.UInt64,Valve.VR.EDualAnalogWhich,System.IntPtr,System.Single,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayDualAnalogTransform_BeginInvoke_m5C48CB3D7D0D9BAA35CBA9BC8B9EBD57DF4F4DA5 (_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A * __this, uint64_t ___ulOverlay0, int32_t ___eWhich1, intptr_t ___vCenter2, float ___fRadius3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayDualAnalogTransform_BeginInvoke_m5C48CB3D7D0D9BAA35CBA9BC8B9EBD57DF4F4DA5_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlay0);
	__d_args[1] = Box(EDualAnalogWhich_t26DB6059FD57DBF15F7F416304BF27A036E14F4C_il2cpp_TypeInfo_var, &___eWhich1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___vCenter2);
	__d_args[3] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fRadius3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayDualAnalogTransform::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayDualAnalogTransform_EndInvoke_m8544A45C0750B9C5A2D17323D4E10E8F29B53DDC (_SetOverlayDualAnalogTransform_tA3DB2CB2BDCEA3B10AF508E8E7F4DF3D706D609A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E (_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool ___bEnabled2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eOverlayFlag1, static_cast<int32_t>(___bEnabled2));

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayFlag::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayFlag__ctor_m2D035B1FFF53D33FF9F0CEB35614CEFA9199ADBA (_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayFlag::Invoke(System.UInt64,Valve.VR.VROverlayFlags,System.Boolean)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayFlag_Invoke_m8D8AD4B1C263B72ADB94EC024C978A1B52B10543 (_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool ___bEnabled2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, bool, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, bool >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, bool, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eOverlayFlag1, ___bEnabled2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayFlag::BeginInvoke(System.UInt64,Valve.VR.VROverlayFlags,System.Boolean,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayFlag_BeginInvoke_m1FFFA1476168BDF0B5C847C72438E5E7FC9A5998 (_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E * __this, uint64_t ___ulOverlayHandle0, int32_t ___eOverlayFlag1, bool ___bEnabled2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayFlag_BeginInvoke_m1FFFA1476168BDF0B5C847C72438E5E7FC9A5998_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayFlags_t00FDF5B61DD41CC0BFB93B882D56F55412FC3A08_il2cpp_TypeInfo_var, &___eOverlayFlag1);
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bEnabled2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayFlag::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayFlag_EndInvoke_m4E10E7B144E071C6596A445FA95C8AE06C8148EC (_SetOverlayFlag_t8340752FA12C60B8B3D81026326144433AB9F43E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F (_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchFilePath1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchFilePath1U27 to native representation
	char* ____pchFilePath1_marshaled = NULL;
	____pchFilePath1_marshaled = il2cpp_codegen_marshal_string(___pchFilePath1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchFilePath1_marshaled);

	// Marshaling cleanup of parameter U27___pchFilePath1U27 native representation
	il2cpp_codegen_marshal_free(____pchFilePath1_marshaled);
	____pchFilePath1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayFromFile::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayFromFile__ctor_m248A2BB1138959A9AEABEBE773E8821F719799F6 (_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayFromFile::Invoke(System.UInt64,System.String)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayFromFile_Invoke_mEBCCEF6C0E6A7F8E96631A5E0926EAF36EEFDEEB (_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchFilePath1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchFilePath1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchFilePath1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchFilePath1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchFilePath1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchFilePath1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchFilePath1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchFilePath1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchFilePath1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchFilePath1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchFilePath1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchFilePath1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchFilePath1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchFilePath1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchFilePath1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchFilePath1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchFilePath1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayFromFile::BeginInvoke(System.UInt64,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayFromFile_BeginInvoke_m4906F19F8B7529F920A58AA0358B9C7360FC938B (_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchFilePath1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayFromFile_BeginInvoke_m4906F19F8B7529F920A58AA0358B9C7360FC938B_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchFilePath1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayFromFile::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayFromFile_EndInvoke_m532DF36B7CC0D8C4C070159EC439DFD45E745CEA (_SetOverlayFromFile_tA470386180ABEA823FD793D89CA113245128625F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 (_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMethod1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eInputMethod1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayInputMethod::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayInputMethod__ctor_mF424F8D293B39A497873C2DA4E32085168D3E728 (_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayInputMethod::Invoke(System.UInt64,Valve.VR.VROverlayInputMethod)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayInputMethod_Invoke_mC5EC26EFFF103F8801742067A6C7A3F91DD4A301 (_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMethod1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMethod1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMethod1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMethod1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMethod1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMethod1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMethod1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMethod1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMethod1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMethod1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMethod1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMethod1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMethod1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMethod1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMethod1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMethod1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMethod1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayInputMethod::BeginInvoke(System.UInt64,Valve.VR.VROverlayInputMethod,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayInputMethod_BeginInvoke_m877F8DBE1E6D55BF83259FC8F6A78FC60223E3D0 (_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMethod1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayInputMethod_BeginInvoke_m877F8DBE1E6D55BF83259FC8F6A78FC60223E3D0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayInputMethod_t92DF5A3C8C399B2C7BCFA8CFABBC882C20265407_il2cpp_TypeInfo_var, &___eInputMethod1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayInputMethod::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayInputMethod_EndInvoke_mF73D0FDEB473846B57FB1AF5AE38EFD3782A63F8 (_SetOverlayInputMethod_t03517D167879BABD5CBE89B900B0E5C32CEDDA12 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 (_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 * ___pMaskPrimitives1, uint32_t ___unNumMaskPrimitives2, uint32_t ___unPrimitiveSize3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayIntersectionMask::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayIntersectionMask__ctor_m671E733AB0B13958E5BD02D38D5EFF29C4F3953A (_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayIntersectionMask::Invoke(System.UInt64,Valve.VR.VROverlayIntersectionMaskPrimitive_tU26,System.UInt32,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayIntersectionMask_Invoke_m448490050CE34EDB409247F9DB851673854CB62C (_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 * ___pMaskPrimitives1, uint32_t ___unNumMaskPrimitives2, uint32_t ___unPrimitiveSize3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
							else
								result = VirtFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
						else
							result = VirtFuncInvoker4< int32_t, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 *, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pMaskPrimitives1, ___unNumMaskPrimitives2, ___unPrimitiveSize3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayIntersectionMask::BeginInvoke(System.UInt64,Valve.VR.VROverlayIntersectionMaskPrimitive_tU26,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayIntersectionMask_BeginInvoke_m21BF4898B1BCB35F43FCD45E40CEF829BE88C389 (_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 * __this, uint64_t ___ulOverlayHandle0, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 * ___pMaskPrimitives1, uint32_t ___unNumMaskPrimitives2, uint32_t ___unPrimitiveSize3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayIntersectionMask_BeginInvoke_m21BF4898B1BCB35F43FCD45E40CEF829BE88C389_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40_il2cpp_TypeInfo_var, &*___pMaskPrimitives1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unNumMaskPrimitives2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unPrimitiveSize3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayIntersectionMask::EndInvoke(Valve.VR.VROverlayIntersectionMaskPrimitive_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayIntersectionMask_EndInvoke_mB065F1B8E7D9E90A5D07397CA0803F41782D5EE0 (_SetOverlayIntersectionMask_t0D69FC3AE16874D52B32C3E86924F8969457CA04 * __this, VROverlayIntersectionMaskPrimitive_t_t386711BC0E265B2991704FD98FFC953435B01A40 * ___pMaskPrimitives0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pMaskPrimitives0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 (_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvecMouseScale1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pvecMouseScale1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayMouseScale::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayMouseScale__ctor_m944CA00837C1A767AE925390B348E3F37874D309 (_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayMouseScale::Invoke(System.UInt64,Valve.VR.HmdVector2_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayMouseScale_Invoke_m4A469D84CE0A704F7408082E18056C0FB45DBA1F (_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvecMouseScale1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvecMouseScale1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvecMouseScale1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayMouseScale::BeginInvoke(System.UInt64,Valve.VR.HmdVector2_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayMouseScale_BeginInvoke_m2A0805B7230A8B12F828B99CEBCD9D28AFA56D03 (_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 * __this, uint64_t ___ulOverlayHandle0, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvecMouseScale1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayMouseScale_BeginInvoke_m2A0805B7230A8B12F828B99CEBCD9D28AFA56D03_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0_il2cpp_TypeInfo_var, &*___pvecMouseScale1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayMouseScale::EndInvoke(Valve.VR.HmdVector2_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayMouseScale_EndInvoke_m80FD8F772D9B9798885ED6164B758F2CACA970D2 (_SetOverlayMouseScale_tF34E6D516BC82CA6EB05A343FE289C8681F2AE65 * __this, HmdVector2_t_t847ED6878C8EFC37B8A4FCF4511BA21E5DC0C0A0 * ___pvecMouseScale0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pvecMouseScale0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C (_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchName1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchName1U27 to native representation
	char* ____pchName1_marshaled = NULL;
	____pchName1_marshaled = il2cpp_codegen_marshal_string(___pchName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchName1_marshaled);

	// Marshaling cleanup of parameter U27___pchName1U27 native representation
	il2cpp_codegen_marshal_free(____pchName1_marshaled);
	____pchName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayName::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayName__ctor_m2F3C8D65E0C3F23A6D62535857340CB885C3C771 (_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayName::Invoke(System.UInt64,System.String)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayName_Invoke_mD1530A72970F6226AC4AC5B849EFF685A8C46794 (_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchName1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchName1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchName1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchName1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchName1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchName1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchName1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchName1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchName1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchName1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchName1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchName1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchName1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchName1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchName1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchName1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchName1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayName::BeginInvoke(System.UInt64,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayName_BeginInvoke_mF76C96EFE025494E142DB0A3F628B759627E0F6D (_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchName1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayName_BeginInvoke_mF76C96EFE025494E142DB0A3F628B759627E0F6D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchName1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayName::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayName_EndInvoke_m078A3D794A47A8EFC87CDF0FF5D94E0E38F2C61A (_SetOverlayName_tAF1D17AE9D07FCCA173734CA80A3FFD1F39CD20C * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D (_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D * __this, int32_t ___eDirection0, uint64_t ___ulFrom1, uint64_t ___ulTo2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, uint64_t, uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___eDirection0, ___ulFrom1, ___ulTo2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayNeighbor::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayNeighbor__ctor_m64C73B0D05C9CB3E16AD7979AE5401212A7AB259 (_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayNeighbor::Invoke(Valve.VR.EOverlayDirection,System.UInt64,System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayNeighbor_Invoke_m34925530A70B07FB8BF4E7B63D643656EEDBC7BB (_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D * __this, int32_t ___eDirection0, uint64_t ___ulFrom1, uint64_t ___ulTo2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, uint64_t, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eDirection0, ___ulFrom1, ___ulTo2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, uint64_t, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eDirection0, ___ulFrom1, ___ulTo2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, uint64_t, uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___eDirection0, ___ulFrom1, ___ulTo2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, int32_t, uint64_t, uint64_t >::Invoke(targetMethod, targetThis, ___eDirection0, ___ulFrom1, ___ulTo2);
							else
								result = GenericVirtFuncInvoker3< int32_t, int32_t, uint64_t, uint64_t >::Invoke(targetMethod, targetThis, ___eDirection0, ___ulFrom1, ___ulTo2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, int32_t, uint64_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eDirection0, ___ulFrom1, ___ulTo2);
							else
								result = VirtFuncInvoker3< int32_t, int32_t, uint64_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eDirection0, ___ulFrom1, ___ulTo2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, uint64_t, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eDirection0, ___ulFrom1, ___ulTo2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, uint64_t, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eDirection0, ___ulFrom1, ___ulTo2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, uint64_t, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eDirection0, ___ulFrom1, ___ulTo2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, uint64_t, uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___eDirection0, ___ulFrom1, ___ulTo2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, int32_t, uint64_t, uint64_t >::Invoke(targetMethod, targetThis, ___eDirection0, ___ulFrom1, ___ulTo2);
						else
							result = GenericVirtFuncInvoker3< int32_t, int32_t, uint64_t, uint64_t >::Invoke(targetMethod, targetThis, ___eDirection0, ___ulFrom1, ___ulTo2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, int32_t, uint64_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eDirection0, ___ulFrom1, ___ulTo2);
						else
							result = VirtFuncInvoker3< int32_t, int32_t, uint64_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eDirection0, ___ulFrom1, ___ulTo2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, uint64_t, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eDirection0, ___ulFrom1, ___ulTo2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayNeighbor::BeginInvoke(Valve.VR.EOverlayDirection,System.UInt64,System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayNeighbor_BeginInvoke_m304F431B3FDDD2566FD572E326C459D4816FE190 (_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D * __this, int32_t ___eDirection0, uint64_t ___ulFrom1, uint64_t ___ulTo2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayNeighbor_BeginInvoke_m304F431B3FDDD2566FD572E326C459D4816FE190_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(EOverlayDirection_t0038A5EDCC0FD7C1B992DC1FA50DA227DEC35A2B_il2cpp_TypeInfo_var, &___eDirection0);
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulFrom1);
	__d_args[2] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulTo2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayNeighbor::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayNeighbor_EndInvoke_m4A51C3FE22011B8C71E12BF600C9EF8B02636A68 (_SetOverlayNeighbor_t7F066F4586C0872919A9741765D453AFC507732D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 (_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unWidth2, uint32_t ___unHeight3, uint32_t ___unDepth4, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, intptr_t, uint32_t, uint32_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayRaw::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayRaw__ctor_m43750231F2DC12BD70A3510C843C6D9CAA496224 (_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRaw::Invoke(System.UInt64,System.IntPtr,System.UInt32,System.UInt32,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayRaw_Invoke_mF3B5E636A86DE26E4EA09B25F2C857CF73E31DC0 (_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unWidth2, uint32_t ___unHeight3, uint32_t ___unDepth4, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 5)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
							else
								result = GenericVirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
							else
								result = VirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
						else
							result = GenericVirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
						else
							result = VirtFuncInvoker5< int32_t, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, intptr_t, uint32_t, uint32_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pvBuffer1, ___unWidth2, ___unHeight3, ___unDepth4, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayRaw::BeginInvoke(System.UInt64,System.IntPtr,System.UInt32,System.UInt32,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayRaw_BeginInvoke_m4A8EA83F712ADBA1E52F34F8E83882805BF6C60F (_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 * __this, uint64_t ___ulOverlayHandle0, intptr_t ___pvBuffer1, uint32_t ___unWidth2, uint32_t ___unHeight3, uint32_t ___unDepth4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayRaw_BeginInvoke_m4A8EA83F712ADBA1E52F34F8E83882805BF6C60F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pvBuffer1);
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unWidth2);
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unHeight3);
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unDepth4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRaw::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayRaw_EndInvoke_mB5F2D258E125C4293644D6E54A17EF83C9083CB2 (_SetOverlayRaw_tD973F0869128EFB0A62790AABF40382B2024A2D9 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 (_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchRenderModel1, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * ___pColor2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, char*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModel1U27 to native representation
	char* ____pchRenderModel1_marshaled = NULL;
	____pchRenderModel1_marshaled = il2cpp_codegen_marshal_string(___pchRenderModel1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ____pchRenderModel1_marshaled, ___pColor2);

	// Marshaling cleanup of parameter U27___pchRenderModel1U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModel1_marshaled);
	____pchRenderModel1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayRenderModel::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayRenderModel__ctor_m15A18B5BC8EC20ECD99FD115198BFCBE525D469F (_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRenderModel::Invoke(System.UInt64,System.String,Valve.VR.HmdColor_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayRenderModel_Invoke_m0EDE4B33014A1114D2EA52AA74DDB79F2DD6FBCB (_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchRenderModel1, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * ___pColor2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, String_t*, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pchRenderModel1, ___pColor2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayRenderModel::BeginInvoke(System.UInt64,System.String,Valve.VR.HmdColor_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayRenderModel_BeginInvoke_m3CF8C09505F55BE483FC6127B891DBA1BB25F99A (_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 * __this, uint64_t ___ulOverlayHandle0, String_t* ___pchRenderModel1, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * ___pColor2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayRenderModel_BeginInvoke_m3CF8C09505F55BE483FC6127B891DBA1BB25F99A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = ___pchRenderModel1;
	__d_args[2] = Box(HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5_il2cpp_TypeInfo_var, &*___pColor2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRenderModel::EndInvoke(Valve.VR.HmdColor_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayRenderModel_EndInvoke_mB68018478D85882FA8A58ABF5948E8309F1798AC (_SetOverlayRenderModel_tAA25B4B28E325453AF64C5A6E4321AB18A4AE050 * __this, HmdColor_t_t932A4B68843708C831D344AAA211F11C973A17B5 * ___pColor0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pColor0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 (_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unPID1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unPID1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayRenderingPid::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayRenderingPid__ctor_m825247831A9BE0D19C55D2E4F98F23DC3387FD11 (_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRenderingPid::Invoke(System.UInt64,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayRenderingPid_Invoke_m1E22718176093792B6D808987669645C02B49DD4 (_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unPID1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unPID1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unPID1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unPID1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unPID1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unPID1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unPID1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unPID1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unPID1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unPID1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unPID1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unPID1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unPID1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unPID1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unPID1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unPID1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unPID1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayRenderingPid::BeginInvoke(System.UInt64,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayRenderingPid_BeginInvoke_m09554E1B6103C5E61551BAC671E9CB891A0A842A (_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unPID1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayRenderingPid_BeginInvoke_m09554E1B6103C5E61551BAC671E9CB891A0A842A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unPID1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayRenderingPid::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayRenderingPid_EndInvoke_mD11B264D98722B20F620F1E458BC17FB279118CE (_SetOverlayRenderingPid_t99D08F6FC56C55CD868E48ECE9EE92DEDAF19E46 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 (_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unSortOrder1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unSortOrder1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlaySortOrder::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlaySortOrder__ctor_mED8797A30F825F21024FC49E2BAE6441EC99AB3B (_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlaySortOrder::Invoke(System.UInt64,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlaySortOrder_Invoke_mC3F9FC67EDFA41B6DC1FF29B4A2711223EDFBE3D (_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unSortOrder1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unSortOrder1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unSortOrder1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unSortOrder1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unSortOrder1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unSortOrder1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unSortOrder1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unSortOrder1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unSortOrder1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unSortOrder1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unSortOrder1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unSortOrder1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unSortOrder1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unSortOrder1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unSortOrder1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unSortOrder1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unSortOrder1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlaySortOrder::BeginInvoke(System.UInt64,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlaySortOrder_BeginInvoke_m112A3A542DA5828CAA2E38CFCB6BAB659A59027E (_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unSortOrder1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlaySortOrder_BeginInvoke_m112A3A542DA5828CAA2E38CFCB6BAB659A59027E_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unSortOrder1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlaySortOrder::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlaySortOrder_EndInvoke_m850773CEA00B5C5BC2962A181CEB7875D0866522 (_SetOverlaySortOrder_t8E2D7CEDEF35D4A8881A6E81E21470569B0ABC43 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E (_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E * __this, uint64_t ___ulOverlayHandle0, float ___fTexelAspect1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fTexelAspect1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTexelAspect::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayTexelAspect__ctor_m9DFB5604A9CB002736264023DC8CD721CF950DCC (_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTexelAspect::Invoke(System.UInt64,System.Single)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTexelAspect_Invoke_mD767503DA38D88F985AEE3607F9B9C1181C7CC9A (_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E * __this, uint64_t ___ulOverlayHandle0, float ___fTexelAspect1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fTexelAspect1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fTexelAspect1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTexelAspect::BeginInvoke(System.UInt64,System.Single,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTexelAspect_BeginInvoke_m58CCF45015AAE49E29B23EA6989353B966705AB4 (_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E * __this, uint64_t ___ulOverlayHandle0, float ___fTexelAspect1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTexelAspect_BeginInvoke_m58CCF45015AAE49E29B23EA6989353B966705AB4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fTexelAspect1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTexelAspect::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTexelAspect_EndInvoke_m98E925E2AE875A68B07B0034DE85BC564861FCF9 (_SetOverlayTexelAspect_tF826B2248194D16DB5CED1FC87D8901442627F8E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C (_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C * __this, uint64_t ___ulOverlayHandle0, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ___pTexture1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pTexture1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTexture::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayTexture__ctor_m887F388513A68F4B531327FAF3219E6FD72862C0 (_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTexture::Invoke(System.UInt64,Valve.VR.Texture_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTexture_Invoke_mE1DF4DF9CF46EF89A92A4B8130750061D5D018C2 (_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C * __this, uint64_t ___ulOverlayHandle0, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ___pTexture1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pTexture1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pTexture1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pTexture1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pTexture1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pTexture1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pTexture1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pTexture1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pTexture1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pTexture1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pTexture1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pTexture1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pTexture1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pTexture1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pTexture1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pTexture1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pTexture1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTexture::BeginInvoke(System.UInt64,Valve.VR.Texture_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTexture_BeginInvoke_mB999DBD7FB432453B3EFE7AE80E8668982D60E30 (_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C * __this, uint64_t ___ulOverlayHandle0, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ___pTexture1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTexture_BeginInvoke_mB999DBD7FB432453B3EFE7AE80E8668982D60E30_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D_il2cpp_TypeInfo_var, &*___pTexture1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTexture::EndInvoke(Valve.VR.Texture_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTexture_EndInvoke_m6FB11EB8717A2D22929C67145DBE4F43D75EE36E (_SetOverlayTexture_t86A7B29953F9FB166BE2AB4A3C1D49FB7258D78C * __this, Texture_t_tBBD7CD2974A80205F362D98F631A21D85330120D * ___pTexture0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pTexture0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E (_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pOverlayTextureBounds1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___pOverlayTextureBounds1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTextureBounds::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayTextureBounds__ctor_m130C0C480155C988A718878F200A36B676A92008 (_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTextureBounds::Invoke(System.UInt64,Valve.VR.VRTextureBounds_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTextureBounds_Invoke_m8A60442F145E24F0C5AF084E2982DC2030705475 (_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pOverlayTextureBounds1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___pOverlayTextureBounds1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTextureBounds::BeginInvoke(System.UInt64,Valve.VR.VRTextureBounds_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTextureBounds_BeginInvoke_m2237D560AFEB98FE3C8CDCE8B18DB3D6BD1C5B45 (_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E * __this, uint64_t ___ulOverlayHandle0, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pOverlayTextureBounds1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTextureBounds_BeginInvoke_m2237D560AFEB98FE3C8CDCE8B18DB3D6BD1C5B45_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813_il2cpp_TypeInfo_var, &*___pOverlayTextureBounds1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTextureBounds::EndInvoke(Valve.VR.VRTextureBounds_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTextureBounds_EndInvoke_m0822B82FAC8BA86A72F1168AE9102A72D0E5D4BB (_SetOverlayTextureBounds_t16950882A226DFCCAA95E54A7A5254DE1EC13C0E * __this, VRTextureBounds_t_tA84A0B9DA2ED7706E784D3205C9D029C64EB2813 * ___pOverlayTextureBounds0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOverlayTextureBounds0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F (_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTextureColorSpace1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eTextureColorSpace1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTextureColorSpace::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayTextureColorSpace__ctor_mD7BEE920B729F0FC8D066378E0D545741B036272 (_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTextureColorSpace::Invoke(System.UInt64,Valve.VR.EColorSpace)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTextureColorSpace_Invoke_m03EDB23CB9060DCC7F7387478A6198C4EBF14181 (_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTextureColorSpace1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTextureColorSpace1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTextureColorSpace::BeginInvoke(System.UInt64,Valve.VR.EColorSpace,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTextureColorSpace_BeginInvoke_mE1E2B336D5F6834AF5FBF7610F2807C2E88DE899 (_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTextureColorSpace1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTextureColorSpace_BeginInvoke_mE1E2B336D5F6834AF5FBF7610F2807C2E88DE899_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(EColorSpace_t4BA9325EC9965649AA0BF0C31F4206DF95F7CE04_il2cpp_TypeInfo_var, &___eTextureColorSpace1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTextureColorSpace::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTextureColorSpace_EndInvoke_m923BD769DBABA6167C079E7061CC174C6CD4E35B (_SetOverlayTextureColorSpace_t93BBC2DC0669C640680D180010362DA29418A61F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 (_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTransformAbsolute::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayTransformAbsolute__ctor_mF560AAC0F43D3209F1E3247486240C361D648C63 (_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformAbsolute::Invoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformAbsolute_Invoke_m87232ADD227A7A22AEA23C88C6D04A0E5A9A5D7D (_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eTrackingOrigin1, ___pmatTrackingOriginToOverlayTransform2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTransformAbsolute::BeginInvoke(System.UInt64,Valve.VR.ETrackingUniverseOrigin,Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTransformAbsolute_BeginInvoke_m81015593C78D89E4113D2A8DEA07D15690D6E831 (_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eTrackingOrigin1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTransformAbsolute_BeginInvoke_m81015593C78D89E4113D2A8DEA07D15690D6E831_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(ETrackingUniverseOrigin_t56C673CDD7449F9E74CAC46CDFC8FB96C250F1F6_il2cpp_TypeInfo_var, &___eTrackingOrigin1);
	__d_args[2] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pmatTrackingOriginToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformAbsolute::EndInvoke(Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformAbsolute_EndInvoke_m316FFFE5E1D4048D6FB9A01B87666B0055DB6E6E (_SetOverlayTransformAbsolute_t31CED104B5F205D7B3DA9F79A067FAEBC8FE5B06 * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackingOriginToOverlayTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatTrackingOriginToOverlayTransform0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 (_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulOverlayHandleParent1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatParentOverlayToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayTransformOverlayRelative__ctor_m9E0A733DE7F0518DF282F813B6CF39EC0F73EEDC (_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative::Invoke(System.UInt64,System.UInt64,Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformOverlayRelative_Invoke_m363F5B0AD987459C3843772ACF03E411263D689B (_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulOverlayHandleParent1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatParentOverlayToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint64_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___ulOverlayHandleParent1, ___pmatParentOverlayToOverlayTransform2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative::BeginInvoke(System.UInt64,System.UInt64,Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTransformOverlayRelative_BeginInvoke_m686E3B505A9DC3A1C98F7664E7C53FE0013E783C (_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 * __this, uint64_t ___ulOverlayHandle0, uint64_t ___ulOverlayHandleParent1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatParentOverlayToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTransformOverlayRelative_BeginInvoke_m686E3B505A9DC3A1C98F7664E7C53FE0013E783C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandleParent1);
	__d_args[2] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pmatParentOverlayToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformOverlayRelative::EndInvoke(Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformOverlayRelative_EndInvoke_m253021D20070E55A178377DE9CA1EEF0FFF13DDD (_SetOverlayTransformOverlayRelative_tBE2D34EC83522675BF338A661C8BF8F2AD0B1171 * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatParentOverlayToOverlayTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatParentOverlayToOverlayTransform0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 (_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unDeviceIndex1, String_t* ___pchComponentName2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchComponentName2U27 to native representation
	char* ____pchComponentName2_marshaled = NULL;
	____pchComponentName2_marshaled = il2cpp_codegen_marshal_string(___pchComponentName2);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unDeviceIndex1, ____pchComponentName2_marshaled);

	// Marshaling cleanup of parameter U27___pchComponentName2U27 native representation
	il2cpp_codegen_marshal_free(____pchComponentName2_marshaled);
	____pchComponentName2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayTransformTrackedDeviceComponent__ctor_m793559EE7D5A9A4C506793C02F7D0A812B593A4F (_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent::Invoke(System.UInt64,System.UInt32,System.String)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformTrackedDeviceComponent_Invoke_m0309BBD0C7DAA9F032600FE766E04B436B1FC591 (_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unDeviceIndex1, String_t* ___pchComponentName2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unDeviceIndex1, ___pchComponentName2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent::BeginInvoke(System.UInt64,System.UInt32,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTransformTrackedDeviceComponent_BeginInvoke_m028EDE0DED58B281AF0B5674A3D9F19B36EAB732 (_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unDeviceIndex1, String_t* ___pchComponentName2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTransformTrackedDeviceComponent_BeginInvoke_m028EDE0DED58B281AF0B5674A3D9F19B36EAB732_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unDeviceIndex1);
	__d_args[2] = ___pchComponentName2;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceComponent::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformTrackedDeviceComponent_EndInvoke_mF24062870C59FDF67AD205B8FEA44D6D23A44713 (_SetOverlayTransformTrackedDeviceComponent_tF9FD4F36D296D043ABC5DE202269E6EF46D305B8 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 (_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unTrackedDevice1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackedDeviceToOverlayTransform2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayTransformTrackedDeviceRelative__ctor_m2B506DED9E38EF74832F6557EE6B1E4F3E600096 (_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative::Invoke(System.UInt64,System.UInt32,Valve.VR.HmdMatrix34_tU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformTrackedDeviceRelative_Invoke_m971F56E5E4A882350790659A3D9647B5AD7EF16E (_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unTrackedDevice1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackedDeviceToOverlayTransform2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
							else
								result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
						else
							result = VirtFuncInvoker3< int32_t, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, uint32_t, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___unTrackedDevice1, ___pmatTrackedDeviceToOverlayTransform2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative::BeginInvoke(System.UInt64,System.UInt32,Valve.VR.HmdMatrix34_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayTransformTrackedDeviceRelative_BeginInvoke_m29D237B13EA981816ADB993321A5F8DCFFB4D870 (_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 * __this, uint64_t ___ulOverlayHandle0, uint32_t ___unTrackedDevice1, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackedDeviceToOverlayTransform2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayTransformTrackedDeviceRelative_BeginInvoke_m29D237B13EA981816ADB993321A5F8DCFFB4D870_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unTrackedDevice1);
	__d_args[2] = Box(HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504_il2cpp_TypeInfo_var, &*___pmatTrackedDeviceToOverlayTransform2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayTransformTrackedDeviceRelative::EndInvoke(Valve.VR.HmdMatrix34_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayTransformTrackedDeviceRelative_EndInvoke_m82E3417CF1B97692394DB53E587DC4B9E0903A0B (_SetOverlayTransformTrackedDeviceRelative_t113CEE4F38A0778EDB08EB9688A42870EBCB5FA7 * __this, HmdMatrix34_t_tA0FE165952174421B5D3FA7C1A35A7E67C2A1504 * ___pmatTrackedDeviceToOverlayTransform0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pmatTrackedDeviceToOverlayTransform0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 (_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 * __this, uint64_t ___ulOverlayHandle0, float ___fWidthInMeters1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___fWidthInMeters1);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__SetOverlayWidthInMeters::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetOverlayWidthInMeters__ctor_m117432B9BB2CDB24BB29D062297A376955999DC0 (_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayWidthInMeters::Invoke(System.UInt64,System.Single)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayWidthInMeters_Invoke_m61F392896A702D1FEF3FF9379BA2B6AC01AC9235 (_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 * __this, uint64_t ___ulOverlayHandle0, float ___fWidthInMeters1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
							else
								result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, float, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
						else
							result = VirtFuncInvoker2< int32_t, uint64_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___fWidthInMeters1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___fWidthInMeters1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__SetOverlayWidthInMeters::BeginInvoke(System.UInt64,System.Single,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetOverlayWidthInMeters_BeginInvoke_m153BC6AB94C83F6B941B4A06C50CF92F99160ACE (_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 * __this, uint64_t ___ulOverlayHandle0, float ___fWidthInMeters1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetOverlayWidthInMeters_BeginInvoke_m153BC6AB94C83F6B941B4A06C50CF92F99160ACE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___fWidthInMeters1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__SetOverlayWidthInMeters::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SetOverlayWidthInMeters_EndInvoke_m1974CB0E7D73694F06F0FD81F2A50B1911AC5752 (_SetOverlayWidthInMeters_t590B196060154801B6899FCCABFC5E2E7891E184 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 (_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 * __this, String_t* ___pchOverlayToShow0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchOverlayToShow0U27 to native representation
	char* ____pchOverlayToShow0_marshaled = NULL;
	____pchOverlayToShow0_marshaled = il2cpp_codegen_marshal_string(___pchOverlayToShow0);

	// Native function invocation
	il2cppPInvokeFunc(____pchOverlayToShow0_marshaled);

	// Marshaling cleanup of parameter U27___pchOverlayToShow0U27 native representation
	il2cpp_codegen_marshal_free(____pchOverlayToShow0_marshaled);
	____pchOverlayToShow0_marshaled = NULL;

}
// System.Void Valve.VR.IVROverlay__ShowDashboard::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ShowDashboard__ctor_m5D0D43D64AC1800D70034709DC18887BBE24B646 (_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVROverlay__ShowDashboard::Invoke(System.String)
extern "C" IL2CPP_METHOD_ATTR void _ShowDashboard_Invoke_m337CB290E85E657132191284575F289A0DCFF631 (_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 * __this, String_t* ___pchOverlayToShow0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayToShow0, targetMethod);
				}
			}
			else if (___parameterCount != 1)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, ___pchOverlayToShow0);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, ___pchOverlayToShow0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayToShow0);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayToShow0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< String_t* >::Invoke(targetMethod, targetThis, ___pchOverlayToShow0);
							else
								GenericVirtActionInvoker1< String_t* >::Invoke(targetMethod, targetThis, ___pchOverlayToShow0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayToShow0);
							else
								VirtActionInvoker1< String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayToShow0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayToShow0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayToShow0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, ___pchOverlayToShow0);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, ___pchOverlayToShow0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchOverlayToShow0);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchOverlayToShow0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (String_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pchOverlayToShow0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< String_t* >::Invoke(targetMethod, targetThis, ___pchOverlayToShow0);
						else
							GenericVirtActionInvoker1< String_t* >::Invoke(targetMethod, targetThis, ___pchOverlayToShow0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchOverlayToShow0);
						else
							VirtActionInvoker1< String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchOverlayToShow0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchOverlayToShow0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowDashboard::BeginInvoke(System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ShowDashboard_BeginInvoke_m7551B42ABBDD82574BCCB0C712B33F34C8E9E1D7 (_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 * __this, String_t* ___pchOverlayToShow0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___pchOverlayToShow0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVROverlay__ShowDashboard::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _ShowDashboard_EndInvoke_m8C091D8116D3BC46A5795C8E278FB6DF0C4CB0FA (_ShowDashboard_tBEED079CB61043D20B473B16CC4A983D38180911 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 (_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 * __this, int32_t ___eInputMode0, int32_t ___eLineInputMode1, String_t* ___pchDescription2, uint32_t ___unCharMax3, String_t* ___pchExistingText4, bool ___bUseMinimalMode5, uint64_t ___uUserValue6, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, int32_t, char*, uint32_t, char*, int32_t, uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchDescription2U27 to native representation
	char* ____pchDescription2_marshaled = NULL;
	____pchDescription2_marshaled = il2cpp_codegen_marshal_string(___pchDescription2);

	// Marshaling of parameter U27___pchExistingText4U27 to native representation
	char* ____pchExistingText4_marshaled = NULL;
	____pchExistingText4_marshaled = il2cpp_codegen_marshal_string(___pchExistingText4);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___eInputMode0, ___eLineInputMode1, ____pchDescription2_marshaled, ___unCharMax3, ____pchExistingText4_marshaled, static_cast<int32_t>(___bUseMinimalMode5), ___uUserValue6);

	// Marshaling cleanup of parameter U27___pchDescription2U27 native representation
	il2cpp_codegen_marshal_free(____pchDescription2_marshaled);
	____pchDescription2_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchExistingText4U27 native representation
	il2cpp_codegen_marshal_free(____pchExistingText4_marshaled);
	____pchExistingText4_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ShowKeyboard::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ShowKeyboard__ctor_mB1E540D5448D695E4F2F37980B0F171761FB8158 (_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowKeyboard::Invoke(System.Int32,System.Int32,System.String,System.UInt32,System.String,System.Boolean,System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _ShowKeyboard_Invoke_m643A06DE1DB8009979CB21F414378DB1FD2A1F4C (_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 * __this, int32_t ___eInputMode0, int32_t ___eLineInputMode1, String_t* ___pchDescription2, uint32_t ___unCharMax3, String_t* ___pchExistingText4, bool ___bUseMinimalMode5, uint64_t ___uUserValue6, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 7)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
							else
								result = GenericVirtFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
							else
								result = VirtFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 7)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
						else
							result = GenericVirtFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
						else
							result = VirtFuncInvoker7< int32_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eInputMode0, ___eLineInputMode1, ___pchDescription2, ___unCharMax3, ___pchExistingText4, ___bUseMinimalMode5, ___uUserValue6, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowKeyboard::BeginInvoke(System.Int32,System.Int32,System.String,System.UInt32,System.String,System.Boolean,System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ShowKeyboard_BeginInvoke_m36A740B6D7D7DCAB925C7B884365F942A4B5904F (_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 * __this, int32_t ___eInputMode0, int32_t ___eLineInputMode1, String_t* ___pchDescription2, uint32_t ___unCharMax3, String_t* ___pchExistingText4, bool ___bUseMinimalMode5, uint64_t ___uUserValue6, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback7, RuntimeObject * ___object8, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ShowKeyboard_BeginInvoke_m36A740B6D7D7DCAB925C7B884365F942A4B5904F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[8] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___eInputMode0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___eLineInputMode1);
	__d_args[2] = ___pchDescription2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unCharMax3);
	__d_args[4] = ___pchExistingText4;
	__d_args[5] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bUseMinimalMode5);
	__d_args[6] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___uUserValue6);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback7, (RuntimeObject*)___object8);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowKeyboard::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _ShowKeyboard_EndInvoke_m0EFE6062AF6E6C5432933E7A23F61DDDFBEB86AB (_ShowKeyboard_t98D2EB25B0D614804A982C0620341AD5B9ED17A1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 (_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMode1, int32_t ___eLineInputMode2, String_t* ___pchDescription3, uint32_t ___unCharMax4, String_t* ___pchExistingText5, bool ___bUseMinimalMode6, uint64_t ___uUserValue7, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t, int32_t, int32_t, char*, uint32_t, char*, int32_t, uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchDescription3U27 to native representation
	char* ____pchDescription3_marshaled = NULL;
	____pchDescription3_marshaled = il2cpp_codegen_marshal_string(___pchDescription3);

	// Marshaling of parameter U27___pchExistingText5U27 to native representation
	char* ____pchExistingText5_marshaled = NULL;
	____pchExistingText5_marshaled = il2cpp_codegen_marshal_string(___pchExistingText5);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ____pchDescription3_marshaled, ___unCharMax4, ____pchExistingText5_marshaled, static_cast<int32_t>(___bUseMinimalMode6), ___uUserValue7);

	// Marshaling cleanup of parameter U27___pchDescription3U27 native representation
	il2cpp_codegen_marshal_free(____pchDescription3_marshaled);
	____pchDescription3_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchExistingText5U27 native representation
	il2cpp_codegen_marshal_free(____pchExistingText5_marshaled);
	____pchExistingText5_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ShowKeyboardForOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ShowKeyboardForOverlay__ctor_m68E9E4986E1E74DFC1FFC4F3716CEC1604899E14 (_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowKeyboardForOverlay::Invoke(System.UInt64,System.Int32,System.Int32,System.String,System.UInt32,System.String,System.Boolean,System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _ShowKeyboardForOverlay_Invoke_m8C4BAB1D5E47EDEF42DD7D07FDCD0C872A2A7E65 (_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMode1, int32_t ___eLineInputMode2, String_t* ___pchDescription3, uint32_t ___unCharMax4, String_t* ___pchExistingText5, bool ___bUseMinimalMode6, uint64_t ___uUserValue7, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 8)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
							else
								result = GenericVirtFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
							else
								result = VirtFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 8)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
						else
							result = GenericVirtFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
						else
							result = VirtFuncInvoker8< int32_t, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, int32_t, int32_t, String_t*, uint32_t, String_t*, bool, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, ___eInputMode1, ___eLineInputMode2, ___pchDescription3, ___unCharMax4, ___pchExistingText5, ___bUseMinimalMode6, ___uUserValue7, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowKeyboardForOverlay::BeginInvoke(System.UInt64,System.Int32,System.Int32,System.String,System.UInt32,System.String,System.Boolean,System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ShowKeyboardForOverlay_BeginInvoke_m4F1F5FF751C38B75BCA3B3FB13CC04B7AE2D2950 (_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 * __this, uint64_t ___ulOverlayHandle0, int32_t ___eInputMode1, int32_t ___eLineInputMode2, String_t* ___pchDescription3, uint32_t ___unCharMax4, String_t* ___pchExistingText5, bool ___bUseMinimalMode6, uint64_t ___uUserValue7, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback8, RuntimeObject * ___object9, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ShowKeyboardForOverlay_BeginInvoke_m4F1F5FF751C38B75BCA3B3FB13CC04B7AE2D2950_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[9] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___eInputMode1);
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___eLineInputMode2);
	__d_args[3] = ___pchDescription3;
	__d_args[4] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unCharMax4);
	__d_args[5] = ___pchExistingText5;
	__d_args[6] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bUseMinimalMode6);
	__d_args[7] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___uUserValue7);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback8, (RuntimeObject*)___object9);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowKeyboardForOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _ShowKeyboardForOverlay_EndInvoke_mF1536A67C55F5C494E1648FAA651B4F91C2DB13B (_ShowKeyboardForOverlay_tCE9C6E4C2B3194385B76B56ADBA71A2C7F4D87D6 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F (_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F * __this, String_t* ___pchText0, String_t* ___pchCaption1, String_t* ___pchButton0Text2, String_t* ___pchButton1Text3, String_t* ___pchButton2Text4, String_t* ___pchButton3Text5, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, char*, char*, char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchText0U27 to native representation
	char* ____pchText0_marshaled = NULL;
	____pchText0_marshaled = il2cpp_codegen_marshal_string(___pchText0);

	// Marshaling of parameter U27___pchCaption1U27 to native representation
	char* ____pchCaption1_marshaled = NULL;
	____pchCaption1_marshaled = il2cpp_codegen_marshal_string(___pchCaption1);

	// Marshaling of parameter U27___pchButton0Text2U27 to native representation
	char* ____pchButton0Text2_marshaled = NULL;
	____pchButton0Text2_marshaled = il2cpp_codegen_marshal_string(___pchButton0Text2);

	// Marshaling of parameter U27___pchButton1Text3U27 to native representation
	char* ____pchButton1Text3_marshaled = NULL;
	____pchButton1Text3_marshaled = il2cpp_codegen_marshal_string(___pchButton1Text3);

	// Marshaling of parameter U27___pchButton2Text4U27 to native representation
	char* ____pchButton2Text4_marshaled = NULL;
	____pchButton2Text4_marshaled = il2cpp_codegen_marshal_string(___pchButton2Text4);

	// Marshaling of parameter U27___pchButton3Text5U27 to native representation
	char* ____pchButton3Text5_marshaled = NULL;
	____pchButton3Text5_marshaled = il2cpp_codegen_marshal_string(___pchButton3Text5);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchText0_marshaled, ____pchCaption1_marshaled, ____pchButton0Text2_marshaled, ____pchButton1Text3_marshaled, ____pchButton2Text4_marshaled, ____pchButton3Text5_marshaled);

	// Marshaling cleanup of parameter U27___pchText0U27 native representation
	il2cpp_codegen_marshal_free(____pchText0_marshaled);
	____pchText0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchCaption1U27 native representation
	il2cpp_codegen_marshal_free(____pchCaption1_marshaled);
	____pchCaption1_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchButton0Text2U27 native representation
	il2cpp_codegen_marshal_free(____pchButton0Text2_marshaled);
	____pchButton0Text2_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchButton1Text3U27 native representation
	il2cpp_codegen_marshal_free(____pchButton1Text3_marshaled);
	____pchButton1Text3_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchButton2Text4U27 native representation
	il2cpp_codegen_marshal_free(____pchButton2Text4_marshaled);
	____pchButton2Text4_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchButton3Text5U27 native representation
	il2cpp_codegen_marshal_free(____pchButton3Text5_marshaled);
	____pchButton3Text5_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ShowMessageOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ShowMessageOverlay__ctor_mD0B2337D14025B40D014E47D9FBA1BE38D63EB08 (_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.VRMessageOverlayResponse Valve.VR.IVROverlay__ShowMessageOverlay::Invoke(System.String,System.String,System.String,System.String,System.String,System.String)
extern "C" IL2CPP_METHOD_ATTR int32_t _ShowMessageOverlay_Invoke_m41EED048EFF1EDCB6BBE82B7D54EDABED87D2FCC (_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F * __this, String_t* ___pchText0, String_t* ___pchCaption1, String_t* ___pchButton0Text2, String_t* ___pchButton1Text3, String_t* ___pchButton2Text4, String_t* ___pchButton3Text5, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 6)
				{
					// open
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
			}
			else if (___parameterCount != 6)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
							else
								result = GenericVirtFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
							else
								result = VirtFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
							else
								result = GenericVirtFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
							else
								result = VirtFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 6)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
			}
		}
		else if (___parameterCount != 6)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
						else
							result = GenericVirtFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
						else
							result = VirtFuncInvoker5< int32_t, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
						else
							result = GenericVirtFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
						else
							result = VirtFuncInvoker6< int32_t, String_t*, String_t*, String_t*, String_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, String_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchText0, ___pchCaption1, ___pchButton0Text2, ___pchButton1Text3, ___pchButton2Text4, ___pchButton3Text5, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowMessageOverlay::BeginInvoke(System.String,System.String,System.String,System.String,System.String,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ShowMessageOverlay_BeginInvoke_m0B9015C1D26877E31FCB10BC518A54D7C37CA3EF (_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F * __this, String_t* ___pchText0, String_t* ___pchCaption1, String_t* ___pchButton0Text2, String_t* ___pchButton1Text3, String_t* ___pchButton2Text4, String_t* ___pchButton3Text5, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback6, RuntimeObject * ___object7, const RuntimeMethod* method)
{
	void *__d_args[7] = {0};
	__d_args[0] = ___pchText0;
	__d_args[1] = ___pchCaption1;
	__d_args[2] = ___pchButton0Text2;
	__d_args[3] = ___pchButton1Text3;
	__d_args[4] = ___pchButton2Text4;
	__d_args[5] = ___pchButton3Text5;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback6, (RuntimeObject*)___object7);
}
// Valve.VR.VRMessageOverlayResponse Valve.VR.IVROverlay__ShowMessageOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _ShowMessageOverlay_EndInvoke_m1890BA8E818DA5F8501AD62BB3CC8E7930F0C4A4 (_ShowMessageOverlay_t897BD5AA22E792AE7F7BB67EE7932C772034F94F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 (_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint64_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___ulOverlayHandle0);

	return returnValue;
}
// System.Void Valve.VR.IVROverlay__ShowOverlay::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _ShowOverlay__ctor_m9E540D2591352FA5E0BB2F06480CC92A6F03533B (_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowOverlay::Invoke(System.UInt64)
extern "C" IL2CPP_METHOD_ATTR int32_t _ShowOverlay_Invoke_mBE6A5A704FD7BDEF4DED513867083654E7D95DB2 (_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 * __this, uint64_t ___ulOverlayHandle0, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
							else
								result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
							else
								result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint64_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___ulOverlayHandle0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
						else
							result = GenericVirtFuncInvoker1< int32_t, uint64_t >::Invoke(targetMethod, targetThis, ___ulOverlayHandle0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___ulOverlayHandle0);
						else
							result = VirtFuncInvoker1< int32_t, uint64_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___ulOverlayHandle0);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint64_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___ulOverlayHandle0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVROverlay__ShowOverlay::BeginInvoke(System.UInt64,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _ShowOverlay_BeginInvoke_m552505F26E04A2D910330088B23B4B05B45931CC (_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 * __this, uint64_t ___ulOverlayHandle0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_ShowOverlay_BeginInvoke_m552505F26E04A2D910330088B23B4B05B45931CC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(UInt64_tA02DF3B59C8FC4A849BD207DA11038CC64E4CB4E_il2cpp_TypeInfo_var, &___ulOverlayHandle0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// Valve.VR.EVROverlayError Valve.VR.IVROverlay__ShowOverlay::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _ShowOverlay_EndInvoke_mA1E567B624C412284A5C1405D3884A24840E44FA (_ShowOverlay_tC32FAC5415BB980F11111857B4CC787DB5F5AE61 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRRenderModels
extern "C" void IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshal_pinvoke(const IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44& unmarshaled, IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshaled_pinvoke& marshaled)
{
	marshaled.___LoadRenderModel_Async_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadRenderModel_Async_0()));
	marshaled.___FreeRenderModel_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeRenderModel_1()));
	marshaled.___LoadTexture_Async_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadTexture_Async_2()));
	marshaled.___FreeTexture_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeTexture_3()));
	marshaled.___LoadTextureD3D11_Async_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadTextureD3D11_Async_4()));
	marshaled.___LoadIntoTextureD3D11_Async_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadIntoTextureD3D11_Async_5()));
	marshaled.___FreeTextureD3D11_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeTextureD3D11_6()));
	marshaled.___GetRenderModelName_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelName_7()));
	marshaled.___GetRenderModelCount_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelCount_8()));
	marshaled.___GetComponentCount_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentCount_9()));
	marshaled.___GetComponentName_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentName_10()));
	marshaled.___GetComponentButtonMask_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentButtonMask_11()));
	marshaled.___GetComponentRenderModelName_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentRenderModelName_12()));
	marshaled.___GetComponentState_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentState_13()));
	marshaled.___RenderModelHasComponent_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RenderModelHasComponent_14()));
	marshaled.___GetRenderModelThumbnailURL_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelThumbnailURL_15()));
	marshaled.___GetRenderModelOriginalPath_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelOriginalPath_16()));
	marshaled.___GetRenderModelErrorNameFromEnum_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelErrorNameFromEnum_17()));
}
extern "C" void IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshal_pinvoke_back(const IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshaled_pinvoke& marshaled, IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_LoadRenderModel_Async_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C>(marshaled.___LoadRenderModel_Async_0, _LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeRenderModel_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA>(marshaled.___FreeRenderModel_1, _FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadTexture_Async_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA>(marshaled.___LoadTexture_Async_2, _LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeTexture_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A>(marshaled.___FreeTexture_3, _FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadTextureD3D11_Async_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB>(marshaled.___LoadTextureD3D11_Async_4, _LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadIntoTextureD3D11_Async_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A>(marshaled.___LoadIntoTextureD3D11_Async_5, _LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeTextureD3D11_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415>(marshaled.___FreeTextureD3D11_6, _FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelName_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5>(marshaled.___GetRenderModelName_7, _GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelCount_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D>(marshaled.___GetRenderModelCount_8, _GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentCount_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983>(marshaled.___GetComponentCount_9, _GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentName_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1>(marshaled.___GetComponentName_10, _GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentButtonMask_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834>(marshaled.___GetComponentButtonMask_11, _GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentRenderModelName_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15>(marshaled.___GetComponentRenderModelName_12, _GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentState_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545>(marshaled.___GetComponentState_13, _GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545_il2cpp_TypeInfo_var));
	unmarshaled.set_RenderModelHasComponent_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A>(marshaled.___RenderModelHasComponent_14, _RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelThumbnailURL_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982>(marshaled.___GetRenderModelThumbnailURL_15, _GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelOriginalPath_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2>(marshaled.___GetRenderModelOriginalPath_16, _GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelErrorNameFromEnum_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51>(marshaled.___GetRenderModelErrorNameFromEnum_17, _GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRRenderModels
extern "C" void IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshal_pinvoke_cleanup(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRRenderModels
extern "C" void IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshal_com(const IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44& unmarshaled, IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshaled_com& marshaled)
{
	marshaled.___LoadRenderModel_Async_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadRenderModel_Async_0()));
	marshaled.___FreeRenderModel_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeRenderModel_1()));
	marshaled.___LoadTexture_Async_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadTexture_Async_2()));
	marshaled.___FreeTexture_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeTexture_3()));
	marshaled.___LoadTextureD3D11_Async_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadTextureD3D11_Async_4()));
	marshaled.___LoadIntoTextureD3D11_Async_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadIntoTextureD3D11_Async_5()));
	marshaled.___FreeTextureD3D11_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_FreeTextureD3D11_6()));
	marshaled.___GetRenderModelName_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelName_7()));
	marshaled.___GetRenderModelCount_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelCount_8()));
	marshaled.___GetComponentCount_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentCount_9()));
	marshaled.___GetComponentName_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentName_10()));
	marshaled.___GetComponentButtonMask_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentButtonMask_11()));
	marshaled.___GetComponentRenderModelName_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentRenderModelName_12()));
	marshaled.___GetComponentState_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetComponentState_13()));
	marshaled.___RenderModelHasComponent_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RenderModelHasComponent_14()));
	marshaled.___GetRenderModelThumbnailURL_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelThumbnailURL_15()));
	marshaled.___GetRenderModelOriginalPath_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelOriginalPath_16()));
	marshaled.___GetRenderModelErrorNameFromEnum_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRenderModelErrorNameFromEnum_17()));
}
extern "C" void IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshal_com_back(const IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshaled_com& marshaled, IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_LoadRenderModel_Async_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C>(marshaled.___LoadRenderModel_Async_0, _LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeRenderModel_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA>(marshaled.___FreeRenderModel_1, _FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadTexture_Async_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA>(marshaled.___LoadTexture_Async_2, _LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeTexture_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A>(marshaled.___FreeTexture_3, _FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadTextureD3D11_Async_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB>(marshaled.___LoadTextureD3D11_Async_4, _LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB_il2cpp_TypeInfo_var));
	unmarshaled.set_LoadIntoTextureD3D11_Async_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A>(marshaled.___LoadIntoTextureD3D11_Async_5, _LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A_il2cpp_TypeInfo_var));
	unmarshaled.set_FreeTextureD3D11_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415>(marshaled.___FreeTextureD3D11_6, _FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelName_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5>(marshaled.___GetRenderModelName_7, _GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelCount_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D>(marshaled.___GetRenderModelCount_8, _GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentCount_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983>(marshaled.___GetComponentCount_9, _GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentName_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1>(marshaled.___GetComponentName_10, _GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentButtonMask_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834>(marshaled.___GetComponentButtonMask_11, _GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentRenderModelName_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15>(marshaled.___GetComponentRenderModelName_12, _GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15_il2cpp_TypeInfo_var));
	unmarshaled.set_GetComponentState_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545>(marshaled.___GetComponentState_13, _GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545_il2cpp_TypeInfo_var));
	unmarshaled.set_RenderModelHasComponent_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A>(marshaled.___RenderModelHasComponent_14, _RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelThumbnailURL_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982>(marshaled.___GetRenderModelThumbnailURL_15, _GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelOriginalPath_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2>(marshaled.___GetRenderModelOriginalPath_16, _GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRenderModelErrorNameFromEnum_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51>(marshaled.___GetRenderModelErrorNameFromEnum_17, _GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRRenderModels
extern "C" void IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshal_com_cleanup(IVRRenderModels_t2925B57E1F8EB9850AF3A19388C5A3BE20F8AF44_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA (_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA * __this, intptr_t ___pRenderModel0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pRenderModel0);

}
// System.Void Valve.VR.IVRRenderModels__FreeRenderModel::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FreeRenderModel__ctor_m8ACBD1F9261A626D77D6F33D5BBBB16956ECA12E (_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRRenderModels__FreeRenderModel::Invoke(System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FreeRenderModel_Invoke_m41B0B065CFF37DCC066AC60281A8B1CA3C23AD93 (_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA * __this, intptr_t ___pRenderModel0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pRenderModel0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderModel0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pRenderModel0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pRenderModel0);
							else
								GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pRenderModel0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pRenderModel0);
							else
								VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pRenderModel0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderModel0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pRenderModel0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderModel0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pRenderModel0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pRenderModel0);
						else
							GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pRenderModel0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pRenderModel0);
						else
							VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pRenderModel0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pRenderModel0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRRenderModels__FreeRenderModel::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _FreeRenderModel_BeginInvoke_mE1366EE15AFF3D4BA8F1F8E9852616A9289DE1B3 (_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA * __this, intptr_t ___pRenderModel0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FreeRenderModel_BeginInvoke_mE1366EE15AFF3D4BA8F1F8E9852616A9289DE1B3_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pRenderModel0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRRenderModels__FreeRenderModel::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _FreeRenderModel_EndInvoke_m824FC0BE413196560989FA6F0623BCC17DA6DEEC (_FreeRenderModel_t10C1EC9CD4718848B5F28D4BD8A4063E2E2E1CBA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A (_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A * __this, intptr_t ___pTexture0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pTexture0);

}
// System.Void Valve.VR.IVRRenderModels__FreeTexture::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FreeTexture__ctor_m3C3B2357F23F7F44CDA6E7818E123DCB5B92E07B (_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRRenderModels__FreeTexture::Invoke(System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FreeTexture_Invoke_mE041DBB8F22C50EA8F18DC842478DF9A7AA505AA (_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A * __this, intptr_t ___pTexture0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pTexture0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pTexture0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pTexture0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pTexture0);
							else
								GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pTexture0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTexture0);
							else
								VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTexture0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pTexture0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pTexture0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pTexture0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pTexture0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pTexture0);
						else
							GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pTexture0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pTexture0);
						else
							VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pTexture0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pTexture0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRRenderModels__FreeTexture::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _FreeTexture_BeginInvoke_m667F76FE805B0EE55E79C544799AEC31A8C2D83D (_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A * __this, intptr_t ___pTexture0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FreeTexture_BeginInvoke_m667F76FE805B0EE55E79C544799AEC31A8C2D83D_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pTexture0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRRenderModels__FreeTexture::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _FreeTexture_EndInvoke_mD3640A224A49352FC035F93ED65C7F4F5C95703F (_FreeTexture_tDFA21CD58FE5F3E7F79FDFB13D6BD2D2E7F5159A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 (_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 * __this, intptr_t ___pD3D11Texture2D0, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc(___pD3D11Texture2D0);

}
// System.Void Valve.VR.IVRRenderModels__FreeTextureD3D11::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FreeTextureD3D11__ctor_m5FA2A6249433CB7F120BA380B25FF9B2BC6E64AC (_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRRenderModels__FreeTextureD3D11::Invoke(System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _FreeTextureD3D11_Invoke_m7EBB3E2504B8FE54EF4D6B495999A3323B92F527 (_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 * __this, intptr_t ___pD3D11Texture2D0, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pD3D11Texture2D0, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11Texture2D0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pD3D11Texture2D0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11Texture2D0);
							else
								GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11Texture2D0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pD3D11Texture2D0);
							else
								VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pD3D11Texture2D0);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11Texture2D0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pD3D11Texture2D0, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11Texture2D0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (intptr_t, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pD3D11Texture2D0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11Texture2D0);
						else
							GenericVirtActionInvoker1< intptr_t >::Invoke(targetMethod, targetThis, ___pD3D11Texture2D0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pD3D11Texture2D0);
						else
							VirtActionInvoker1< intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pD3D11Texture2D0);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, intptr_t, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pD3D11Texture2D0, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRRenderModels__FreeTextureD3D11::BeginInvoke(System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _FreeTextureD3D11_BeginInvoke_mF05BFEC95CBF2CBBF780A782C5C6AE6493C885AD (_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 * __this, intptr_t ___pD3D11Texture2D0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_FreeTextureD3D11_BeginInvoke_mF05BFEC95CBF2CBBF780A782C5C6AE6493C885AD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pD3D11Texture2D0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.Void Valve.VR.IVRRenderModels__FreeTextureD3D11::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _FreeTextureD3D11_EndInvoke_m049C1FAC4FBA2E497483903EB73717CD361BF958 (_FreeTextureD3D11_t26231928AFA89BE5FD4C6DCA33BB71B1E36BA415 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint64_t DelegatePInvokeWrapper__GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 (_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, const RuntimeMethod* method)
{
	typedef uint64_t (STDCALL *PInvokeFunc)(char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter U27___pchComponentName1U27 to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Native function invocation
	uint64_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchComponentName1U27 native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetComponentButtonMask::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetComponentButtonMask__ctor_m7F2DFBC75D1187C04A864F63CC56C3A4D4C67B8E (_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt64 Valve.VR.IVRRenderModels__GetComponentButtonMask::Invoke(System.String,System.String)
extern "C" IL2CPP_METHOD_ATTR uint64_t _GetComponentButtonMask_Invoke_m98143A40377B0FAC57C54F120854CBBD19C39A24 (_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, const RuntimeMethod* method)
{
	uint64_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
				else
				{
					// closed
					typedef uint64_t (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
			else if (___parameterCount != 2)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< uint64_t, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
							else
								result = GenericVirtFuncInvoker1< uint64_t, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
							else
								result = VirtFuncInvoker1< uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
						}
					}
				}
				else
				{
					typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
							else
								result = GenericVirtFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
							else
								result = VirtFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
						}
					}
				}
				else
				{
					typedef uint64_t (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
			else
			{
				// closed
				typedef uint64_t (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< uint64_t, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
						else
							result = GenericVirtFuncInvoker1< uint64_t, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
						else
							result = VirtFuncInvoker1< uint64_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
					}
				}
			}
			else
			{
				typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint64_t (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
						else
							result = GenericVirtFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
						else
							result = VirtFuncInvoker2< uint64_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
					}
				}
			}
			else
			{
				typedef uint64_t (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentButtonMask::BeginInvoke(System.String,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentButtonMask_BeginInvoke_m558631FBCD0A34AB752E514860F848E374F1BABC (_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	void *__d_args[3] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.UInt64 Valve.VR.IVRRenderModels__GetComponentButtonMask::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint64_t _GetComponentButtonMask_EndInvoke_m613D1296DAF41B9248A57B2241A7AD04BA57CA40 (_GetComponentButtonMask_t573A15D358AF2581E2FB1AAD9DA4CF101149A834 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint64_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 (_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 * __this, String_t* ___pchRenderModelName0, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetComponentCount::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetComponentCount__ctor_mB91651A8FA841098930E88D161B79CEDEAF01E44 (_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentCount::Invoke(System.String)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetComponentCount_Invoke_m0A4BC03A368509C61A6DACBC9036F2CAAB2D4F92 (_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 * __this, String_t* ___pchRenderModelName0, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, targetMethod);
				}
			}
			else if (___parameterCount != 1)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, ___pchRenderModelName0);
							else
								result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, ___pchRenderModelName0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0);
							else
								result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0);
							else
								result = GenericVirtFuncInvoker1< uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0);
							else
								result = VirtFuncInvoker1< uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, targetMethod);
			}
		}
		else if (___parameterCount != 1)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, ___pchRenderModelName0);
						else
							result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, ___pchRenderModelName0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0);
						else
							result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0);
						else
							result = GenericVirtFuncInvoker1< uint32_t, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0);
						else
							result = VirtFuncInvoker1< uint32_t, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentCount::BeginInvoke(System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentCount_BeginInvoke_m43552C243A0FDA21319DC63896DEBA60E32334D8 (_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 * __this, String_t* ___pchRenderModelName0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	void *__d_args[2] = {0};
	__d_args[0] = ___pchRenderModelName0;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentCount::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetComponentCount_EndInvoke_m94FE34B43C881BA8BFA6CA4624A94DB326A1998E (_GetComponentCount_tB702B386A5D2A7BD4515BA1A56703F1FA479C983 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 (_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 * __this, String_t* ___pchRenderModelName0, uint32_t ___unComponentIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameLen3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, uint32_t, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter U27___pchComponentName2U27 to native representation
	char* ____pchComponentName2_marshaled = NULL;
	____pchComponentName2_marshaled = il2cpp_codegen_marshal_string_builder(___pchComponentName2);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ___unComponentIndex1, ____pchComponentName2_marshaled, ___unComponentNameLen3);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling of parameter U27___pchComponentName2U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchComponentName2, ____pchComponentName2_marshaled);

	// Marshaling cleanup of parameter U27___pchComponentName2U27 native representation
	il2cpp_codegen_marshal_free(____pchComponentName2_marshaled);
	____pchComponentName2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetComponentName::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetComponentName__ctor_m29E5AB48BE8F653D3D1B96988418ECF9B6CE10A0 (_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentName::Invoke(System.String,System.UInt32,System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetComponentName_Invoke_m2A16EF8831E1213311C83EE1A3405835F35FD0AF (_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 * __this, String_t* ___pchRenderModelName0, uint32_t ___unComponentIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameLen3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
							else
								result = GenericVirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
							else
								result = VirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
							else
								result = GenericVirtFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
							else
								result = VirtFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
						else
							result = GenericVirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
						else
							result = VirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
						else
							result = GenericVirtFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
						else
							result = VirtFuncInvoker4< uint32_t, String_t*, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___unComponentIndex1, ___pchComponentName2, ___unComponentNameLen3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentName::BeginInvoke(System.String,System.UInt32,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentName_BeginInvoke_m9FABD3DCCE36D39DF706BAB6BAE1D89F6DB33C84 (_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 * __this, String_t* ___pchRenderModelName0, uint32_t ___unComponentIndex1, StringBuilder_t * ___pchComponentName2, uint32_t ___unComponentNameLen3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetComponentName_BeginInvoke_m9FABD3DCCE36D39DF706BAB6BAE1D89F6DB33C84_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unComponentIndex1);
	__d_args[2] = ___pchComponentName2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unComponentNameLen3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentName::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetComponentName_EndInvoke_m8EB0997F65C5422E97551DDC1E54914DC46A84B0 (_GetComponentName_t08FD22D29A959C0EA114FBDF5DADA31BC22C4EB1 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 (_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, StringBuilder_t * ___pchComponentRenderModelName2, uint32_t ___unComponentRenderModelNameLen3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter U27___pchComponentName1U27 to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Marshaling of parameter U27___pchComponentRenderModelName2U27 to native representation
	char* ____pchComponentRenderModelName2_marshaled = NULL;
	____pchComponentRenderModelName2_marshaled = il2cpp_codegen_marshal_string_builder(___pchComponentRenderModelName2);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled, ____pchComponentRenderModelName2_marshaled, ___unComponentRenderModelNameLen3);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchComponentName1U27 native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	// Marshaling of parameter U27___pchComponentRenderModelName2U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchComponentRenderModelName2, ____pchComponentRenderModelName2_marshaled);

	// Marshaling cleanup of parameter U27___pchComponentRenderModelName2U27 native representation
	il2cpp_codegen_marshal_free(____pchComponentRenderModelName2_marshaled);
	____pchComponentRenderModelName2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetComponentRenderModelName::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetComponentRenderModelName__ctor_m08BEA70CA38D4D8F01471FE0EA8B238BBCCD98FA (_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentRenderModelName::Invoke(System.String,System.String,System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetComponentRenderModelName_Invoke_m096159F315D38CD8515EED29E73132BF63A884CF (_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, StringBuilder_t * ___pchComponentRenderModelName2, uint32_t ___unComponentRenderModelNameLen3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
							else
								result = GenericVirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
							else
								result = VirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
							else
								result = GenericVirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
							else
								result = VirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
						else
							result = GenericVirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
						else
							result = VirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
						else
							result = GenericVirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
						else
							result = VirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pchComponentRenderModelName2, ___unComponentRenderModelNameLen3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentRenderModelName::BeginInvoke(System.String,System.String,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentRenderModelName_BeginInvoke_m7A23CD92AE990B12EDCCAEC495CA765FA3892D71 (_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, StringBuilder_t * ___pchComponentRenderModelName2, uint32_t ___unComponentRenderModelNameLen3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetComponentRenderModelName_BeginInvoke_m7A23CD92AE990B12EDCCAEC495CA765FA3892D71_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	__d_args[2] = ___pchComponentRenderModelName2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unComponentRenderModelNameLen3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetComponentRenderModelName::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetComponentRenderModelName_EndInvoke_m8FCFE7BDECB114D74B62414931D64C6C15F8D57D (_GetComponentRenderModelName_t33EA46CAA9997BAA5D5AEF9391A40D6F14AF1B15 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 (_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 * ___pControllerState2, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 * ___pState3, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * ___pComponentState4, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter U27___pchComponentName1U27 to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled, ___pControllerState2, ___pState3, ___pComponentState4);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchComponentName1U27 native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRRenderModels__GetComponentState::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetComponentState__ctor_m0AA64B3296CDAA27C0B0C61D2388D3B9757E02FD (_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRRenderModels__GetComponentState::Invoke(System.String,System.String,Valve.VR.VRControllerState_tU26,Valve.VR.RenderModel_ControllerMode_State_tU26,Valve.VR.RenderModel_ComponentState_tU26)
extern "C" IL2CPP_METHOD_ATTR bool _GetComponentState_Invoke_m7BE2345ED7FE847318FFE7D2E6534BA1DA1C767C (_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 * ___pControllerState2, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 * ___pState3, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * ___pComponentState4, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 5)
				{
					// open
					typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
			}
			else if (___parameterCount != 5)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< bool, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
							else
								result = GenericVirtFuncInvoker4< bool, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< bool, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
							else
								result = VirtFuncInvoker4< bool, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
							else
								result = GenericVirtFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
							else
								result = VirtFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
			}
		}
		else if (___parameterCount != 5)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< bool, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
						else
							result = GenericVirtFuncInvoker4< bool, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< bool, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
						else
							result = VirtFuncInvoker4< bool, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
						else
							result = GenericVirtFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
						else
							result = VirtFuncInvoker5< bool, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 *, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 *, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 *, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, ___pControllerState2, ___pState3, ___pComponentState4, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetComponentState::BeginInvoke(System.String,System.String,Valve.VR.VRControllerState_tU26,Valve.VR.RenderModel_ControllerMode_State_tU26,Valve.VR.RenderModel_ComponentState_tU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetComponentState_BeginInvoke_m3476E14FED0D11DC5BC3B153EBF923A42796BA0A (_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 * ___pControllerState2, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 * ___pState3, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * ___pComponentState4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetComponentState_BeginInvoke_m3476E14FED0D11DC5BC3B153EBF923A42796BA0A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	__d_args[2] = Box(VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35_il2cpp_TypeInfo_var, &*___pControllerState2);
	__d_args[3] = Box(RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74_il2cpp_TypeInfo_var, &*___pState3);
	__d_args[4] = Box(RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397_il2cpp_TypeInfo_var, &*___pComponentState4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.Boolean Valve.VR.IVRRenderModels__GetComponentState::EndInvoke(Valve.VR.VRControllerState_tU26,Valve.VR.RenderModel_ControllerMode_State_tU26,Valve.VR.RenderModel_ComponentState_tU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _GetComponentState_EndInvoke_m91BD595A28901D04A9949EE64EF79C96A124DF9C (_GetComponentState_t31DA301BC3D88C8CC077B3921542EC845DEFD545 * __this, VRControllerState_t_tFD7AD57DEF7C3F3B38C1A84F19C729653C570E35 * ___pControllerState0, RenderModel_ControllerMode_State_t_tA85A8A7C2EF6B1255669B4886C78275230C68E74 * ___pState1, RenderModel_ComponentState_t_t387CA09B1F3C279E7A79975DC4547D309A057397 * ___pComponentState2, RuntimeObject* ___result3, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pControllerState0,
	___pState1,
	___pComponentState2,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result3, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D (_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D * __this, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc();

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelCount::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetRenderModelCount__ctor_m5F3A99F74158B213848666815159B1158C81061B (_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelCount::Invoke()
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetRenderModelCount_Invoke_m29B97033FFE1BD1CD2C5054E68C8DFED83412204 (_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D * __this, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
							else
								result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
						else
							result = GenericVirtFuncInvoker0< uint32_t >::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							result = VirtFuncInvoker0< uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelCount::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelCount_BeginInvoke_m9FD01E967847715DC5DE028C55F811385EB2387D (_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelCount::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetRenderModelCount_EndInvoke_m6619CAA1A54CE19B007658565D386DB8CDEFEFD9 (_GetRenderModelCount_tBE7BB097CE5FBCF8A1341193FE65C9B81B83FE8D * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  intptr_t DelegatePInvokeWrapper__GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 (_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 * __this, int32_t ___error0, const RuntimeMethod* method)
{
	typedef intptr_t (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	intptr_t returnValue = il2cppPInvokeFunc(___error0);

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetRenderModelErrorNameFromEnum__ctor_m93E4C42E5EE4628686225D5A5C648DDEF27CF1C3 (_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.IntPtr Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum::Invoke(Valve.VR.EVRRenderModelError)
extern "C" IL2CPP_METHOD_ATTR intptr_t _GetRenderModelErrorNameFromEnum_Invoke_m20E3C71C37E6ACCFF74D247BD9DDE196C0ADE42C (_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 * __this, int32_t ___error0, const RuntimeMethod* method)
{
	intptr_t result;
	memset(&result, 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
				}
				else
				{
					// closed
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
							else
								result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___error0);
							else
								result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___error0);
						}
					}
				}
				else
				{
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
			}
			else
			{
				// closed
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___error0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
						else
							result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___error0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___error0);
						else
							result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___error0);
					}
				}
			}
			else
			{
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___error0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum::BeginInvoke(Valve.VR.EVRRenderModelError,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelErrorNameFromEnum_BeginInvoke_m368673BAFDE5E1BEA07F93AE92442842BA0F72CB (_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 * __this, int32_t ___error0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetRenderModelErrorNameFromEnum_BeginInvoke_m368673BAFDE5E1BEA07F93AE92442842BA0F72CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(EVRRenderModelError_tA672F337FD77711AE2FEDB922DB393EAC3A78BB6_il2cpp_TypeInfo_var, &___error0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.IntPtr Valve.VR.IVRRenderModels__GetRenderModelErrorNameFromEnum::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR intptr_t _GetRenderModelErrorNameFromEnum_EndInvoke_mB88D011FF3166349389E995368E2A5F7892018B7 (_GetRenderModelErrorNameFromEnum_t183ECD0C71D8214D6197DB341A0347E86D65BD51 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(intptr_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 (_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 * __this, uint32_t ___unRenderModelIndex0, StringBuilder_t * ___pchRenderModelName1, uint32_t ___unRenderModelNameLen2, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint32_t, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName1U27 to native representation
	char* ____pchRenderModelName1_marshaled = NULL;
	____pchRenderModelName1_marshaled = il2cpp_codegen_marshal_string_builder(___pchRenderModelName1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___unRenderModelIndex0, ____pchRenderModelName1_marshaled, ___unRenderModelNameLen2);

	// Marshaling of parameter U27___pchRenderModelName1U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchRenderModelName1, ____pchRenderModelName1_marshaled);

	// Marshaling cleanup of parameter U27___pchRenderModelName1U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName1_marshaled);
	____pchRenderModelName1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelName::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetRenderModelName__ctor_mCF2D1495A95057A49B424697DB8856BC3062736B (_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelName::Invoke(System.UInt32,System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetRenderModelName_Invoke_mC3F7D812BAE9901C9FD28FCDCF68C4532AEDCC65 (_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 * __this, uint32_t ___unRenderModelIndex0, StringBuilder_t * ___pchRenderModelName1, uint32_t ___unRenderModelNameLen2, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
							else
								result = GenericVirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
							else
								result = VirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
						else
							result = GenericVirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
						else
							result = VirtFuncInvoker3< uint32_t, uint32_t, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, uint32_t, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___unRenderModelIndex0, ___pchRenderModelName1, ___unRenderModelNameLen2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelName::BeginInvoke(System.UInt32,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelName_BeginInvoke_mD0A9107AA6AA1B17D86F91D5EB30779391A73AD4 (_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 * __this, uint32_t ___unRenderModelIndex0, StringBuilder_t * ___pchRenderModelName1, uint32_t ___unRenderModelNameLen2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetRenderModelName_BeginInvoke_mD0A9107AA6AA1B17D86F91D5EB30779391A73AD4_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unRenderModelIndex0);
	__d_args[1] = ___pchRenderModelName1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unRenderModelNameLen2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelName::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetRenderModelName_EndInvoke_m4EBA2AC5F9196AA2A8BFFBD127F321C6EAAEEE88 (_GetRenderModelName_tD1F108ECDE3D8A3D5A0D21F55E00498FCF52F1B5 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 (_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchOriginalPath1, uint32_t ___unOriginalPathLen2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter U27___pchOriginalPath1U27 to native representation
	char* ____pchOriginalPath1_marshaled = NULL;
	____pchOriginalPath1_marshaled = il2cpp_codegen_marshal_string_builder(___pchOriginalPath1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchOriginalPath1_marshaled, ___unOriginalPathLen2, ___peError3);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling of parameter U27___pchOriginalPath1U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchOriginalPath1, ____pchOriginalPath1_marshaled);

	// Marshaling cleanup of parameter U27___pchOriginalPath1U27 native representation
	il2cpp_codegen_marshal_free(____pchOriginalPath1_marshaled);
	____pchOriginalPath1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelOriginalPath::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetRenderModelOriginalPath__ctor_m434DA1E19272447F785E8145B364DD6A06C2D70B (_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelOriginalPath::Invoke(System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRRenderModelErrorU26)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetRenderModelOriginalPath_Invoke_mDF750A51484262BB74DF2C5F9B9DA0BCABA0443F (_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchOriginalPath1, uint32_t ___unOriginalPathLen2, int32_t* ___peError3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
							else
								result = GenericVirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
							else
								result = VirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
							else
								result = GenericVirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
							else
								result = VirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
						else
							result = GenericVirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
						else
							result = VirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
						else
							result = GenericVirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
						else
							result = VirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchOriginalPath1, ___unOriginalPathLen2, ___peError3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelOriginalPath::BeginInvoke(System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRRenderModelErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelOriginalPath_BeginInvoke_mC69D783016EB4AFCB986062BAD4AC9BABDA849BC (_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchOriginalPath1, uint32_t ___unOriginalPathLen2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetRenderModelOriginalPath_BeginInvoke_mC69D783016EB4AFCB986062BAD4AC9BABDA849BC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchOriginalPath1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unOriginalPathLen2);
	__d_args[3] = Box(EVRRenderModelError_tA672F337FD77711AE2FEDB922DB393EAC3A78BB6_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelOriginalPath::EndInvoke(Valve.VR.EVRRenderModelErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetRenderModelOriginalPath_EndInvoke_mBCD623F5D91B4D535EF20B1F165B13A97830E2DA (_GetRenderModelOriginalPath_tA21488F5C507318314DFD81798ED701F1CCC5EC2 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 (_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchThumbnailURL1, uint32_t ___unThumbnailURLLen2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter U27___pchThumbnailURL1U27 to native representation
	char* ____pchThumbnailURL1_marshaled = NULL;
	____pchThumbnailURL1_marshaled = il2cpp_codegen_marshal_string_builder(___pchThumbnailURL1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchThumbnailURL1_marshaled, ___unThumbnailURLLen2, ___peError3);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling of parameter U27___pchThumbnailURL1U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchThumbnailURL1, ____pchThumbnailURL1_marshaled);

	// Marshaling cleanup of parameter U27___pchThumbnailURL1U27 native representation
	il2cpp_codegen_marshal_free(____pchThumbnailURL1_marshaled);
	____pchThumbnailURL1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetRenderModelThumbnailURL__ctor_m344038DD1F85F177D1BDF955FC8099B67ED882AD (_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL::Invoke(System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRRenderModelErrorU26)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetRenderModelThumbnailURL_Invoke_mD9DDAABFE693A993CE40E5BF639025A711843556 (_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchThumbnailURL1, uint32_t ___unThumbnailURLLen2, int32_t* ___peError3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
							else
								result = GenericVirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
							else
								result = VirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
							else
								result = GenericVirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
							else
								result = VirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
						else
							result = GenericVirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
						else
							result = VirtFuncInvoker3< uint32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
						else
							result = GenericVirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
						else
							result = VirtFuncInvoker4< uint32_t, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchThumbnailURL1, ___unThumbnailURLLen2, ___peError3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL::BeginInvoke(System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRRenderModelErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetRenderModelThumbnailURL_BeginInvoke_m9D6A4F6C65F98F007873C2E2922CF1F69AAE30EC (_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 * __this, String_t* ___pchRenderModelName0, StringBuilder_t * ___pchThumbnailURL1, uint32_t ___unThumbnailURLLen2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetRenderModelThumbnailURL_BeginInvoke_m9D6A4F6C65F98F007873C2E2922CF1F69AAE30EC_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchThumbnailURL1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unThumbnailURLLen2);
	__d_args[3] = Box(EVRRenderModelError_tA672F337FD77711AE2FEDB922DB393EAC3A78BB6_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRRenderModels__GetRenderModelThumbnailURL::EndInvoke(Valve.VR.EVRRenderModelErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetRenderModelThumbnailURL_EndInvoke_mF48085FF2E9CCEBFAFA1FD9AEA004508B8C8D3EC (_GetRenderModelThumbnailURL_t84EC690CF92A1DC6D528C793E90B69F893100982 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A (_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A * __this, int32_t ___textureId0, intptr_t ___pDstTexture1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, intptr_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___textureId0, ___pDstTexture1);

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _LoadIntoTextureD3D11_Async__ctor_m6251FC47339009438324553FB849C09638F040E4 (_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async::Invoke(System.Int32,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR int32_t _LoadIntoTextureD3D11_Async_Invoke_m85C106D79097168939FE8C994B2790CA692654EB (_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A * __this, int32_t ___textureId0, intptr_t ___pDstTexture1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pDstTexture1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pDstTexture1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pDstTexture1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___textureId0, ___pDstTexture1);
							else
								result = GenericVirtFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___textureId0, ___pDstTexture1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___pDstTexture1);
							else
								result = VirtFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___pDstTexture1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pDstTexture1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pDstTexture1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pDstTexture1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pDstTexture1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___textureId0, ___pDstTexture1);
						else
							result = GenericVirtFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(targetMethod, targetThis, ___textureId0, ___pDstTexture1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___pDstTexture1);
						else
							result = VirtFuncInvoker2< int32_t, int32_t, intptr_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___pDstTexture1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pDstTexture1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async::BeginInvoke(System.Int32,System.IntPtr,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _LoadIntoTextureD3D11_Async_BeginInvoke_mBE358C552258F7F4A66F0FEE0111495440AFE07C (_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A * __this, int32_t ___textureId0, intptr_t ___pDstTexture1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadIntoTextureD3D11_Async_BeginInvoke_mBE358C552258F7F4A66F0FEE0111495440AFE07C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___textureId0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pDstTexture1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadIntoTextureD3D11_Async::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _LoadIntoTextureD3D11_Async_EndInvoke_m98505263EBD3D698DAD4398BCCCFB7E25A9ED99F (_LoadIntoTextureD3D11_Async_t9514CC1D83C4CF05BB067BD7613265625F85085A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C (_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C * __this, String_t* ___pchRenderModelName0, intptr_t* ___ppRenderModel1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, intptr_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ___ppRenderModel1);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__LoadRenderModel_Async::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _LoadRenderModel_Async__ctor_m2F3D688CE7FA1208CAB650EF5A6B82273A4BDEB6 (_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadRenderModel_Async::Invoke(System.String,System.IntPtrU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _LoadRenderModel_Async_Invoke_m61ED65779F25973B22E4C4DC5DD4330087E63550 (_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C * __this, String_t* ___pchRenderModelName0, intptr_t* ___ppRenderModel1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, String_t*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___ppRenderModel1, targetMethod);
				}
			}
			else if (___parameterCount != 2)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< int32_t, intptr_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___ppRenderModel1);
							else
								result = GenericVirtFuncInvoker1< int32_t, intptr_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___ppRenderModel1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___ppRenderModel1);
							else
								result = VirtFuncInvoker1< int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___ppRenderModel1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___ppRenderModel1);
							else
								result = GenericVirtFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___ppRenderModel1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___ppRenderModel1);
							else
								result = VirtFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___ppRenderModel1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___ppRenderModel1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___ppRenderModel1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< int32_t, intptr_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___ppRenderModel1);
						else
							result = GenericVirtFuncInvoker1< int32_t, intptr_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___ppRenderModel1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___ppRenderModel1);
						else
							result = VirtFuncInvoker1< int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___ppRenderModel1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (String_t*, intptr_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___ppRenderModel1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___ppRenderModel1);
						else
							result = GenericVirtFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___ppRenderModel1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___ppRenderModel1);
						else
							result = VirtFuncInvoker2< int32_t, String_t*, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___ppRenderModel1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, String_t*, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___ppRenderModel1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__LoadRenderModel_Async::BeginInvoke(System.String,System.IntPtrU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _LoadRenderModel_Async_BeginInvoke_m167EA874F6E7E569856D85482FC413140CDA8C62 (_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C * __this, String_t* ___pchRenderModelName0, intptr_t* ___ppRenderModel1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadRenderModel_Async_BeginInvoke_m167EA874F6E7E569856D85482FC413140CDA8C62_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___ppRenderModel1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadRenderModel_Async::EndInvoke(System.IntPtrU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _LoadRenderModel_Async_EndInvoke_mDF6A0C1FFF1BFC12BBB8B64AE4F4B57A31E02B30 (_LoadRenderModel_Async_t9C1D31ADD44B8C9F6E9EBF7F01704736AD29180C * __this, intptr_t* ___ppRenderModel0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ppRenderModel0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB (_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB * __this, int32_t ___textureId0, intptr_t ___pD3D11Device1, intptr_t* ___ppD3D11Texture2D2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, intptr_t, intptr_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__LoadTextureD3D11_Async::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _LoadTextureD3D11_Async__ctor_mAADB9052FD384EB10EF0A84A4BB0428703853E07 (_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadTextureD3D11_Async::Invoke(System.Int32,System.IntPtr,System.IntPtrU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _LoadTextureD3D11_Async_Invoke_mB8C5367A679F807CA81AB3D94932CFAA64DF2A16 (_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB * __this, int32_t ___textureId0, intptr_t ___pD3D11Device1, intptr_t* ___ppD3D11Texture2D2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
							else
								result = GenericVirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
							else
								result = VirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
						else
							result = GenericVirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
						else
							result = VirtFuncInvoker3< int32_t, int32_t, intptr_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___pD3D11Device1, ___ppD3D11Texture2D2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__LoadTextureD3D11_Async::BeginInvoke(System.Int32,System.IntPtr,System.IntPtrU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _LoadTextureD3D11_Async_BeginInvoke_mA67D4A2B217BD98125CC6FD5752AE23E57F49FBE (_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB * __this, int32_t ___textureId0, intptr_t ___pD3D11Device1, intptr_t* ___ppD3D11Texture2D2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadTextureD3D11_Async_BeginInvoke_mA67D4A2B217BD98125CC6FD5752AE23E57F49FBE_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___textureId0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &___pD3D11Device1);
	__d_args[2] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___ppD3D11Texture2D2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadTextureD3D11_Async::EndInvoke(System.IntPtrU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _LoadTextureD3D11_Async_EndInvoke_m0865570D0990579BF39C859A7A1140CE0FBFA03E (_LoadTextureD3D11_Async_tFB32B5DBDDC7A0B353361DD3BCAE001A448E5CEB * __this, intptr_t* ___ppD3D11Texture2D0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ppD3D11Texture2D0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA (_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA * __this, int32_t ___textureId0, intptr_t* ___ppTexture1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, intptr_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___textureId0, ___ppTexture1);

	return returnValue;
}
// System.Void Valve.VR.IVRRenderModels__LoadTexture_Async::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _LoadTexture_Async__ctor_m1EC7F695013A6B1344210C03CCE96491CF64FE36 (_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadTexture_Async::Invoke(System.Int32,System.IntPtrU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _LoadTexture_Async_Invoke_m2689C19EB95665CFEEBBB4B4F460A34E3CFD379D (_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA * __this, int32_t ___textureId0, intptr_t* ___ppTexture1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (int32_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___ppTexture1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___ppTexture1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (int32_t, intptr_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___ppTexture1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___ppTexture1);
							else
								result = GenericVirtFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___ppTexture1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___ppTexture1);
							else
								result = VirtFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___ppTexture1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___ppTexture1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (int32_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___ppTexture1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___ppTexture1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (int32_t, intptr_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___textureId0, ___ppTexture1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___ppTexture1);
						else
							result = GenericVirtFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(targetMethod, targetThis, ___textureId0, ___ppTexture1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___textureId0, ___ppTexture1);
						else
							result = VirtFuncInvoker2< int32_t, int32_t, intptr_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___textureId0, ___ppTexture1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, int32_t, intptr_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___textureId0, ___ppTexture1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__LoadTexture_Async::BeginInvoke(System.Int32,System.IntPtrU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _LoadTexture_Async_BeginInvoke_mE5C2524A3337E2FCA79A8012F881413D84276290 (_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA * __this, int32_t ___textureId0, intptr_t* ___ppTexture1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadTexture_Async_BeginInvoke_mE5C2524A3337E2FCA79A8012F881413D84276290_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___textureId0);
	__d_args[1] = Box(IntPtr_t_il2cpp_TypeInfo_var, &*___ppTexture1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRRenderModelError Valve.VR.IVRRenderModels__LoadTexture_Async::EndInvoke(System.IntPtrU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _LoadTexture_Async_EndInvoke_m7CB5B454EC471C1931786A2F4D91AA8C2C4DBFFB (_LoadTexture_Async_tD9A35E9E7994826897A8AB66D72734D764E3EFDA * __this, intptr_t* ___ppTexture0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___ppTexture0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A (_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchRenderModelName0U27 to native representation
	char* ____pchRenderModelName0_marshaled = NULL;
	____pchRenderModelName0_marshaled = il2cpp_codegen_marshal_string(___pchRenderModelName0);

	// Marshaling of parameter U27___pchComponentName1U27 to native representation
	char* ____pchComponentName1_marshaled = NULL;
	____pchComponentName1_marshaled = il2cpp_codegen_marshal_string(___pchComponentName1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchRenderModelName0_marshaled, ____pchComponentName1_marshaled);

	// Marshaling cleanup of parameter U27___pchRenderModelName0U27 native representation
	il2cpp_codegen_marshal_free(____pchRenderModelName0_marshaled);
	____pchRenderModelName0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchComponentName1U27 native representation
	il2cpp_codegen_marshal_free(____pchComponentName1_marshaled);
	____pchComponentName1_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRRenderModels__RenderModelHasComponent::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _RenderModelHasComponent__ctor_mFC7E08F0A3FB5689F07E36E537304408AC6538D9 (_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRRenderModels__RenderModelHasComponent::Invoke(System.String,System.String)
extern "C" IL2CPP_METHOD_ATTR bool _RenderModelHasComponent_Invoke_m1A180299E8402ED4861DFA4993564E7900E63DD3 (_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
			else if (___parameterCount != 2)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< bool, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
							else
								result = GenericVirtFuncInvoker1< bool, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< bool, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
							else
								result = VirtFuncInvoker1< bool, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< bool, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
							else
								result = GenericVirtFuncInvoker2< bool, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< bool, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
							else
								result = VirtFuncInvoker2< bool, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< bool, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
						else
							result = GenericVirtFuncInvoker1< bool, String_t* >::Invoke(targetMethod, ___pchRenderModelName0, ___pchComponentName1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< bool, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
						else
							result = VirtFuncInvoker1< bool, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchRenderModelName0, ___pchComponentName1);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (String_t*, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchRenderModelName0, ___pchComponentName1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< bool, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
						else
							result = GenericVirtFuncInvoker2< bool, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pchRenderModelName0, ___pchComponentName1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< bool, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
						else
							result = VirtFuncInvoker2< bool, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchRenderModelName0, ___pchComponentName1);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchRenderModelName0, ___pchComponentName1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRRenderModels__RenderModelHasComponent::BeginInvoke(System.String,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _RenderModelHasComponent_BeginInvoke_mDE2255F43D028832A35F3F48A35CC2E3F89EE855 (_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A * __this, String_t* ___pchRenderModelName0, String_t* ___pchComponentName1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	void *__d_args[3] = {0};
	__d_args[0] = ___pchRenderModelName0;
	__d_args[1] = ___pchComponentName1;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Boolean Valve.VR.IVRRenderModels__RenderModelHasComponent::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _RenderModelHasComponent_EndInvoke_mA7B8F3A92A13056F98FA3380B015EFB209869A62 (_RenderModelHasComponent_t24FA87527C7E03D2B5E54F9429C39745D98A696A * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRResources
extern "C" void IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshal_pinvoke(const IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1& unmarshaled, IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshaled_pinvoke& marshaled)
{
	marshaled.___LoadSharedResource_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadSharedResource_0()));
	marshaled.___GetResourceFullPath_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetResourceFullPath_1()));
}
extern "C" void IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshal_pinvoke_back(const IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshaled_pinvoke& marshaled, IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_LoadSharedResource_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E>(marshaled.___LoadSharedResource_0, _LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetResourceFullPath_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB>(marshaled.___GetResourceFullPath_1, _GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRResources
extern "C" void IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshal_pinvoke_cleanup(IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRResources
extern "C" void IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshal_com(const IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1& unmarshaled, IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshaled_com& marshaled)
{
	marshaled.___LoadSharedResource_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_LoadSharedResource_0()));
	marshaled.___GetResourceFullPath_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetResourceFullPath_1()));
}
extern "C" void IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshal_com_back(const IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshaled_com& marshaled, IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_LoadSharedResource_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E>(marshaled.___LoadSharedResource_0, _LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetResourceFullPath_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB>(marshaled.___GetResourceFullPath_1, _GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRResources
extern "C" void IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshal_com_cleanup(IVRResources_t846FBA4ADA918920F17FEE7DA2E2C86974F283A1_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB (_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB * __this, String_t* ___pchResourceName0, String_t* ___pchResourceTypeDirectory1, StringBuilder_t * ___pchPathBuffer2, uint32_t ___unBufferLen3, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchResourceName0U27 to native representation
	char* ____pchResourceName0_marshaled = NULL;
	____pchResourceName0_marshaled = il2cpp_codegen_marshal_string(___pchResourceName0);

	// Marshaling of parameter U27___pchResourceTypeDirectory1U27 to native representation
	char* ____pchResourceTypeDirectory1_marshaled = NULL;
	____pchResourceTypeDirectory1_marshaled = il2cpp_codegen_marshal_string(___pchResourceTypeDirectory1);

	// Marshaling of parameter U27___pchPathBuffer2U27 to native representation
	char* ____pchPathBuffer2_marshaled = NULL;
	____pchPathBuffer2_marshaled = il2cpp_codegen_marshal_string_builder(___pchPathBuffer2);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchResourceName0_marshaled, ____pchResourceTypeDirectory1_marshaled, ____pchPathBuffer2_marshaled, ___unBufferLen3);

	// Marshaling cleanup of parameter U27___pchResourceName0U27 native representation
	il2cpp_codegen_marshal_free(____pchResourceName0_marshaled);
	____pchResourceName0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchResourceTypeDirectory1U27 native representation
	il2cpp_codegen_marshal_free(____pchResourceTypeDirectory1_marshaled);
	____pchResourceTypeDirectory1_marshaled = NULL;

	// Marshaling of parameter U27___pchPathBuffer2U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchPathBuffer2, ____pchPathBuffer2_marshaled);

	// Marshaling cleanup of parameter U27___pchPathBuffer2U27 native representation
	il2cpp_codegen_marshal_free(____pchPathBuffer2_marshaled);
	____pchPathBuffer2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRResources__GetResourceFullPath::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetResourceFullPath__ctor_mA0A5E6527F6E3645EA6A041AACE848DE1458C8E2 (_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRResources__GetResourceFullPath::Invoke(System.String,System.String,System.Text.StringBuilder,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetResourceFullPath_Invoke_m2D780FB36EDD8BAD0B44903BAAD58EB74A2FFB8B (_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB * __this, String_t* ___pchResourceName0, String_t* ___pchResourceTypeDirectory1, StringBuilder_t * ___pchPathBuffer2, uint32_t ___unBufferLen3, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
							else
								result = GenericVirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
							else
								result = VirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
							else
								result = GenericVirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
							else
								result = VirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
						else
							result = GenericVirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
						else
							result = VirtFuncInvoker3< uint32_t, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
						else
							result = GenericVirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
						else
							result = VirtFuncInvoker4< uint32_t, String_t*, String_t*, StringBuilder_t *, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchResourceTypeDirectory1, ___pchPathBuffer2, ___unBufferLen3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRResources__GetResourceFullPath::BeginInvoke(System.String,System.String,System.Text.StringBuilder,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetResourceFullPath_BeginInvoke_m39808DBCA422CE0D0D0687025130C1CB00CF50AD (_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB * __this, String_t* ___pchResourceName0, String_t* ___pchResourceTypeDirectory1, StringBuilder_t * ___pchPathBuffer2, uint32_t ___unBufferLen3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetResourceFullPath_BeginInvoke_m39808DBCA422CE0D0D0687025130C1CB00CF50AD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchResourceName0;
	__d_args[1] = ___pchResourceTypeDirectory1;
	__d_args[2] = ___pchPathBuffer2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferLen3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.UInt32 Valve.VR.IVRResources__GetResourceFullPath::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetResourceFullPath_EndInvoke_m0650C29197358C8B131711A39927387956CF74AF (_GetResourceFullPath_t6DCDC464D809E225668441D3758C64FBAF75A2CB * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E (_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E * __this, String_t* ___pchResourceName0, String_t* ___pchBuffer1, uint32_t ___unBufferLen2, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(char*, char*, uint32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchResourceName0U27 to native representation
	char* ____pchResourceName0_marshaled = NULL;
	____pchResourceName0_marshaled = il2cpp_codegen_marshal_string(___pchResourceName0);

	// Marshaling of parameter U27___pchBuffer1U27 to native representation
	char* ____pchBuffer1_marshaled = NULL;
	____pchBuffer1_marshaled = il2cpp_codegen_marshal_string(___pchBuffer1);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(____pchResourceName0_marshaled, ____pchBuffer1_marshaled, ___unBufferLen2);

	// Marshaling cleanup of parameter U27___pchResourceName0U27 native representation
	il2cpp_codegen_marshal_free(____pchResourceName0_marshaled);
	____pchResourceName0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchBuffer1U27 native representation
	il2cpp_codegen_marshal_free(____pchBuffer1_marshaled);
	____pchBuffer1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRResources__LoadSharedResource::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _LoadSharedResource__ctor_mD676C842496A3FF2BACF00B64C91C882E3C0E86C (_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRResources__LoadSharedResource::Invoke(System.String,System.String,System.UInt32)
extern "C" IL2CPP_METHOD_ATTR uint32_t _LoadSharedResource_Invoke_m4E22630BDA1E7BEE72C79F058E907B8351DBCF2F (_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E * __this, String_t* ___pchResourceName0, String_t* ___pchBuffer1, uint32_t ___unBufferLen2, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
				}
			}
			else if (___parameterCount != 3)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
							else
								result = GenericVirtFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
							else
								result = VirtFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
							else
								result = GenericVirtFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
							else
								result = VirtFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
						else
							result = GenericVirtFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(targetMethod, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
						else
							result = VirtFuncInvoker2< uint32_t, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (String_t*, String_t*, uint32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
						else
							result = GenericVirtFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(targetMethod, targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
						else
							result = VirtFuncInvoker3< uint32_t, String_t*, String_t*, uint32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, String_t*, String_t*, uint32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchResourceName0, ___pchBuffer1, ___unBufferLen2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRResources__LoadSharedResource::BeginInvoke(System.String,System.String,System.UInt32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _LoadSharedResource_BeginInvoke_m2290ACA71D6B59B7C96469F08E108BD317B95EB7 (_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E * __this, String_t* ___pchResourceName0, String_t* ___pchBuffer1, uint32_t ___unBufferLen2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_LoadSharedResource_BeginInvoke_m2290ACA71D6B59B7C96469F08E108BD317B95EB7_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchResourceName0;
	__d_args[1] = ___pchBuffer1;
	__d_args[2] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unBufferLen2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.UInt32 Valve.VR.IVRResources__LoadSharedResource::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _LoadSharedResource_EndInvoke_m26E010270DA1A8B32D93021B80858DC9B498D05F (_LoadSharedResource_t2D29ACF4445A51D42576CCC317FA02104F7BEC0E * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRScreenshots
extern "C" void IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshal_pinvoke(const IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B& unmarshaled, IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshaled_pinvoke& marshaled)
{
	marshaled.___RequestScreenshot_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RequestScreenshot_0()));
	marshaled.___HookScreenshot_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HookScreenshot_1()));
	marshaled.___GetScreenshotPropertyType_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetScreenshotPropertyType_2()));
	marshaled.___GetScreenshotPropertyFilename_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetScreenshotPropertyFilename_3()));
	marshaled.___UpdateScreenshotProgress_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_UpdateScreenshotProgress_4()));
	marshaled.___TakeStereoScreenshot_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_TakeStereoScreenshot_5()));
	marshaled.___SubmitScreenshot_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SubmitScreenshot_6()));
}
extern "C" void IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshal_pinvoke_back(const IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshaled_pinvoke& marshaled, IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_RequestScreenshot_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0>(marshaled.___RequestScreenshot_0, _RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0_il2cpp_TypeInfo_var));
	unmarshaled.set_HookScreenshot_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8>(marshaled.___HookScreenshot_1, _HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetScreenshotPropertyType_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC>(marshaled.___GetScreenshotPropertyType_2, _GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC_il2cpp_TypeInfo_var));
	unmarshaled.set_GetScreenshotPropertyFilename_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064>(marshaled.___GetScreenshotPropertyFilename_3, _GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064_il2cpp_TypeInfo_var));
	unmarshaled.set_UpdateScreenshotProgress_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11>(marshaled.___UpdateScreenshotProgress_4, _UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11_il2cpp_TypeInfo_var));
	unmarshaled.set_TakeStereoScreenshot_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33>(marshaled.___TakeStereoScreenshot_5, _TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33_il2cpp_TypeInfo_var));
	unmarshaled.set_SubmitScreenshot_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791>(marshaled.___SubmitScreenshot_6, _SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRScreenshots
extern "C" void IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshal_pinvoke_cleanup(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRScreenshots
extern "C" void IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshal_com(const IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B& unmarshaled, IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshaled_com& marshaled)
{
	marshaled.___RequestScreenshot_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RequestScreenshot_0()));
	marshaled.___HookScreenshot_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_HookScreenshot_1()));
	marshaled.___GetScreenshotPropertyType_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetScreenshotPropertyType_2()));
	marshaled.___GetScreenshotPropertyFilename_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetScreenshotPropertyFilename_3()));
	marshaled.___UpdateScreenshotProgress_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_UpdateScreenshotProgress_4()));
	marshaled.___TakeStereoScreenshot_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_TakeStereoScreenshot_5()));
	marshaled.___SubmitScreenshot_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SubmitScreenshot_6()));
}
extern "C" void IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshal_com_back(const IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshaled_com& marshaled, IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_RequestScreenshot_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0>(marshaled.___RequestScreenshot_0, _RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0_il2cpp_TypeInfo_var));
	unmarshaled.set_HookScreenshot_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8>(marshaled.___HookScreenshot_1, _HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetScreenshotPropertyType_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC>(marshaled.___GetScreenshotPropertyType_2, _GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC_il2cpp_TypeInfo_var));
	unmarshaled.set_GetScreenshotPropertyFilename_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064>(marshaled.___GetScreenshotPropertyFilename_3, _GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064_il2cpp_TypeInfo_var));
	unmarshaled.set_UpdateScreenshotProgress_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11>(marshaled.___UpdateScreenshotProgress_4, _UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11_il2cpp_TypeInfo_var));
	unmarshaled.set_TakeStereoScreenshot_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33>(marshaled.___TakeStereoScreenshot_5, _TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33_il2cpp_TypeInfo_var));
	unmarshaled.set_SubmitScreenshot_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791>(marshaled.___SubmitScreenshot_6, _SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRScreenshots
extern "C" void IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshal_com_cleanup(IVRScreenshots_t19042740D8FA1AD853B6282F5222C29D1F83565B_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  uint32_t DelegatePInvokeWrapper__GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 (_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 * __this, uint32_t ___screenshotHandle0, int32_t ___filenameType1, StringBuilder_t * ___pchFilename2, uint32_t ___cchFilename3, int32_t* ___pError4, const RuntimeMethod* method)
{
	typedef uint32_t (STDCALL *PInvokeFunc)(uint32_t, int32_t, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchFilename2U27 to native representation
	char* ____pchFilename2_marshaled = NULL;
	____pchFilename2_marshaled = il2cpp_codegen_marshal_string_builder(___pchFilename2);

	// Native function invocation
	uint32_t returnValue = il2cppPInvokeFunc(___screenshotHandle0, ___filenameType1, ____pchFilename2_marshaled, ___cchFilename3, ___pError4);

	// Marshaling of parameter U27___pchFilename2U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchFilename2, ____pchFilename2_marshaled);

	// Marshaling cleanup of parameter U27___pchFilename2U27 native representation
	il2cpp_codegen_marshal_free(____pchFilename2_marshaled);
	____pchFilename2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetScreenshotPropertyFilename__ctor_m60C0A42601917BEF16D6B9CFD99EB6E52C7CD23F (_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.UInt32 Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename::Invoke(System.UInt32,Valve.VR.EVRScreenshotPropertyFilenames,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRScreenshotErrorU26)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetScreenshotPropertyFilename_Invoke_m3F03B7B18DB2EE511CDFB09D556FF738D2A45D5A (_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 * __this, uint32_t ___screenshotHandle0, int32_t ___filenameType1, StringBuilder_t * ___pchFilename2, uint32_t ___cchFilename3, int32_t* ___pError4, const RuntimeMethod* method)
{
	uint32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 5)
				{
					// open
					typedef uint32_t (*FunctionPointerType) (uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
				}
				else
				{
					// closed
					typedef uint32_t (*FunctionPointerType) (void*, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef uint32_t (*FunctionPointerType) (uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
							else
								result = GenericVirtFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
							else
								result = VirtFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
						}
					}
				}
				else
				{
					typedef uint32_t (*FunctionPointerType) (void*, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef uint32_t (*FunctionPointerType) (uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
			}
			else
			{
				// closed
				typedef uint32_t (*FunctionPointerType) (void*, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef uint32_t (*FunctionPointerType) (uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
						else
							result = GenericVirtFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
						else
							result = VirtFuncInvoker5< uint32_t, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4);
					}
				}
			}
			else
			{
				typedef uint32_t (*FunctionPointerType) (void*, uint32_t, int32_t, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___filenameType1, ___pchFilename2, ___cchFilename3, ___pError4, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename::BeginInvoke(System.UInt32,Valve.VR.EVRScreenshotPropertyFilenames,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRScreenshotErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetScreenshotPropertyFilename_BeginInvoke_m7A3CCC05E7C6293BA16F455FB27ED25D0485B646 (_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 * __this, uint32_t ___screenshotHandle0, int32_t ___filenameType1, StringBuilder_t * ___pchFilename2, uint32_t ___cchFilename3, int32_t* ___pError4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetScreenshotPropertyFilename_BeginInvoke_m7A3CCC05E7C6293BA16F455FB27ED25D0485B646_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___screenshotHandle0);
	__d_args[1] = Box(EVRScreenshotPropertyFilenames_t8BC7049F6171FCE1DD57E4BB3EC0A4FAAC254CE0_il2cpp_TypeInfo_var, &___filenameType1);
	__d_args[2] = ___pchFilename2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___cchFilename3);
	__d_args[4] = Box(EVRScreenshotError_t6112ECF0757A423E1EE66777030BBCC64F9A28DD_il2cpp_TypeInfo_var, &*___pError4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.UInt32 Valve.VR.IVRScreenshots__GetScreenshotPropertyFilename::EndInvoke(Valve.VR.EVRScreenshotErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR uint32_t _GetScreenshotPropertyFilename_EndInvoke_mAAD5B3D9012FD2CA187D0F13C97F6D7711C2D645 (_GetScreenshotPropertyFilename_tE7A10F8E9FE4B83E4DB8E00B1E042EE27DFAA064 * __this, int32_t* ___pError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(uint32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC (_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC * __this, uint32_t ___screenshotHandle0, int32_t* ___pError1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___screenshotHandle0, ___pError1);

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__GetScreenshotPropertyType::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetScreenshotPropertyType__ctor_mEEF711ACD93A0954A13BBB19689DC9E30CFA0E89 (_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotType Valve.VR.IVRScreenshots__GetScreenshotPropertyType::Invoke(System.UInt32,Valve.VR.EVRScreenshotErrorU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetScreenshotPropertyType_Invoke_m260912C51CFE781CE27CD3368223B23858EA6E40 (_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC * __this, uint32_t ___screenshotHandle0, int32_t* ___pError1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___pError1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___pError1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint32_t, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___pError1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___pError1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___pError1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___pError1);
							else
								result = VirtFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___pError1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___pError1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___pError1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___pError1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint32_t, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___pError1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___pError1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___pError1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___pError1);
						else
							result = VirtFuncInvoker2< int32_t, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___pError1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___pError1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__GetScreenshotPropertyType::BeginInvoke(System.UInt32,Valve.VR.EVRScreenshotErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetScreenshotPropertyType_BeginInvoke_m86783D80B5A1CB86C42F8FE0A352981EF730A0F6 (_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC * __this, uint32_t ___screenshotHandle0, int32_t* ___pError1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetScreenshotPropertyType_BeginInvoke_m86783D80B5A1CB86C42F8FE0A352981EF730A0F6_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___screenshotHandle0);
	__d_args[1] = Box(EVRScreenshotError_t6112ECF0757A423E1EE66777030BBCC64F9A28DD_il2cpp_TypeInfo_var, &*___pError1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRScreenshotType Valve.VR.IVRScreenshots__GetScreenshotPropertyType::EndInvoke(Valve.VR.EVRScreenshotErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetScreenshotPropertyType_EndInvoke_m834ABC43C9BE684B1C56D7489DAFDF7252273F73 (_GetScreenshotPropertyType_tA269FC02ABEC6B772D9A46292D87059086C6C7EC * __this, int32_t* ___pError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 (_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 * __this, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319* ___pSupportedTypes0, int32_t ___numTypes1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t*, int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pSupportedTypes0U27 to native representation
	int32_t* ____pSupportedTypes0_marshaled = NULL;
	if (___pSupportedTypes0 != NULL)
	{
		____pSupportedTypes0_marshaled = reinterpret_cast<int32_t*>((___pSupportedTypes0)->GetAddressAtUnchecked(0));
	}

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pSupportedTypes0_marshaled, ___numTypes1);

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__HookScreenshot::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _HookScreenshot__ctor_m2043AF55CFBC2B5789A86330502459A651F1B934 (_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__HookScreenshot::Invoke(Valve.VR.EVRScreenshotType[],System.Int32)
extern "C" IL2CPP_METHOD_ATTR int32_t _HookScreenshot_Invoke_m3A39ADD3ABAB2A884A96892ECFB36124C14D6AA5 (_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 * __this, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319* ___pSupportedTypes0, int32_t ___numTypes1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pSupportedTypes0, ___numTypes1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pSupportedTypes0, ___numTypes1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pSupportedTypes0, ___numTypes1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t >::Invoke(targetMethod, targetThis, ___pSupportedTypes0, ___numTypes1);
							else
								result = GenericVirtFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t >::Invoke(targetMethod, targetThis, ___pSupportedTypes0, ___numTypes1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pSupportedTypes0, ___numTypes1);
							else
								result = VirtFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pSupportedTypes0, ___numTypes1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pSupportedTypes0, ___numTypes1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pSupportedTypes0, ___numTypes1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pSupportedTypes0, ___numTypes1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pSupportedTypes0, ___numTypes1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t >::Invoke(targetMethod, targetThis, ___pSupportedTypes0, ___numTypes1);
						else
							result = GenericVirtFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t >::Invoke(targetMethod, targetThis, ___pSupportedTypes0, ___numTypes1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pSupportedTypes0, ___numTypes1);
						else
							result = VirtFuncInvoker2< int32_t, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pSupportedTypes0, ___numTypes1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pSupportedTypes0, ___numTypes1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__HookScreenshot::BeginInvoke(Valve.VR.EVRScreenshotType[],System.Int32,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _HookScreenshot_BeginInvoke_m241EF3236D5F4A5DE3D7A5D11328B08EEBD019A0 (_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 * __this, EVRScreenshotTypeU5BU5D_t47787F0E474A8DB9CA981163D3C1741C63952319* ___pSupportedTypes0, int32_t ___numTypes1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_HookScreenshot_BeginInvoke_m241EF3236D5F4A5DE3D7A5D11328B08EEBD019A0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pSupportedTypes0;
	__d_args[1] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___numTypes1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__HookScreenshot::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _HookScreenshot_EndInvoke_m1B11ABB52C214AA2847600F27F97DA80960142A4 (_HookScreenshot_t3C8814D81A807E69E2200378050F381A2D541CA8 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 (_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 * __this, uint32_t* ___pOutScreenshotHandle0, int32_t ___type1, String_t* ___pchPreviewFilename2, String_t* ___pchVRFilename3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t*, int32_t, char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchPreviewFilename2U27 to native representation
	char* ____pchPreviewFilename2_marshaled = NULL;
	____pchPreviewFilename2_marshaled = il2cpp_codegen_marshal_string(___pchPreviewFilename2);

	// Marshaling of parameter U27___pchVRFilename3U27 to native representation
	char* ____pchVRFilename3_marshaled = NULL;
	____pchVRFilename3_marshaled = il2cpp_codegen_marshal_string(___pchVRFilename3);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___pOutScreenshotHandle0, ___type1, ____pchPreviewFilename2_marshaled, ____pchVRFilename3_marshaled);

	// Marshaling cleanup of parameter U27___pchPreviewFilename2U27 native representation
	il2cpp_codegen_marshal_free(____pchPreviewFilename2_marshaled);
	____pchPreviewFilename2_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchVRFilename3U27 native representation
	il2cpp_codegen_marshal_free(____pchVRFilename3_marshaled);
	____pchVRFilename3_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__RequestScreenshot::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _RequestScreenshot__ctor_mD5C136D3197336E2888981B1E4675D8207B39918 (_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__RequestScreenshot::Invoke(System.UInt32U26,Valve.VR.EVRScreenshotType,System.String,System.String)
extern "C" IL2CPP_METHOD_ATTR int32_t _RequestScreenshot_Invoke_mD510EFDEFFD009B278E1AEF809E7985519191023 (_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 * __this, uint32_t* ___pOutScreenshotHandle0, int32_t ___type1, String_t* ___pchPreviewFilename2, String_t* ___pchVRFilename3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
							else
								result = VirtFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
						else
							result = VirtFuncInvoker4< int32_t, uint32_t*, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint32_t*, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___type1, ___pchPreviewFilename2, ___pchVRFilename3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__RequestScreenshot::BeginInvoke(System.UInt32U26,Valve.VR.EVRScreenshotType,System.String,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _RequestScreenshot_BeginInvoke_mE4024A59F14092FD0F3049BE9422DDB3A76B8874 (_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 * __this, uint32_t* ___pOutScreenshotHandle0, int32_t ___type1, String_t* ___pchPreviewFilename2, String_t* ___pchVRFilename3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_RequestScreenshot_BeginInvoke_mE4024A59F14092FD0F3049BE9422DDB3A76B8874_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pOutScreenshotHandle0);
	__d_args[1] = Box(EVRScreenshotType_tC97F6F8AE73B25181938CCF81FD07D5F13A98D4D_il2cpp_TypeInfo_var, &___type1);
	__d_args[2] = ___pchPreviewFilename2;
	__d_args[3] = ___pchVRFilename3;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__RequestScreenshot::EndInvoke(System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _RequestScreenshot_EndInvoke_mA8C35818BEE823B1A3C131F77470E897EB4B6E76 (_RequestScreenshot_tECA054EA4D3A5B32FD97D7C3EB697CE2867AF6A0 * __this, uint32_t* ___pOutScreenshotHandle0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOutScreenshotHandle0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 (_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 * __this, uint32_t ___screenshotHandle0, int32_t ___type1, String_t* ___pchSourcePreviewFilename2, String_t* ___pchSourceVRFilename3, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, int32_t, char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSourcePreviewFilename2U27 to native representation
	char* ____pchSourcePreviewFilename2_marshaled = NULL;
	____pchSourcePreviewFilename2_marshaled = il2cpp_codegen_marshal_string(___pchSourcePreviewFilename2);

	// Marshaling of parameter U27___pchSourceVRFilename3U27 to native representation
	char* ____pchSourceVRFilename3_marshaled = NULL;
	____pchSourceVRFilename3_marshaled = il2cpp_codegen_marshal_string(___pchSourceVRFilename3);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___screenshotHandle0, ___type1, ____pchSourcePreviewFilename2_marshaled, ____pchSourceVRFilename3_marshaled);

	// Marshaling cleanup of parameter U27___pchSourcePreviewFilename2U27 native representation
	il2cpp_codegen_marshal_free(____pchSourcePreviewFilename2_marshaled);
	____pchSourcePreviewFilename2_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSourceVRFilename3U27 native representation
	il2cpp_codegen_marshal_free(____pchSourceVRFilename3_marshaled);
	____pchSourceVRFilename3_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__SubmitScreenshot::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SubmitScreenshot__ctor_mA0A9210E4F646550C9CDB26DC615F6B9D2174323 (_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__SubmitScreenshot::Invoke(System.UInt32,Valve.VR.EVRScreenshotType,System.String,System.String)
extern "C" IL2CPP_METHOD_ATTR int32_t _SubmitScreenshot_Invoke_m44F9F90AD9EB4AE230EF3C1C9B5671C68D7F2270 (_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 * __this, uint32_t ___screenshotHandle0, int32_t ___type1, String_t* ___pchSourcePreviewFilename2, String_t* ___pchSourceVRFilename3, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
							else
								result = GenericVirtFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
							else
								result = VirtFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
						else
							result = GenericVirtFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
						else
							result = VirtFuncInvoker4< int32_t, uint32_t, int32_t, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, int32_t, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___type1, ___pchSourcePreviewFilename2, ___pchSourceVRFilename3, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__SubmitScreenshot::BeginInvoke(System.UInt32,Valve.VR.EVRScreenshotType,System.String,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SubmitScreenshot_BeginInvoke_m85DEA54ECFDD165E36CC5BA45E5CA376E8167E3A (_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 * __this, uint32_t ___screenshotHandle0, int32_t ___type1, String_t* ___pchSourcePreviewFilename2, String_t* ___pchSourceVRFilename3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SubmitScreenshot_BeginInvoke_m85DEA54ECFDD165E36CC5BA45E5CA376E8167E3A_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___screenshotHandle0);
	__d_args[1] = Box(EVRScreenshotType_tC97F6F8AE73B25181938CCF81FD07D5F13A98D4D_il2cpp_TypeInfo_var, &___type1);
	__d_args[2] = ___pchSourcePreviewFilename2;
	__d_args[3] = ___pchSourceVRFilename3;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__SubmitScreenshot::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _SubmitScreenshot_EndInvoke_mF242FB3D719BFD520EED7A1535E5F2D2D921EC7B (_SubmitScreenshot_t1E00B7C4ECA42A33F2F546C8D94FB5E62B789791 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 (_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 * __this, uint32_t* ___pOutScreenshotHandle0, String_t* ___pchPreviewFilename1, String_t* ___pchVRFilename2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t*, char*, char*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchPreviewFilename1U27 to native representation
	char* ____pchPreviewFilename1_marshaled = NULL;
	____pchPreviewFilename1_marshaled = il2cpp_codegen_marshal_string(___pchPreviewFilename1);

	// Marshaling of parameter U27___pchVRFilename2U27 to native representation
	char* ____pchVRFilename2_marshaled = NULL;
	____pchVRFilename2_marshaled = il2cpp_codegen_marshal_string(___pchVRFilename2);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___pOutScreenshotHandle0, ____pchPreviewFilename1_marshaled, ____pchVRFilename2_marshaled);

	// Marshaling cleanup of parameter U27___pchPreviewFilename1U27 native representation
	il2cpp_codegen_marshal_free(____pchPreviewFilename1_marshaled);
	____pchPreviewFilename1_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchVRFilename2U27 native representation
	il2cpp_codegen_marshal_free(____pchVRFilename2_marshaled);
	____pchVRFilename2_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__TakeStereoScreenshot::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _TakeStereoScreenshot__ctor_mB6A709FBE2024E479EB10F623C650851ECEE0E67 (_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__TakeStereoScreenshot::Invoke(System.UInt32U26,System.String,System.String)
extern "C" IL2CPP_METHOD_ATTR int32_t _TakeStereoScreenshot_Invoke_m32469FEE509DBD5869A75BC68756F4A94CC0B775 (_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 * __this, uint32_t* ___pOutScreenshotHandle0, String_t* ___pchPreviewFilename1, String_t* ___pchVRFilename2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint32_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint32_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint32_t*, String_t*, String_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
							else
								result = GenericVirtFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
							else
								result = VirtFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t*, String_t*, String_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint32_t*, String_t*, String_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
						else
							result = GenericVirtFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(targetMethod, targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
						else
							result = VirtFuncInvoker3< int32_t, uint32_t*, String_t*, String_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint32_t*, String_t*, String_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pOutScreenshotHandle0, ___pchPreviewFilename1, ___pchVRFilename2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__TakeStereoScreenshot::BeginInvoke(System.UInt32U26,System.String,System.String,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _TakeStereoScreenshot_BeginInvoke_mDB59B31F5985B7D663EA0818A3048A4D363B0D03 (_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 * __this, uint32_t* ___pOutScreenshotHandle0, String_t* ___pchPreviewFilename1, String_t* ___pchVRFilename2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_TakeStereoScreenshot_BeginInvoke_mDB59B31F5985B7D663EA0818A3048A4D363B0D03_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &*___pOutScreenshotHandle0);
	__d_args[1] = ___pchPreviewFilename1;
	__d_args[2] = ___pchVRFilename2;
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__TakeStereoScreenshot::EndInvoke(System.UInt32U26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _TakeStereoScreenshot_EndInvoke_m00D95A49BD1B212A6163CD511FC5CD622E4C1323 (_TakeStereoScreenshot_tC32CA06B67910327C53EDA471CDD03F314901B33 * __this, uint32_t* ___pOutScreenshotHandle0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___pOutScreenshotHandle0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 (_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 * __this, uint32_t ___screenshotHandle0, float ___flProgress1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(uint32_t, float);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(___screenshotHandle0, ___flProgress1);

	return returnValue;
}
// System.Void Valve.VR.IVRScreenshots__UpdateScreenshotProgress::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _UpdateScreenshotProgress__ctor_mDBF5C864BAE0F5F8783F4B3C97E53D26006FA5AB (_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__UpdateScreenshotProgress::Invoke(System.UInt32,System.Single)
extern "C" IL2CPP_METHOD_ATTR int32_t _UpdateScreenshotProgress_Invoke_m55CA583D18AE2E33CBDFDE5CEAB12DA690513647 (_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 * __this, uint32_t ___screenshotHandle0, float ___flProgress1, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef int32_t (*FunctionPointerType) (uint32_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___flProgress1, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___flProgress1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (uint32_t, float, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___flProgress1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, uint32_t, float >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___flProgress1);
							else
								result = GenericVirtFuncInvoker2< int32_t, uint32_t, float >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___flProgress1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, uint32_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___flProgress1);
							else
								result = VirtFuncInvoker2< int32_t, uint32_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___flProgress1);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, uint32_t, float, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___flProgress1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef int32_t (*FunctionPointerType) (uint32_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___flProgress1, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___flProgress1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (uint32_t, float, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___screenshotHandle0, ___flProgress1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, uint32_t, float >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___flProgress1);
						else
							result = GenericVirtFuncInvoker2< int32_t, uint32_t, float >::Invoke(targetMethod, targetThis, ___screenshotHandle0, ___flProgress1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, uint32_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___screenshotHandle0, ___flProgress1);
						else
							result = VirtFuncInvoker2< int32_t, uint32_t, float >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___screenshotHandle0, ___flProgress1);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, uint32_t, float, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___screenshotHandle0, ___flProgress1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRScreenshots__UpdateScreenshotProgress::BeginInvoke(System.UInt32,System.Single,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _UpdateScreenshotProgress_BeginInvoke_m64A0EFEC19DDE71512FD8D61FF38B1C663FF67D0 (_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 * __this, uint32_t ___screenshotHandle0, float ___flProgress1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_UpdateScreenshotProgress_BeginInvoke_m64A0EFEC19DDE71512FD8D61FF38B1C663FF67D0_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___screenshotHandle0);
	__d_args[1] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___flProgress1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// Valve.VR.EVRScreenshotError Valve.VR.IVRScreenshots__UpdateScreenshotProgress::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _UpdateScreenshotProgress_EndInvoke_mB4D2BFACDA9ED86AC6562598A718F04FACB8FF76 (_UpdateScreenshotProgress_tF83D10722F5140A9A3BD5A76BD49EB040BC1EA11 * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRSettings
extern "C" void IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshal_pinvoke(const IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5& unmarshaled, IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshaled_pinvoke& marshaled)
{
	marshaled.___GetSettingsErrorNameFromEnum_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSettingsErrorNameFromEnum_0()));
	marshaled.___Sync_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_Sync_1()));
	marshaled.___SetBool_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetBool_2()));
	marshaled.___SetInt32_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetInt32_3()));
	marshaled.___SetFloat_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetFloat_4()));
	marshaled.___SetString_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetString_5()));
	marshaled.___GetBool_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetBool_6()));
	marshaled.___GetInt32_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetInt32_7()));
	marshaled.___GetFloat_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFloat_8()));
	marshaled.___GetString_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetString_9()));
	marshaled.___RemoveSection_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveSection_10()));
	marshaled.___RemoveKeyInSection_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveKeyInSection_11()));
}
extern "C" void IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshal_pinvoke_back(const IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshaled_pinvoke& marshaled, IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetSettingsErrorNameFromEnum_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA>(marshaled.___GetSettingsErrorNameFromEnum_0, _GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA_il2cpp_TypeInfo_var));
	unmarshaled.set_Sync_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14>(marshaled.___Sync_1, _Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14_il2cpp_TypeInfo_var));
	unmarshaled.set_SetBool_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514>(marshaled.___SetBool_2, _SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514_il2cpp_TypeInfo_var));
	unmarshaled.set_SetInt32_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297>(marshaled.___SetInt32_3, _SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297_il2cpp_TypeInfo_var));
	unmarshaled.set_SetFloat_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD>(marshaled.___SetFloat_4, _SetFloat_t98FDC04346EC28577694E439EABA871417670ABD_il2cpp_TypeInfo_var));
	unmarshaled.set_SetString_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35>(marshaled.___SetString_5, _SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35_il2cpp_TypeInfo_var));
	unmarshaled.set_GetBool_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F>(marshaled.___GetBool_6, _GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetInt32_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E>(marshaled.___GetInt32_7, _GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFloat_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791>(marshaled.___GetFloat_8, _GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791_il2cpp_TypeInfo_var));
	unmarshaled.set_GetString_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6>(marshaled.___GetString_9, _GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveSection_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222>(marshaled.___RemoveSection_10, _RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveKeyInSection_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728>(marshaled.___RemoveKeyInSection_11, _RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRSettings
extern "C" void IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshal_pinvoke_cleanup(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRSettings
extern "C" void IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshal_com(const IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5& unmarshaled, IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshaled_com& marshaled)
{
	marshaled.___GetSettingsErrorNameFromEnum_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSettingsErrorNameFromEnum_0()));
	marshaled.___Sync_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_Sync_1()));
	marshaled.___SetBool_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetBool_2()));
	marshaled.___SetInt32_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetInt32_3()));
	marshaled.___SetFloat_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetFloat_4()));
	marshaled.___SetString_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetString_5()));
	marshaled.___GetBool_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetBool_6()));
	marshaled.___GetInt32_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetInt32_7()));
	marshaled.___GetFloat_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFloat_8()));
	marshaled.___GetString_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetString_9()));
	marshaled.___RemoveSection_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveSection_10()));
	marshaled.___RemoveKeyInSection_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_RemoveKeyInSection_11()));
}
extern "C" void IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshal_com_back(const IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshaled_com& marshaled, IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetSettingsErrorNameFromEnum_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA>(marshaled.___GetSettingsErrorNameFromEnum_0, _GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA_il2cpp_TypeInfo_var));
	unmarshaled.set_Sync_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14>(marshaled.___Sync_1, _Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14_il2cpp_TypeInfo_var));
	unmarshaled.set_SetBool_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514>(marshaled.___SetBool_2, _SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514_il2cpp_TypeInfo_var));
	unmarshaled.set_SetInt32_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297>(marshaled.___SetInt32_3, _SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297_il2cpp_TypeInfo_var));
	unmarshaled.set_SetFloat_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD>(marshaled.___SetFloat_4, _SetFloat_t98FDC04346EC28577694E439EABA871417670ABD_il2cpp_TypeInfo_var));
	unmarshaled.set_SetString_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35>(marshaled.___SetString_5, _SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35_il2cpp_TypeInfo_var));
	unmarshaled.set_GetBool_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F>(marshaled.___GetBool_6, _GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetInt32_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E>(marshaled.___GetInt32_7, _GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFloat_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791>(marshaled.___GetFloat_8, _GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791_il2cpp_TypeInfo_var));
	unmarshaled.set_GetString_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6>(marshaled.___GetString_9, _GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveSection_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222>(marshaled.___RemoveSection_10, _RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222_il2cpp_TypeInfo_var));
	unmarshaled.set_RemoveKeyInSection_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728>(marshaled.___RemoveKeyInSection_11, _RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRSettings
extern "C" void IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshal_com_cleanup(IVRSettings_t13927753F0B6FF346AC52444B88E0BF8D84C63D5_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F (_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___peError2);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRSettings__GetBool::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetBool__ctor_m92FA0B5851F55EBF19DB34F03289E1F0C2A6C8F6 (_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRSettings__GetBool::Invoke(System.String,System.String,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR bool _GetBool_Invoke_mD43B3607D25FD981DD83EC82356A49312B8531E9 (_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
			else if (___parameterCount != 3)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< bool, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = GenericVirtFuncInvoker2< bool, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< bool, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = VirtFuncInvoker2< bool, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = GenericVirtFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = VirtFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< bool, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = GenericVirtFuncInvoker2< bool, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< bool, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = VirtFuncInvoker2< bool, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = GenericVirtFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = VirtFuncInvoker3< bool, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__GetBool::BeginInvoke(System.String,System.String,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetBool_BeginInvoke_mDBDB057ECF57E5FA09E9494A25058FE6586CBA52 (_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetBool_BeginInvoke_mDBDB057ECF57E5FA09E9494A25058FE6586CBA52_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Boolean Valve.VR.IVRSettings__GetBool::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _GetBool_EndInvoke_m01B7DC60F87AB0DED754D670B17F36E68892CF87 (_GetBool_t64D45876D73CF3CA5245A66AAF51032EC62BD02F * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  float DelegatePInvokeWrapper__GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 (_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	typedef float (STDCALL *PInvokeFunc)(char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	float returnValue = il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___peError2);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRSettings__GetFloat::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetFloat__ctor_m177555C6AB02D9F81D5DE936F9F5FAD3EB619A3E (_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Single Valve.VR.IVRSettings__GetFloat::Invoke(System.String,System.String,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR float _GetFloat_Invoke_mA5FA9F6C0BF9D98BEFEA423B4F90CB181D47C1DF (_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	float result = 0.0f;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else
				{
					// closed
					typedef float (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
			else if (___parameterCount != 3)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< float, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = GenericVirtFuncInvoker2< float, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< float, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = VirtFuncInvoker2< float, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
					}
				}
				else
				{
					typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = GenericVirtFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = VirtFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
					}
				}
				else
				{
					typedef float (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
			else
			{
				// closed
				typedef float (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< float, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = GenericVirtFuncInvoker2< float, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< float, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = VirtFuncInvoker2< float, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
				}
			}
			else
			{
				typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef float (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = GenericVirtFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = VirtFuncInvoker3< float, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
				}
			}
			else
			{
				typedef float (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__GetFloat::BeginInvoke(System.String,System.String,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetFloat_BeginInvoke_m1209950BC2C121707AA62F33649C03CE74ACD53F (_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetFloat_BeginInvoke_m1209950BC2C121707AA62F33649C03CE74ACD53F_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Single Valve.VR.IVRSettings__GetFloat::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR float _GetFloat_EndInvoke_mA60F823AC17A25F8F01C993E7AC9DB3894A29375 (_GetFloat_t0A42CAB57E1EF62A0C45A96992DACF5173E2D791 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(float*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  int32_t DelegatePInvokeWrapper__GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E (_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___peError2);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	return returnValue;
}
// System.Void Valve.VR.IVRSettings__GetInt32::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetInt32__ctor_m3D72A813986BD53FAA043AD05857AE248291F31F (_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Int32 Valve.VR.IVRSettings__GetInt32::Invoke(System.String,System.String,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetInt32_Invoke_m3E03530C5566C060DAA2C44668750B77D7ABAC00 (_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	int32_t result = 0;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else
				{
					// closed
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
			else if (___parameterCount != 3)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = GenericVirtFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = VirtFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = GenericVirtFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								result = VirtFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
					}
				}
				else
				{
					typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
			else
			{
				// closed
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = GenericVirtFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = VirtFuncInvoker2< int32_t, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef int32_t (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = GenericVirtFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							result = VirtFuncInvoker3< int32_t, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
				}
			}
			else
			{
				typedef int32_t (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__GetInt32::BeginInvoke(System.String,System.String,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetInt32_BeginInvoke_m543D5182C194AB049D50BADCEC07EA5296DD5325 (_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetInt32_BeginInvoke_m543D5182C194AB049D50BADCEC07EA5296DD5325_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Int32 Valve.VR.IVRSettings__GetInt32::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR int32_t _GetInt32_EndInvoke_mE5EE506DBD3C612A543F3CBF2DD8E055A1654CB9 (_GetInt32_t9F1C3CAB16FC947A62EA84C87F83380CB076BC0E * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(int32_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  intptr_t DelegatePInvokeWrapper__GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA (_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA * __this, int32_t ___eError0, const RuntimeMethod* method)
{
	typedef intptr_t (STDCALL *PInvokeFunc)(int32_t);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	intptr_t returnValue = il2cppPInvokeFunc(___eError0);

	return returnValue;
}
// System.Void Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetSettingsErrorNameFromEnum__ctor_m6BA369A7D765CBD68EB46EDCBC593E16DC61B139 (_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.IntPtr Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum::Invoke(Valve.VR.EVRSettingsError)
extern "C" IL2CPP_METHOD_ATTR intptr_t _GetSettingsErrorNameFromEnum_Invoke_m3BA0B3648B90B84827EBEAC215707826E75DDF43 (_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA * __this, int32_t ___eError0, const RuntimeMethod* method)
{
	intptr_t result;
	memset(&result, 0, sizeof(result));
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 1)
				{
					// open
					typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___eError0, targetMethod);
				}
				else
				{
					// closed
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eError0, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___eError0, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___eError0);
							else
								result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___eError0);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eError0);
							else
								result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eError0);
						}
					}
				}
				else
				{
					typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eError0, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 1)
			{
				// open
				typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___eError0, targetMethod);
			}
			else
			{
				// closed
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eError0, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef intptr_t (*FunctionPointerType) (int32_t, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___eError0, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___eError0);
						else
							result = GenericVirtFuncInvoker1< intptr_t, int32_t >::Invoke(targetMethod, targetThis, ___eError0);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___eError0);
						else
							result = VirtFuncInvoker1< intptr_t, int32_t >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___eError0);
					}
				}
			}
			else
			{
				typedef intptr_t (*FunctionPointerType) (void*, int32_t, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___eError0, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum::BeginInvoke(Valve.VR.EVRSettingsError,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetSettingsErrorNameFromEnum_BeginInvoke_m402493593C208400647001D71C2BD8794C74EE95 (_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA * __this, int32_t ___eError0, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback1, RuntimeObject * ___object2, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetSettingsErrorNameFromEnum_BeginInvoke_m402493593C208400647001D71C2BD8794C74EE95_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[2] = {0};
	__d_args[0] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &___eError0);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback1, (RuntimeObject*)___object2);
}
// System.IntPtr Valve.VR.IVRSettings__GetSettingsErrorNameFromEnum::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR intptr_t _GetSettingsErrorNameFromEnum_EndInvoke_m12F729CB7913718FB2FBB92880872E34405FB81A (_GetSettingsErrorNameFromEnum_t5064A00817639B21F390F0B6973E59FBE66D26EA * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
	return *(intptr_t*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 (_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, StringBuilder_t * ___pchValue2, uint32_t ___unValueLen3, int32_t* ___peError4, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, char*, uint32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Marshaling of parameter U27___pchValue2U27 to native representation
	char* ____pchValue2_marshaled = NULL;
	____pchValue2_marshaled = il2cpp_codegen_marshal_string_builder(___pchValue2);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ____pchValue2_marshaled, ___unValueLen3, ___peError4);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	// Marshaling of parameter U27___pchValue2U27 back from native representation
	il2cpp_codegen_marshal_string_builder_result(___pchValue2, ____pchValue2_marshaled);

	// Marshaling cleanup of parameter U27___pchValue2U27 native representation
	il2cpp_codegen_marshal_free(____pchValue2_marshaled);
	____pchValue2_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__GetString::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _GetString__ctor_mA36ABA3C5036D5B7D346AC4B6BC1549AEE4E788A (_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__GetString::Invoke(System.String,System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR void _GetString_Invoke_m723D287A657E1A57F0DC3AD39371BEC0139BAC77 (_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, StringBuilder_t * ___pchValue2, uint32_t ___unValueLen3, int32_t* ___peError4, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 5)
				{
					// open
					typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
			}
			else if (___parameterCount != 5)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
							else
								GenericVirtActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
							else
								VirtActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
							else
								GenericVirtActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
							else
								VirtActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 5)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
			}
		}
		else if (___parameterCount != 5)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
						else
							GenericVirtActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
						else
							VirtActionInvoker4< String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
						else
							GenericVirtActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
						else
							VirtActionInvoker5< String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, StringBuilder_t *, uint32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___unValueLen3, ___peError4, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__GetString::BeginInvoke(System.String,System.String,System.Text.StringBuilder,System.UInt32,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _GetString_BeginInvoke_m58B9AC2F5592776EF891216854A16E9968ADED96 (_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, StringBuilder_t * ___pchValue2, uint32_t ___unValueLen3, int32_t* ___peError4, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback5, RuntimeObject * ___object6, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_GetString_BeginInvoke_m58B9AC2F5592776EF891216854A16E9968ADED96_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[6] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = ___pchValue2;
	__d_args[3] = Box(UInt32_t4980FA09003AFAAB5A6E361BA2748EA9A005709B_il2cpp_TypeInfo_var, &___unValueLen3);
	__d_args[4] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError4);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback5, (RuntimeObject*)___object6);
}
// System.Void Valve.VR.IVRSettings__GetString::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _GetString_EndInvoke_m750E5512D554BC0108D6B4775FC9FA05F929F5D1 (_GetString_t6509C95102A4B9166181B31B42ACBF306C44CEE6 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 (_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___peError2);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__RemoveKeyInSection::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _RemoveKeyInSection__ctor_m536A12CD69DAE913A3FF9E7D1E1E721F604D12B3 (_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__RemoveKeyInSection::Invoke(System.String,System.String,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR void _RemoveKeyInSection_Invoke_mD7BFBC2C10A4CAC9BDE631DA8FBEF8CEE2501A34 (_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 3)
				{
					// open
					typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
			else if (___parameterCount != 3)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								GenericVirtActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								VirtActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								GenericVirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
							else
								VirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 3)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else if (___parameterCount != 3)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							GenericVirtActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							VirtActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							GenericVirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
						else
							VirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___peError2, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__RemoveKeyInSection::BeginInvoke(System.String,System.String,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _RemoveKeyInSection_BeginInvoke_m78C9111C935E80C06532B451F20301A77720C2BD (_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t* ___peError2, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback3, RuntimeObject * ___object4, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_RemoveKeyInSection_BeginInvoke_m78C9111C935E80C06532B451F20301A77720C2BD_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[4] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError2);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback3, (RuntimeObject*)___object4);
}
// System.Void Valve.VR.IVRSettings__RemoveKeyInSection::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _RemoveKeyInSection_EndInvoke_m599D0C59D0D4F2E418ADAAA86FD56B029F09A2F2 (_RemoveKeyInSection_tA6E2D240A9D54EA9D706AD203A18A6799AC38728 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 (_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 * __this, String_t* ___pchSection0, int32_t* ___peError1, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ___peError1);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__RemoveSection::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _RemoveSection__ctor_m7258B05DEB18C7E9C3D4C6DEE01E979DD75D0E5C (_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__RemoveSection::Invoke(System.String,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR void _RemoveSection_Invoke_mF3C0C7A3063456E2DF35939BB81EB3FE42BD283E (_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 * __this, String_t* ___pchSection0, int32_t* ___peError1, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___peError1, targetMethod);
				}
			}
			else if (___parameterCount != 2)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker1< int32_t* >::Invoke(targetMethod, ___pchSection0, ___peError1);
							else
								GenericVirtActionInvoker1< int32_t* >::Invoke(targetMethod, ___pchSection0, ___peError1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker1< int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___peError1);
							else
								VirtActionInvoker1< int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___peError1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___peError1);
							else
								GenericVirtActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___peError1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___peError1);
							else
								VirtActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___peError1);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___peError1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___peError1, targetMethod);
			}
		}
		else if (___parameterCount != 2)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker1< int32_t* >::Invoke(targetMethod, ___pchSection0, ___peError1);
						else
							GenericVirtActionInvoker1< int32_t* >::Invoke(targetMethod, ___pchSection0, ___peError1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker1< int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___peError1);
						else
							VirtActionInvoker1< int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___peError1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (String_t*, int32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pchSection0, ___peError1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___peError1);
						else
							GenericVirtActionInvoker2< String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___peError1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___peError1);
						else
							VirtActionInvoker2< String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___peError1);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___peError1, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__RemoveSection::BeginInvoke(System.String,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _RemoveSection_BeginInvoke_m2D8B1C262FF5EBE4995DAC7D67E381293003E61C (_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 * __this, String_t* ___pchSection0, int32_t* ___peError1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_RemoveSection_BeginInvoke_m2D8B1C262FF5EBE4995DAC7D67E381293003E61C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Void Valve.VR.IVRSettings__RemoveSection::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _RemoveSection_EndInvoke_mBC674FAF97056B1ADB3FF07A9B50DE12ADA4803D (_RemoveSection_tC2B83203BBBD7F1210E759ED4F43AD768A764222 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 (_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, bool ___bValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, static_cast<int32_t>(___bValue2), ___peError3);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__SetBool::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetBool__ctor_mFE078B4D02BBFFF505D9F6C64350982F2D3A7396 (_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__SetBool::Invoke(System.String,System.String,System.Boolean,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR void _SetBool_Invoke_m9893ECB84FF4BEFABCFA9B60FB7E11FB4A3FD27A (_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, bool ___bValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker3< String_t*, bool, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
							else
								GenericVirtActionInvoker3< String_t*, bool, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker3< String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
							else
								VirtActionInvoker3< String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
							else
								GenericVirtActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
							else
								VirtActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker3< String_t*, bool, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
						else
							GenericVirtActionInvoker3< String_t*, bool, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker3< String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
						else
							VirtActionInvoker3< String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
						else
							GenericVirtActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
						else
							VirtActionInvoker4< String_t*, String_t*, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, bool, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___bValue2, ___peError3, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__SetBool::BeginInvoke(System.String,System.String,System.Boolean,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetBool_BeginInvoke_m8651FD3BAE343B15214EABBF606C83889787515C (_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, bool ___bValue2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetBool_BeginInvoke_m8651FD3BAE343B15214EABBF606C83889787515C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bValue2);
	__d_args[3] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRSettings__SetBool::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetBool_EndInvoke_m3D3997025E46C8BA399BFB008A76264EFD3CE9A6 (_SetBool_t15C8F5808A57FDE1F1BA144E8793C8BF4720E514 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetFloat_t98FDC04346EC28577694E439EABA871417670ABD (_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, float ___flValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, float, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___flValue2, ___peError3);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__SetFloat::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetFloat__ctor_m24AB2A722AFADE6EBF159F91F378217588181951 (_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__SetFloat::Invoke(System.String,System.String,System.Single,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR void _SetFloat_Invoke_m560F9B6884499A2EAC56719DA9FDC13F91DFCA6F (_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, float ___flValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker3< String_t*, float, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
							else
								GenericVirtActionInvoker3< String_t*, float, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker3< String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
							else
								VirtActionInvoker3< String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
							else
								GenericVirtActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
							else
								VirtActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker3< String_t*, float, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
						else
							GenericVirtActionInvoker3< String_t*, float, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker3< String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
						else
							VirtActionInvoker3< String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
						else
							GenericVirtActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
						else
							VirtActionInvoker4< String_t*, String_t*, float, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, float, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___flValue2, ___peError3, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__SetFloat::BeginInvoke(System.String,System.String,System.Single,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetFloat_BeginInvoke_mD1352B0B4A39DCAD728B7F397E693235AE0E4A34 (_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, float ___flValue2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetFloat_BeginInvoke_mD1352B0B4A39DCAD728B7F397E693235AE0E4A34_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(Single_tDDDA9169C4E4E308AC6D7A824F9B28DC82204AE1_il2cpp_TypeInfo_var, &___flValue2);
	__d_args[3] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRSettings__SetFloat::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetFloat_EndInvoke_mE78EDCA1D315EAA05447D6FA01D47BCEA215B50C (_SetFloat_t98FDC04346EC28577694E439EABA871417670ABD * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 (_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t ___nValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ___nValue2, ___peError3);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__SetInt32::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetInt32__ctor_m9CEA8C49B8C1A7070E644399E8578B55A0E82F43 (_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__SetInt32::Invoke(System.String,System.String,System.Int32,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR void _SetInt32_Invoke_m79F0491B3B79BAD7A5B07138FFA839E9E36C4F8B (_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t ___nValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
							else
								GenericVirtActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
							else
								VirtActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
							else
								GenericVirtActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
							else
								VirtActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
						else
							GenericVirtActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
						else
							VirtActionInvoker3< String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
						else
							GenericVirtActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
						else
							VirtActionInvoker4< String_t*, String_t*, int32_t, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, int32_t, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___nValue2, ___peError3, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__SetInt32::BeginInvoke(System.String,System.String,System.Int32,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetInt32_BeginInvoke_m8682EFFFABAEE72D1F4CBDB1675D715242A597ED (_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, int32_t ___nValue2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetInt32_BeginInvoke_m8682EFFFABAEE72D1F4CBDB1675D715242A597ED_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = Box(Int32_t585191389E07734F19F3156FF88FB3EF4800D102_il2cpp_TypeInfo_var, &___nValue2);
	__d_args[3] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRSettings__SetInt32::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetInt32_EndInvoke_m84A3EEF4CBA40E857B37F01C015C2C8A1A52D073 (_SetInt32_tADE17CEED5267D4F3010F174334CCD0A04E71297 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 (_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, String_t* ___pchValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)(char*, char*, char*, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Marshaling of parameter U27___pchSection0U27 to native representation
	char* ____pchSection0_marshaled = NULL;
	____pchSection0_marshaled = il2cpp_codegen_marshal_string(___pchSection0);

	// Marshaling of parameter U27___pchSettingsKey1U27 to native representation
	char* ____pchSettingsKey1_marshaled = NULL;
	____pchSettingsKey1_marshaled = il2cpp_codegen_marshal_string(___pchSettingsKey1);

	// Marshaling of parameter U27___pchValue2U27 to native representation
	char* ____pchValue2_marshaled = NULL;
	____pchValue2_marshaled = il2cpp_codegen_marshal_string(___pchValue2);

	// Native function invocation
	il2cppPInvokeFunc(____pchSection0_marshaled, ____pchSettingsKey1_marshaled, ____pchValue2_marshaled, ___peError3);

	// Marshaling cleanup of parameter U27___pchSection0U27 native representation
	il2cpp_codegen_marshal_free(____pchSection0_marshaled);
	____pchSection0_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchSettingsKey1U27 native representation
	il2cpp_codegen_marshal_free(____pchSettingsKey1_marshaled);
	____pchSettingsKey1_marshaled = NULL;

	// Marshaling cleanup of parameter U27___pchValue2U27 native representation
	il2cpp_codegen_marshal_free(____pchValue2_marshaled);
	____pchValue2_marshaled = NULL;

}
// System.Void Valve.VR.IVRSettings__SetString::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _SetString__ctor_m08C606B87A795E5D3E7B4F03F13C6F5D134E3F4E (_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSettings__SetString::Invoke(System.String,System.String,System.String,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR void _SetString_Invoke_m57C5498EA9CEBCE855B1C8FCACBA301E1A59A6F9 (_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, String_t* ___pchValue2, int32_t* ___peError3, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 4)
				{
					// open
					typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
				}
			}
			else if (___parameterCount != 4)
			{
				// open
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
							else
								GenericVirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
							else
								VirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
							((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
							else
								GenericVirtActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
							else
								VirtActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 4)
			{
				// open
				typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
			}
		}
		else if (___parameterCount != 4)
		{
			// open
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
						else
							GenericVirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(targetMethod, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
						else
							VirtActionInvoker3< String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef void (*FunctionPointerType) (String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
						((FunctionPointerType)targetMethodPointer)(___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
						else
							GenericVirtActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(targetMethod, targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
						else
							VirtActionInvoker4< String_t*, String_t*, String_t*, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, String_t*, String_t*, String_t*, int32_t*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, ___pchSection0, ___pchSettingsKey1, ___pchValue2, ___peError3, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSettings__SetString::BeginInvoke(System.String,System.String,System.String,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _SetString_BeginInvoke_mFB40AE3A58868A78292C28FEA2B3CF334E16507C (_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 * __this, String_t* ___pchSection0, String_t* ___pchSettingsKey1, String_t* ___pchValue2, int32_t* ___peError3, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback4, RuntimeObject * ___object5, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_SetString_BeginInvoke_mFB40AE3A58868A78292C28FEA2B3CF334E16507C_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[5] = {0};
	__d_args[0] = ___pchSection0;
	__d_args[1] = ___pchSettingsKey1;
	__d_args[2] = ___pchValue2;
	__d_args[3] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError3);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback4, (RuntimeObject*)___object5);
}
// System.Void Valve.VR.IVRSettings__SetString::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _SetString_EndInvoke_m10E21E434738F323E9ADC940AA06565BCEC873FE (_SetString_t4F9DAC4EB4688B518A1A2E63EA15E298A9BBCB35 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  bool DelegatePInvokeWrapper__Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 (_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 * __this, bool ___bForce0, int32_t* ___peError1, const RuntimeMethod* method)
{
	typedef int32_t (STDCALL *PInvokeFunc)(int32_t, int32_t*);
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	int32_t returnValue = il2cppPInvokeFunc(static_cast<int32_t>(___bForce0), ___peError1);

	return static_cast<bool>(returnValue);
}
// System.Void Valve.VR.IVRSettings__Sync::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _Sync__ctor_mA1D8EEE784973EF43D8063D53AAEA1D0AAEFBF22 (_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Boolean Valve.VR.IVRSettings__Sync::Invoke(System.Boolean,Valve.VR.EVRSettingsErrorU26)
extern "C" IL2CPP_METHOD_ATTR bool _Sync_Invoke_m557CF8B0A7CF0476D2E039BEAFA608B163636542 (_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 * __this, bool ___bForce0, int32_t* ___peError1, const RuntimeMethod* method)
{
	bool result = false;
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 2)
				{
					// open
					typedef bool (*FunctionPointerType) (bool, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(___bForce0, ___peError1, targetMethod);
				}
				else
				{
					// closed
					typedef bool (*FunctionPointerType) (void*, bool, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bForce0, ___peError1, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (targetThis == NULL)
						{
							typedef bool (*FunctionPointerType) (bool, int32_t*, const RuntimeMethod*);
							result = ((FunctionPointerType)targetMethodPointer)(___bForce0, ___peError1, targetMethod);
						}
						else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = GenericInterfaceFuncInvoker2< bool, bool, int32_t* >::Invoke(targetMethod, targetThis, ___bForce0, ___peError1);
							else
								result = GenericVirtFuncInvoker2< bool, bool, int32_t* >::Invoke(targetMethod, targetThis, ___bForce0, ___peError1);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								result = InterfaceFuncInvoker2< bool, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bForce0, ___peError1);
							else
								result = VirtFuncInvoker2< bool, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bForce0, ___peError1);
						}
					}
				}
				else
				{
					typedef bool (*FunctionPointerType) (void*, bool, int32_t*, const RuntimeMethod*);
					result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bForce0, ___peError1, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 2)
			{
				// open
				typedef bool (*FunctionPointerType) (bool, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(___bForce0, ___peError1, targetMethod);
			}
			else
			{
				// closed
				typedef bool (*FunctionPointerType) (void*, bool, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bForce0, ___peError1, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (targetThis == NULL)
					{
						typedef bool (*FunctionPointerType) (bool, int32_t*, const RuntimeMethod*);
						result = ((FunctionPointerType)targetMethodPointer)(___bForce0, ___peError1, targetMethod);
					}
					else if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = GenericInterfaceFuncInvoker2< bool, bool, int32_t* >::Invoke(targetMethod, targetThis, ___bForce0, ___peError1);
						else
							result = GenericVirtFuncInvoker2< bool, bool, int32_t* >::Invoke(targetMethod, targetThis, ___bForce0, ___peError1);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							result = InterfaceFuncInvoker2< bool, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis, ___bForce0, ___peError1);
						else
							result = VirtFuncInvoker2< bool, bool, int32_t* >::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis, ___bForce0, ___peError1);
					}
				}
			}
			else
			{
				typedef bool (*FunctionPointerType) (void*, bool, int32_t*, const RuntimeMethod*);
				result = ((FunctionPointerType)targetMethodPointer)(targetThis, ___bForce0, ___peError1, targetMethod);
			}
		}
	}
	return result;
}
// System.IAsyncResult Valve.VR.IVRSettings__Sync::BeginInvoke(System.Boolean,Valve.VR.EVRSettingsErrorU26,System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _Sync_BeginInvoke_m33A6EDEFC21D59223871E6A48EAA5A77781B19CB (_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 * __this, bool ___bForce0, int32_t* ___peError1, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback2, RuntimeObject * ___object3, const RuntimeMethod* method)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (_Sync_BeginInvoke_m33A6EDEFC21D59223871E6A48EAA5A77781B19CB_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	void *__d_args[3] = {0};
	__d_args[0] = Box(Boolean_tB53F6830F670160873277339AA58F15CAED4399C_il2cpp_TypeInfo_var, &___bForce0);
	__d_args[1] = Box(EVRSettingsError_t0BBBAAB0B224C428FD6B5056E950B35EEDE64915_il2cpp_TypeInfo_var, &*___peError1);
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback2, (RuntimeObject*)___object3);
}
// System.Boolean Valve.VR.IVRSettings__Sync::EndInvoke(Valve.VR.EVRSettingsErrorU26,System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR bool _Sync_EndInvoke_m16EE49F17AFDF88F2B55A7CF832D613A3F0E8439 (_Sync_t1B3FC51C0137C7F85441751561F8EC70D7357C14 * __this, int32_t* ___peError0, RuntimeObject* ___result1, const RuntimeMethod* method)
{
	void* ___out_args[] = {
	___peError0,
	};
	RuntimeObject *__result = il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result1, ___out_args);
	return *(bool*)UnBox ((RuntimeObject*)__result);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
// Conversion methods for marshalling of: Valve.VR.IVRSystem
extern "C" void IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshal_pinvoke(const IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053& unmarshaled, IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshaled_pinvoke& marshaled)
{
	marshaled.___GetRecommendedRenderTargetSize_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRecommendedRenderTargetSize_0()));
	marshaled.___GetProjectionMatrix_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetProjectionMatrix_1()));
	marshaled.___GetProjectionRaw_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetProjectionRaw_2()));
	marshaled.___ComputeDistortion_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ComputeDistortion_3()));
	marshaled.___GetEyeToHeadTransform_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetEyeToHeadTransform_4()));
	marshaled.___GetTimeSinceLastVsync_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTimeSinceLastVsync_5()));
	marshaled.___GetD3D9AdapterIndex_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetD3D9AdapterIndex_6()));
	marshaled.___GetDXGIOutputInfo_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDXGIOutputInfo_7()));
	marshaled.___GetOutputDevice_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOutputDevice_8()));
	marshaled.___IsDisplayOnDesktop_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsDisplayOnDesktop_9()));
	marshaled.___SetDisplayVisibility_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetDisplayVisibility_10()));
	marshaled.___GetDeviceToAbsoluteTrackingPose_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDeviceToAbsoluteTrackingPose_11()));
	marshaled.___ResetSeatedZeroPose_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ResetSeatedZeroPose_12()));
	marshaled.___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13()));
	marshaled.___GetRawZeroPoseToStandingAbsoluteTrackingPose_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRawZeroPoseToStandingAbsoluteTrackingPose_14()));
	marshaled.___GetSortedTrackedDeviceIndicesOfClass_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSortedTrackedDeviceIndicesOfClass_15()));
	marshaled.___GetTrackedDeviceActivityLevel_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTrackedDeviceActivityLevel_16()));
	marshaled.___ApplyTransform_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ApplyTransform_17()));
	marshaled.___GetTrackedDeviceIndexForControllerRole_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTrackedDeviceIndexForControllerRole_18()));
	marshaled.___GetControllerRoleForTrackedDeviceIndex_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetControllerRoleForTrackedDeviceIndex_19()));
	marshaled.___GetTrackedDeviceClass_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTrackedDeviceClass_20()));
	marshaled.___IsTrackedDeviceConnected_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsTrackedDeviceConnected_21()));
	marshaled.___GetBoolTrackedDeviceProperty_22 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetBoolTrackedDeviceProperty_22()));
	marshaled.___GetFloatTrackedDeviceProperty_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFloatTrackedDeviceProperty_23()));
	marshaled.___GetInt32TrackedDeviceProperty_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetInt32TrackedDeviceProperty_24()));
	marshaled.___GetUint64TrackedDeviceProperty_25 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetUint64TrackedDeviceProperty_25()));
	marshaled.___GetMatrix34TrackedDeviceProperty_26 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetMatrix34TrackedDeviceProperty_26()));
	marshaled.___GetArrayTrackedDeviceProperty_27 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetArrayTrackedDeviceProperty_27()));
	marshaled.___GetStringTrackedDeviceProperty_28 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetStringTrackedDeviceProperty_28()));
	marshaled.___GetPropErrorNameFromEnum_29 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetPropErrorNameFromEnum_29()));
	marshaled.___PollNextEvent_30 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PollNextEvent_30()));
	marshaled.___PollNextEventWithPose_31 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PollNextEventWithPose_31()));
	marshaled.___GetEventTypeNameFromEnum_32 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetEventTypeNameFromEnum_32()));
	marshaled.___GetHiddenAreaMesh_33 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetHiddenAreaMesh_33()));
	marshaled.___GetControllerState_34 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetControllerState_34()));
	marshaled.___GetControllerStateWithPose_35 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetControllerStateWithPose_35()));
	marshaled.___TriggerHapticPulse_36 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_TriggerHapticPulse_36()));
	marshaled.___GetButtonIdNameFromEnum_37 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetButtonIdNameFromEnum_37()));
	marshaled.___GetControllerAxisTypeNameFromEnum_38 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetControllerAxisTypeNameFromEnum_38()));
	marshaled.___IsInputAvailable_39 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsInputAvailable_39()));
	marshaled.___IsSteamVRDrawingControllers_40 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsSteamVRDrawingControllers_40()));
	marshaled.___ShouldApplicationPause_41 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShouldApplicationPause_41()));
	marshaled.___ShouldApplicationReduceRenderingWork_42 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShouldApplicationReduceRenderingWork_42()));
	marshaled.___DriverDebugRequest_43 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_DriverDebugRequest_43()));
	marshaled.___PerformFirmwareUpdate_44 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PerformFirmwareUpdate_44()));
	marshaled.___AcknowledgeQuit_Exiting_45 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_AcknowledgeQuit_Exiting_45()));
	marshaled.___AcknowledgeQuit_UserPrompt_46 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_AcknowledgeQuit_UserPrompt_46()));
}
extern "C" void IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshal_pinvoke_back(const IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshaled_pinvoke& marshaled, IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_pinvoke_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetRecommendedRenderTargetSize_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F>(marshaled.___GetRecommendedRenderTargetSize_0, _GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetProjectionMatrix_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C>(marshaled.___GetProjectionMatrix_1, _GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetProjectionRaw_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5>(marshaled.___GetProjectionRaw_2, _GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5_il2cpp_TypeInfo_var));
	unmarshaled.set_ComputeDistortion_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D>(marshaled.___ComputeDistortion_3, _ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D_il2cpp_TypeInfo_var));
	unmarshaled.set_GetEyeToHeadTransform_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115>(marshaled.___GetEyeToHeadTransform_4, _GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTimeSinceLastVsync_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4>(marshaled.___GetTimeSinceLastVsync_5, _GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4_il2cpp_TypeInfo_var));
	unmarshaled.set_GetD3D9AdapterIndex_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5>(marshaled.___GetD3D9AdapterIndex_6, _GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDXGIOutputInfo_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B>(marshaled.___GetDXGIOutputInfo_7, _GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOutputDevice_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA>(marshaled.___GetOutputDevice_8, _GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA_il2cpp_TypeInfo_var));
	unmarshaled.set_IsDisplayOnDesktop_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332>(marshaled.___IsDisplayOnDesktop_9, _IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332_il2cpp_TypeInfo_var));
	unmarshaled.set_SetDisplayVisibility_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70>(marshaled.___SetDisplayVisibility_10, _SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDeviceToAbsoluteTrackingPose_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5>(marshaled.___GetDeviceToAbsoluteTrackingPose_11, _GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5_il2cpp_TypeInfo_var));
	unmarshaled.set_ResetSeatedZeroPose_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560>(marshaled.___ResetSeatedZeroPose_12, _ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560_il2cpp_TypeInfo_var));
	unmarshaled.set_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347>(marshaled.___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13, _GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRawZeroPoseToStandingAbsoluteTrackingPose_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198>(marshaled.___GetRawZeroPoseToStandingAbsoluteTrackingPose_14, _GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198_il2cpp_TypeInfo_var));
	unmarshaled.set_GetSortedTrackedDeviceIndicesOfClass_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187>(marshaled.___GetSortedTrackedDeviceIndicesOfClass_15, _GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTrackedDeviceActivityLevel_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74>(marshaled.___GetTrackedDeviceActivityLevel_16, _GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74_il2cpp_TypeInfo_var));
	unmarshaled.set_ApplyTransform_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76>(marshaled.___ApplyTransform_17, _ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTrackedDeviceIndexForControllerRole_18(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062>(marshaled.___GetTrackedDeviceIndexForControllerRole_18, _GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062_il2cpp_TypeInfo_var));
	unmarshaled.set_GetControllerRoleForTrackedDeviceIndex_19(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8>(marshaled.___GetControllerRoleForTrackedDeviceIndex_19, _GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTrackedDeviceClass_20(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87>(marshaled.___GetTrackedDeviceClass_20, _GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87_il2cpp_TypeInfo_var));
	unmarshaled.set_IsTrackedDeviceConnected_21(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9>(marshaled.___IsTrackedDeviceConnected_21, _IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9_il2cpp_TypeInfo_var));
	unmarshaled.set_GetBoolTrackedDeviceProperty_22(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02>(marshaled.___GetBoolTrackedDeviceProperty_22, _GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFloatTrackedDeviceProperty_23(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965>(marshaled.___GetFloatTrackedDeviceProperty_23, _GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965_il2cpp_TypeInfo_var));
	unmarshaled.set_GetInt32TrackedDeviceProperty_24(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0>(marshaled.___GetInt32TrackedDeviceProperty_24, _GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0_il2cpp_TypeInfo_var));
	unmarshaled.set_GetUint64TrackedDeviceProperty_25(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6>(marshaled.___GetUint64TrackedDeviceProperty_25, _GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6_il2cpp_TypeInfo_var));
	unmarshaled.set_GetMatrix34TrackedDeviceProperty_26(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A>(marshaled.___GetMatrix34TrackedDeviceProperty_26, _GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A_il2cpp_TypeInfo_var));
	unmarshaled.set_GetArrayTrackedDeviceProperty_27(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915>(marshaled.___GetArrayTrackedDeviceProperty_27, _GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915_il2cpp_TypeInfo_var));
	unmarshaled.set_GetStringTrackedDeviceProperty_28(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F>(marshaled.___GetStringTrackedDeviceProperty_28, _GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetPropErrorNameFromEnum_29(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898>(marshaled.___GetPropErrorNameFromEnum_29, _GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898_il2cpp_TypeInfo_var));
	unmarshaled.set_PollNextEvent_30(il2cpp_codegen_marshal_function_ptr_to_delegate<_PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E>(marshaled.___PollNextEvent_30, _PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E_il2cpp_TypeInfo_var));
	unmarshaled.set_PollNextEventWithPose_31(il2cpp_codegen_marshal_function_ptr_to_delegate<_PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83>(marshaled.___PollNextEventWithPose_31, _PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83_il2cpp_TypeInfo_var));
	unmarshaled.set_GetEventTypeNameFromEnum_32(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837>(marshaled.___GetEventTypeNameFromEnum_32, _GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837_il2cpp_TypeInfo_var));
	unmarshaled.set_GetHiddenAreaMesh_33(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54>(marshaled.___GetHiddenAreaMesh_33, _GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54_il2cpp_TypeInfo_var));
	unmarshaled.set_GetControllerState_34(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407>(marshaled.___GetControllerState_34, _GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407_il2cpp_TypeInfo_var));
	unmarshaled.set_GetControllerStateWithPose_35(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32>(marshaled.___GetControllerStateWithPose_35, _GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32_il2cpp_TypeInfo_var));
	unmarshaled.set_TriggerHapticPulse_36(il2cpp_codegen_marshal_function_ptr_to_delegate<_TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046>(marshaled.___TriggerHapticPulse_36, _TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046_il2cpp_TypeInfo_var));
	unmarshaled.set_GetButtonIdNameFromEnum_37(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8>(marshaled.___GetButtonIdNameFromEnum_37, _GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetControllerAxisTypeNameFromEnum_38(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641>(marshaled.___GetControllerAxisTypeNameFromEnum_38, _GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641_il2cpp_TypeInfo_var));
	unmarshaled.set_IsInputAvailable_39(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95>(marshaled.___IsInputAvailable_39, _IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95_il2cpp_TypeInfo_var));
	unmarshaled.set_IsSteamVRDrawingControllers_40(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464>(marshaled.___IsSteamVRDrawingControllers_40, _IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464_il2cpp_TypeInfo_var));
	unmarshaled.set_ShouldApplicationPause_41(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70>(marshaled.___ShouldApplicationPause_41, _ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70_il2cpp_TypeInfo_var));
	unmarshaled.set_ShouldApplicationReduceRenderingWork_42(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B>(marshaled.___ShouldApplicationReduceRenderingWork_42, _ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B_il2cpp_TypeInfo_var));
	unmarshaled.set_DriverDebugRequest_43(il2cpp_codegen_marshal_function_ptr_to_delegate<_DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B>(marshaled.___DriverDebugRequest_43, _DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B_il2cpp_TypeInfo_var));
	unmarshaled.set_PerformFirmwareUpdate_44(il2cpp_codegen_marshal_function_ptr_to_delegate<_PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F>(marshaled.___PerformFirmwareUpdate_44, _PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F_il2cpp_TypeInfo_var));
	unmarshaled.set_AcknowledgeQuit_Exiting_45(il2cpp_codegen_marshal_function_ptr_to_delegate<_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F>(marshaled.___AcknowledgeQuit_Exiting_45, _AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F_il2cpp_TypeInfo_var));
	unmarshaled.set_AcknowledgeQuit_UserPrompt_46(il2cpp_codegen_marshal_function_ptr_to_delegate<_AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228>(marshaled.___AcknowledgeQuit_UserPrompt_46, _AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRSystem
extern "C" void IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshal_pinvoke_cleanup(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshaled_pinvoke& marshaled)
{
}
// Conversion methods for marshalling of: Valve.VR.IVRSystem
extern "C" void IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshal_com(const IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053& unmarshaled, IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshaled_com& marshaled)
{
	marshaled.___GetRecommendedRenderTargetSize_0 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRecommendedRenderTargetSize_0()));
	marshaled.___GetProjectionMatrix_1 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetProjectionMatrix_1()));
	marshaled.___GetProjectionRaw_2 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetProjectionRaw_2()));
	marshaled.___ComputeDistortion_3 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ComputeDistortion_3()));
	marshaled.___GetEyeToHeadTransform_4 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetEyeToHeadTransform_4()));
	marshaled.___GetTimeSinceLastVsync_5 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTimeSinceLastVsync_5()));
	marshaled.___GetD3D9AdapterIndex_6 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetD3D9AdapterIndex_6()));
	marshaled.___GetDXGIOutputInfo_7 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDXGIOutputInfo_7()));
	marshaled.___GetOutputDevice_8 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetOutputDevice_8()));
	marshaled.___IsDisplayOnDesktop_9 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsDisplayOnDesktop_9()));
	marshaled.___SetDisplayVisibility_10 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_SetDisplayVisibility_10()));
	marshaled.___GetDeviceToAbsoluteTrackingPose_11 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetDeviceToAbsoluteTrackingPose_11()));
	marshaled.___ResetSeatedZeroPose_12 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ResetSeatedZeroPose_12()));
	marshaled.___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13()));
	marshaled.___GetRawZeroPoseToStandingAbsoluteTrackingPose_14 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetRawZeroPoseToStandingAbsoluteTrackingPose_14()));
	marshaled.___GetSortedTrackedDeviceIndicesOfClass_15 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetSortedTrackedDeviceIndicesOfClass_15()));
	marshaled.___GetTrackedDeviceActivityLevel_16 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTrackedDeviceActivityLevel_16()));
	marshaled.___ApplyTransform_17 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ApplyTransform_17()));
	marshaled.___GetTrackedDeviceIndexForControllerRole_18 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTrackedDeviceIndexForControllerRole_18()));
	marshaled.___GetControllerRoleForTrackedDeviceIndex_19 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetControllerRoleForTrackedDeviceIndex_19()));
	marshaled.___GetTrackedDeviceClass_20 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetTrackedDeviceClass_20()));
	marshaled.___IsTrackedDeviceConnected_21 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsTrackedDeviceConnected_21()));
	marshaled.___GetBoolTrackedDeviceProperty_22 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetBoolTrackedDeviceProperty_22()));
	marshaled.___GetFloatTrackedDeviceProperty_23 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetFloatTrackedDeviceProperty_23()));
	marshaled.___GetInt32TrackedDeviceProperty_24 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetInt32TrackedDeviceProperty_24()));
	marshaled.___GetUint64TrackedDeviceProperty_25 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetUint64TrackedDeviceProperty_25()));
	marshaled.___GetMatrix34TrackedDeviceProperty_26 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetMatrix34TrackedDeviceProperty_26()));
	marshaled.___GetArrayTrackedDeviceProperty_27 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetArrayTrackedDeviceProperty_27()));
	marshaled.___GetStringTrackedDeviceProperty_28 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetStringTrackedDeviceProperty_28()));
	marshaled.___GetPropErrorNameFromEnum_29 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetPropErrorNameFromEnum_29()));
	marshaled.___PollNextEvent_30 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PollNextEvent_30()));
	marshaled.___PollNextEventWithPose_31 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PollNextEventWithPose_31()));
	marshaled.___GetEventTypeNameFromEnum_32 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetEventTypeNameFromEnum_32()));
	marshaled.___GetHiddenAreaMesh_33 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetHiddenAreaMesh_33()));
	marshaled.___GetControllerState_34 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetControllerState_34()));
	marshaled.___GetControllerStateWithPose_35 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetControllerStateWithPose_35()));
	marshaled.___TriggerHapticPulse_36 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_TriggerHapticPulse_36()));
	marshaled.___GetButtonIdNameFromEnum_37 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetButtonIdNameFromEnum_37()));
	marshaled.___GetControllerAxisTypeNameFromEnum_38 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_GetControllerAxisTypeNameFromEnum_38()));
	marshaled.___IsInputAvailable_39 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsInputAvailable_39()));
	marshaled.___IsSteamVRDrawingControllers_40 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_IsSteamVRDrawingControllers_40()));
	marshaled.___ShouldApplicationPause_41 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShouldApplicationPause_41()));
	marshaled.___ShouldApplicationReduceRenderingWork_42 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_ShouldApplicationReduceRenderingWork_42()));
	marshaled.___DriverDebugRequest_43 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_DriverDebugRequest_43()));
	marshaled.___PerformFirmwareUpdate_44 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_PerformFirmwareUpdate_44()));
	marshaled.___AcknowledgeQuit_Exiting_45 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_AcknowledgeQuit_Exiting_45()));
	marshaled.___AcknowledgeQuit_UserPrompt_46 = il2cpp_codegen_marshal_delegate(reinterpret_cast<MulticastDelegate_t*>(unmarshaled.get_AcknowledgeQuit_UserPrompt_46()));
}
extern "C" void IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshal_com_back(const IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshaled_com& marshaled, IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053& unmarshaled)
{
	static bool s_Il2CppMethodInitialized;
	if (!s_Il2CppMethodInitialized)
	{
		il2cpp_codegen_initialize_method (IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_com_FromNativeMethodDefinition_MetadataUsageId);
		s_Il2CppMethodInitialized = true;
	}
	unmarshaled.set_GetRecommendedRenderTargetSize_0(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F>(marshaled.___GetRecommendedRenderTargetSize_0, _GetRecommendedRenderTargetSize_tE791BA5E28B30F2D451B02A8179972E4469BDD9F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetProjectionMatrix_1(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C>(marshaled.___GetProjectionMatrix_1, _GetProjectionMatrix_tEF06293015A6A270C3C255D7D5C20BED43A0451C_il2cpp_TypeInfo_var));
	unmarshaled.set_GetProjectionRaw_2(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5>(marshaled.___GetProjectionRaw_2, _GetProjectionRaw_t624E56D7670994FA5B0D4ADF9437B5271705B9C5_il2cpp_TypeInfo_var));
	unmarshaled.set_ComputeDistortion_3(il2cpp_codegen_marshal_function_ptr_to_delegate<_ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D>(marshaled.___ComputeDistortion_3, _ComputeDistortion_tCB43F770A84C35E6B0CE19A136B7F9506B74079D_il2cpp_TypeInfo_var));
	unmarshaled.set_GetEyeToHeadTransform_4(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115>(marshaled.___GetEyeToHeadTransform_4, _GetEyeToHeadTransform_t0FC02D7480B1DD1786900485CFCB659BED2F1115_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTimeSinceLastVsync_5(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4>(marshaled.___GetTimeSinceLastVsync_5, _GetTimeSinceLastVsync_t3E5649FCEF6F2DD35CE2A6E532C52467E918EDE4_il2cpp_TypeInfo_var));
	unmarshaled.set_GetD3D9AdapterIndex_6(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5>(marshaled.___GetD3D9AdapterIndex_6, _GetD3D9AdapterIndex_t24AD480249B575FB2400E3218A08B1CFBFC295D5_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDXGIOutputInfo_7(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B>(marshaled.___GetDXGIOutputInfo_7, _GetDXGIOutputInfo_tD04AB6C2F71E8FAAB89A329F8458CB081C9B388B_il2cpp_TypeInfo_var));
	unmarshaled.set_GetOutputDevice_8(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA>(marshaled.___GetOutputDevice_8, _GetOutputDevice_t705D7B6FA3CE80D6271F618EE85F9B3B57120EDA_il2cpp_TypeInfo_var));
	unmarshaled.set_IsDisplayOnDesktop_9(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332>(marshaled.___IsDisplayOnDesktop_9, _IsDisplayOnDesktop_t4BA5255E9D01D04F0BEA2076062394EB19366332_il2cpp_TypeInfo_var));
	unmarshaled.set_SetDisplayVisibility_10(il2cpp_codegen_marshal_function_ptr_to_delegate<_SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70>(marshaled.___SetDisplayVisibility_10, _SetDisplayVisibility_t0C386C40D949F28C2DA348D77525A074539ABF70_il2cpp_TypeInfo_var));
	unmarshaled.set_GetDeviceToAbsoluteTrackingPose_11(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5>(marshaled.___GetDeviceToAbsoluteTrackingPose_11, _GetDeviceToAbsoluteTrackingPose_t36788F566223DD44B11275FC49598F76E12CADD5_il2cpp_TypeInfo_var));
	unmarshaled.set_ResetSeatedZeroPose_12(il2cpp_codegen_marshal_function_ptr_to_delegate<_ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560>(marshaled.___ResetSeatedZeroPose_12, _ResetSeatedZeroPose_t3D4EFB0F0966F941AC52310481E802810DA38560_il2cpp_TypeInfo_var));
	unmarshaled.set_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347>(marshaled.___GetSeatedZeroPoseToStandingAbsoluteTrackingPose_13, _GetSeatedZeroPoseToStandingAbsoluteTrackingPose_t5AB5A4FEBB84429E620DFAC3FBE046B655E38347_il2cpp_TypeInfo_var));
	unmarshaled.set_GetRawZeroPoseToStandingAbsoluteTrackingPose_14(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198>(marshaled.___GetRawZeroPoseToStandingAbsoluteTrackingPose_14, _GetRawZeroPoseToStandingAbsoluteTrackingPose_t40DD486655675AFF1C192E6F0A714FF8900E9198_il2cpp_TypeInfo_var));
	unmarshaled.set_GetSortedTrackedDeviceIndicesOfClass_15(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187>(marshaled.___GetSortedTrackedDeviceIndicesOfClass_15, _GetSortedTrackedDeviceIndicesOfClass_t59B375BD64378C6BECE1682772A5F6F01BC35187_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTrackedDeviceActivityLevel_16(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74>(marshaled.___GetTrackedDeviceActivityLevel_16, _GetTrackedDeviceActivityLevel_tD3678794945B8222F818EF55BF99E6F1FD7E8F74_il2cpp_TypeInfo_var));
	unmarshaled.set_ApplyTransform_17(il2cpp_codegen_marshal_function_ptr_to_delegate<_ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76>(marshaled.___ApplyTransform_17, _ApplyTransform_t1E31B745FF4D1C9E4AF8FE4A99141224F24F8A76_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTrackedDeviceIndexForControllerRole_18(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062>(marshaled.___GetTrackedDeviceIndexForControllerRole_18, _GetTrackedDeviceIndexForControllerRole_t450622E9D588B0547D1C6A7992F46342E2DC5062_il2cpp_TypeInfo_var));
	unmarshaled.set_GetControllerRoleForTrackedDeviceIndex_19(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8>(marshaled.___GetControllerRoleForTrackedDeviceIndex_19, _GetControllerRoleForTrackedDeviceIndex_t9A97F4D32C1AECF503F033091B1955D1766E4AA8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetTrackedDeviceClass_20(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87>(marshaled.___GetTrackedDeviceClass_20, _GetTrackedDeviceClass_tA5E45FD6984DB8CB2E15272B556C4B212DE33C87_il2cpp_TypeInfo_var));
	unmarshaled.set_IsTrackedDeviceConnected_21(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9>(marshaled.___IsTrackedDeviceConnected_21, _IsTrackedDeviceConnected_tFF1B06FF4CAC0068087DFE83CE8AE3D5B13A1AC9_il2cpp_TypeInfo_var));
	unmarshaled.set_GetBoolTrackedDeviceProperty_22(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02>(marshaled.___GetBoolTrackedDeviceProperty_22, _GetBoolTrackedDeviceProperty_t301972016CB66909D0CC44B4F7DAD1CF4577CF02_il2cpp_TypeInfo_var));
	unmarshaled.set_GetFloatTrackedDeviceProperty_23(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965>(marshaled.___GetFloatTrackedDeviceProperty_23, _GetFloatTrackedDeviceProperty_tEC7AB86B3780F7FB800F8CDDC61D457C93D7D965_il2cpp_TypeInfo_var));
	unmarshaled.set_GetInt32TrackedDeviceProperty_24(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0>(marshaled.___GetInt32TrackedDeviceProperty_24, _GetInt32TrackedDeviceProperty_t1C62153B8A07058D752B0850116551A999B9DCB0_il2cpp_TypeInfo_var));
	unmarshaled.set_GetUint64TrackedDeviceProperty_25(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6>(marshaled.___GetUint64TrackedDeviceProperty_25, _GetUint64TrackedDeviceProperty_t0399565D84A6C4D9507F4C05D744828C80FB0AC6_il2cpp_TypeInfo_var));
	unmarshaled.set_GetMatrix34TrackedDeviceProperty_26(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A>(marshaled.___GetMatrix34TrackedDeviceProperty_26, _GetMatrix34TrackedDeviceProperty_t04AFA5840D1A285CF0C9E8DEEF27A2D452A6E78A_il2cpp_TypeInfo_var));
	unmarshaled.set_GetArrayTrackedDeviceProperty_27(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915>(marshaled.___GetArrayTrackedDeviceProperty_27, _GetArrayTrackedDeviceProperty_t280E7668A9CBD9DB728E850BE2CB6AD3A0A94915_il2cpp_TypeInfo_var));
	unmarshaled.set_GetStringTrackedDeviceProperty_28(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F>(marshaled.___GetStringTrackedDeviceProperty_28, _GetStringTrackedDeviceProperty_t5259E8053E04306F8DCF6510F84CCF4E2036560F_il2cpp_TypeInfo_var));
	unmarshaled.set_GetPropErrorNameFromEnum_29(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898>(marshaled.___GetPropErrorNameFromEnum_29, _GetPropErrorNameFromEnum_t8394C3ED1CA5EC4DEBED7C36E5B37629297F1898_il2cpp_TypeInfo_var));
	unmarshaled.set_PollNextEvent_30(il2cpp_codegen_marshal_function_ptr_to_delegate<_PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E>(marshaled.___PollNextEvent_30, _PollNextEvent_t9F2A4C5AC9E2207DD30CF9CD0E568700B6B4822E_il2cpp_TypeInfo_var));
	unmarshaled.set_PollNextEventWithPose_31(il2cpp_codegen_marshal_function_ptr_to_delegate<_PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83>(marshaled.___PollNextEventWithPose_31, _PollNextEventWithPose_t40CAFD39917DF051B650847B56B4E15407001A83_il2cpp_TypeInfo_var));
	unmarshaled.set_GetEventTypeNameFromEnum_32(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837>(marshaled.___GetEventTypeNameFromEnum_32, _GetEventTypeNameFromEnum_tB1D22CBA2072C6DCA380441303754A362DBC1837_il2cpp_TypeInfo_var));
	unmarshaled.set_GetHiddenAreaMesh_33(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54>(marshaled.___GetHiddenAreaMesh_33, _GetHiddenAreaMesh_t6FABEBC040D165530799B76F4169975FB14A8E54_il2cpp_TypeInfo_var));
	unmarshaled.set_GetControllerState_34(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407>(marshaled.___GetControllerState_34, _GetControllerState_tA784F1DF4DE8F75D850ECEAD498AEE4A2C7A6407_il2cpp_TypeInfo_var));
	unmarshaled.set_GetControllerStateWithPose_35(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32>(marshaled.___GetControllerStateWithPose_35, _GetControllerStateWithPose_t2D58CA60321CBD32ECFB9CB8628C097373AD3E32_il2cpp_TypeInfo_var));
	unmarshaled.set_TriggerHapticPulse_36(il2cpp_codegen_marshal_function_ptr_to_delegate<_TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046>(marshaled.___TriggerHapticPulse_36, _TriggerHapticPulse_tE62C158A0D4FDDC78C89F076EFCA8795AD45E046_il2cpp_TypeInfo_var));
	unmarshaled.set_GetButtonIdNameFromEnum_37(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8>(marshaled.___GetButtonIdNameFromEnum_37, _GetButtonIdNameFromEnum_t0945D2B4CF0AF04B15C662C0D890D672411A20F8_il2cpp_TypeInfo_var));
	unmarshaled.set_GetControllerAxisTypeNameFromEnum_38(il2cpp_codegen_marshal_function_ptr_to_delegate<_GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641>(marshaled.___GetControllerAxisTypeNameFromEnum_38, _GetControllerAxisTypeNameFromEnum_t1A26DE3CC54353C1A8A7C5F270486E116B2EB641_il2cpp_TypeInfo_var));
	unmarshaled.set_IsInputAvailable_39(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95>(marshaled.___IsInputAvailable_39, _IsInputAvailable_t28BFFC93AFEBA3FCA2132CDED5502DDA41947E95_il2cpp_TypeInfo_var));
	unmarshaled.set_IsSteamVRDrawingControllers_40(il2cpp_codegen_marshal_function_ptr_to_delegate<_IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464>(marshaled.___IsSteamVRDrawingControllers_40, _IsSteamVRDrawingControllers_t0AB1B8ADC0B8302F4FE503F0907EC176629DA464_il2cpp_TypeInfo_var));
	unmarshaled.set_ShouldApplicationPause_41(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70>(marshaled.___ShouldApplicationPause_41, _ShouldApplicationPause_t6A050B499A5F14155CA0903274091F13A35B2A70_il2cpp_TypeInfo_var));
	unmarshaled.set_ShouldApplicationReduceRenderingWork_42(il2cpp_codegen_marshal_function_ptr_to_delegate<_ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B>(marshaled.___ShouldApplicationReduceRenderingWork_42, _ShouldApplicationReduceRenderingWork_t9113213A7CBA57254A368217C661D23448831C4B_il2cpp_TypeInfo_var));
	unmarshaled.set_DriverDebugRequest_43(il2cpp_codegen_marshal_function_ptr_to_delegate<_DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B>(marshaled.___DriverDebugRequest_43, _DriverDebugRequest_t8456E250FF029B787D6B20D6A6ED9CB61871215B_il2cpp_TypeInfo_var));
	unmarshaled.set_PerformFirmwareUpdate_44(il2cpp_codegen_marshal_function_ptr_to_delegate<_PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F>(marshaled.___PerformFirmwareUpdate_44, _PerformFirmwareUpdate_t9D0FB9BF68C6D65C62D4A7C89C6C803BB34DAD9F_il2cpp_TypeInfo_var));
	unmarshaled.set_AcknowledgeQuit_Exiting_45(il2cpp_codegen_marshal_function_ptr_to_delegate<_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F>(marshaled.___AcknowledgeQuit_Exiting_45, _AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F_il2cpp_TypeInfo_var));
	unmarshaled.set_AcknowledgeQuit_UserPrompt_46(il2cpp_codegen_marshal_function_ptr_to_delegate<_AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228>(marshaled.___AcknowledgeQuit_UserPrompt_46, _AcknowledgeQuit_UserPrompt_t9721938A93B41A5D82277388A6E5FDB89DA3A228_il2cpp_TypeInfo_var));
}
// Conversion method for clean up from marshalling of: Valve.VR.IVRSystem
extern "C" void IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshal_com_cleanup(IVRSystem_t2954061947D0BD67FD306586BE5F4A8D7DBFC053_marshaled_com& marshaled)
{
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
#ifdef __clang__
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Winvalid-offsetof"
#pragma clang diagnostic ignored "-Wunused-variable"
#endif
extern "C"  void DelegatePInvokeWrapper__AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F (_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F * __this, const RuntimeMethod* method)
{
	typedef void (STDCALL *PInvokeFunc)();
	PInvokeFunc il2cppPInvokeFunc = reinterpret_cast<PInvokeFunc>(il2cpp_codegen_get_method_pointer(((RuntimeDelegate*)__this)->method));

	// Native function invocation
	il2cppPInvokeFunc();

}
// System.Void Valve.VR.IVRSystem__AcknowledgeQuit_Exiting::.ctor(System.Object,System.IntPtr)
extern "C" IL2CPP_METHOD_ATTR void _AcknowledgeQuit_Exiting__ctor_mE81776B3E258828FA2951005246CE013BF47B3E9 (_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F * __this, RuntimeObject * ___object0, intptr_t ___method1, const RuntimeMethod* method)
{
	__this->set_method_ptr_0(il2cpp_codegen_get_method_pointer((RuntimeMethod*)___method1));
	__this->set_method_3(___method1);
	__this->set_m_target_2(___object0);
}
// System.Void Valve.VR.IVRSystem__AcknowledgeQuit_Exiting::Invoke()
extern "C" IL2CPP_METHOD_ATTR void _AcknowledgeQuit_Exiting_Invoke_m162DFA5C2A158CD4DAB24A5F75ECFB36F16F6CCA (_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F * __this, const RuntimeMethod* method)
{
	DelegateU5BU5D_tDFCDEE2A6322F96C0FE49AF47E9ADB8C4B294E86* delegatesToInvoke = __this->get_delegates_11();
	if (delegatesToInvoke != NULL)
	{
		il2cpp_array_size_t length = delegatesToInvoke->max_length;
		for (il2cpp_array_size_t i = 0; i < length; i++)
		{
			Delegate_t* currentDelegate = (delegatesToInvoke)->GetAtUnchecked(static_cast<il2cpp_array_size_t>(i));
			Il2CppMethodPointer targetMethodPointer = currentDelegate->get_method_ptr_0();
			RuntimeMethod* targetMethod = (RuntimeMethod*)(currentDelegate->get_method_3());
			RuntimeObject* targetThis = currentDelegate->get_m_target_2();
			if (!il2cpp_codegen_method_is_virtual(targetMethod))
			{
				il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
			}
			bool ___methodIsStatic = MethodIsStatic(targetMethod);
			int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
			if (___methodIsStatic)
			{
				if (___parameterCount == 0)
				{
					// open
					typedef void (*FunctionPointerType) (const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetMethod);
				}
				else
				{
					// closed
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
			else
			{
				// closed
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
					{
						if (il2cpp_codegen_method_is_generic_instance(targetMethod))
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
							else
								GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
						}
						else
						{
							if (il2cpp_codegen_method_is_interface_method(targetMethod))
								InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
							else
								VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
						}
					}
				}
				else
				{
					typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
					((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
				}
			}
		}
	}
	else
	{
		Il2CppMethodPointer targetMethodPointer = __this->get_method_ptr_0();
		RuntimeMethod* targetMethod = (RuntimeMethod*)(__this->get_method_3());
		RuntimeObject* targetThis = __this->get_m_target_2();
		if (!il2cpp_codegen_method_is_virtual(targetMethod))
		{
			il2cpp_codegen_raise_execution_engine_exception_if_method_is_not_found(targetMethod);
		}
		bool ___methodIsStatic = MethodIsStatic(targetMethod);
		int ___parameterCount = il2cpp_codegen_method_parameter_count(targetMethod);
		if (___methodIsStatic)
		{
			if (___parameterCount == 0)
			{
				// open
				typedef void (*FunctionPointerType) (const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetMethod);
			}
			else
			{
				// closed
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
		else
		{
			// closed
			if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
			{
				if (il2cpp_codegen_method_is_virtual(targetMethod) && !il2cpp_codegen_object_is_of_sealed_type(targetThis) && il2cpp_codegen_delegate_has_invoker((Il2CppDelegate*)__this))
				{
					if (il2cpp_codegen_method_is_generic_instance(targetMethod))
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							GenericInterfaceActionInvoker0::Invoke(targetMethod, targetThis);
						else
							GenericVirtActionInvoker0::Invoke(targetMethod, targetThis);
					}
					else
					{
						if (il2cpp_codegen_method_is_interface_method(targetMethod))
							InterfaceActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), il2cpp_codegen_method_get_declaring_type(targetMethod), targetThis);
						else
							VirtActionInvoker0::Invoke(il2cpp_codegen_method_get_slot(targetMethod), targetThis);
					}
				}
			}
			else
			{
				typedef void (*FunctionPointerType) (void*, const RuntimeMethod*);
				((FunctionPointerType)targetMethodPointer)(targetThis, targetMethod);
			}
		}
	}
}
// System.IAsyncResult Valve.VR.IVRSystem__AcknowledgeQuit_Exiting::BeginInvoke(System.AsyncCallback,System.Object)
extern "C" IL2CPP_METHOD_ATTR RuntimeObject* _AcknowledgeQuit_Exiting_BeginInvoke_mDD382815CAA4279D001584DAD7162EBA5F1BF463 (_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F * __this, AsyncCallback_t3F3DA3BEDAEE81DD1D24125DF8EB30E85EE14DA4 * ___callback0, RuntimeObject * ___object1, const RuntimeMethod* method)
{
	void *__d_args[1] = {0};
	return (RuntimeObject*)il2cpp_codegen_delegate_begin_invoke((RuntimeDelegate*)__this, __d_args, (RuntimeDelegate*)___callback0, (RuntimeObject*)___object1);
}
// System.Void Valve.VR.IVRSystem__AcknowledgeQuit_Exiting::EndInvoke(System.IAsyncResult)
extern "C" IL2CPP_METHOD_ATTR void _AcknowledgeQuit_Exiting_EndInvoke_mCFEE8DD47EB89C4CD167937223D1616B6F2D7FD7 (_AcknowledgeQuit_Exiting_t35B0F20632A8118F94E183D58585BE8242D0CB1F * __this, RuntimeObject* ___result0, const RuntimeMethod* method)
{
	il2cpp_codegen_delegate_end_invoke((Il2CppAsyncResult*) ___result0, 0);
}
#ifdef __clang__
#pragma clang diagnostic pop
#endif
